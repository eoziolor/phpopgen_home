==========================================
SLURM_JOB_ID = 5435370
SLURM_NODELIST = c9-92
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
383
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 670724 sequences (80000044 bp)...
[M::process] 0 single-end sequences; 670724 paired-end sequences
[M::process] read 666508 sequences (80000249 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (20, 200278, 143, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (143, 267, 685)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1769)
[M::mem_pestat] mean and std.dev: (286.76, 250.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2311)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 153, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 454)
[M::mem_pestat] mean and std.dev: (166.99, 84.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 571)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 44, 333)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 949)
[M::mem_pestat] mean and std.dev: (139.97, 207.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1257)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (86, 182, 1172)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3344)
[M::mem_pestat] mean and std.dev: (318.44, 394.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4430)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 670724 reads in 690.928 CPU sec, 103.111 real sec
[M::process] 0 single-end sequences; 666508 paired-end sequences
[M::process] read 665150 sequences (80000168 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 198846, 169, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (71, 162, 498)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1352)
[M::mem_pestat] mean and std.dev: (218.85, 193.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1779)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 453)
[M::mem_pestat] mean and std.dev: (166.09, 84.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 570)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 66, 272)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (125.78, 157.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 995)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (92, 235, 735)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2021)
[M::mem_pestat] mean and std.dev: (220.79, 203.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2664)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 666508 reads in 691.428 CPU sec, 95.256 real sec
[M::process] 0 single-end sequences; 665150 paired-end sequences
[M::process] read 665072 sequences (80000220 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 198226, 149, 17)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (60, 248, 482)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1326)
[M::mem_pestat] mean and std.dev: (327.77, 343.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1748)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (166.87, 85.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 61, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1021)
[M::mem_pestat] mean and std.dev: (150.16, 205.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1352)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (161, 236, 674)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1700)
[M::mem_pestat] mean and std.dev: (299.73, 261.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2213)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 665150 reads in 692.588 CPU sec, 97.567 real sec
[M::process] 0 single-end sequences; 665072 paired-end sequences
[M::process] read 665746 sequences (80000125 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 197889, 137, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (91, 137, 442)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1144)
[M::mem_pestat] mean and std.dev: (222.61, 183.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1495)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (166.81, 85.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 49, 129)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 339)
[M::mem_pestat] mean and std.dev: (63.31, 65.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 444)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 172, 1528)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4378)
[M::mem_pestat] mean and std.dev: (467.45, 586.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5803)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 665072 reads in 696.732 CPU sec, 96.172 real sec
[M::process] 0 single-end sequences; 665746 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (24, 198794, 154, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (138, 261, 844)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2256)
[M::mem_pestat] mean and std.dev: (407.41, 466.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2962)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (167.34, 85.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 47, 231)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (103.39, 139.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 840)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 562, 2315)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6595)
[M::mem_pestat] mean and std.dev: (1257.43, 1631.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8735)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 665746 reads in 686.588 CPU sec, 95.165 real sec
[M::process] read 667178 sequences (80000228 bp)...
[M::process] 0 single-end sequences; 667178 paired-end sequences
[M::process] read 667286 sequences (80000045 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (18, 199440, 142, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (150, 324, 447)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1041)
[M::mem_pestat] mean and std.dev: (288.31, 170.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1338)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 153, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 460)
[M::mem_pestat] mean and std.dev: (167.84, 85.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 579)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 65, 307)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 859)
[M::mem_pestat] mean and std.dev: (134.79, 176.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1135)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 245, 3170)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9276)
[M::mem_pestat] mean and std.dev: (1629.28, 2526.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12329)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 667178 reads in 675.168 CPU sec, 98.589 real sec
[M::process] 0 single-end sequences; 667286 paired-end sequences
[M::process] read 666486 sequences (80000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (24, 198985, 124, 20)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (83, 162, 261)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 617)
[M::mem_pestat] mean and std.dev: (128.74, 70.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 456)
[M::mem_pestat] mean and std.dev: (166.75, 84.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 574)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 53, 307)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 865)
[M::mem_pestat] mean and std.dev: (146.01, 205.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1144)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (248, 581, 4090)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11774)
[M::mem_pestat] mean and std.dev: (2107.55, 2812.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15616)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 667286 reads in 684.448 CPU sec, 95.883 real sec
[M::process] 0 single-end sequences; 666486 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (23, 199155, 118, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (158, 316, 2813)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8123)
[M::mem_pestat] mean and std.dev: (1617.48, 2331.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10942)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 153, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (167.14, 85.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 45, 175)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 471)
[M::mem_pestat] mean and std.dev: (83.44, 98.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 619)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (93, 164, 933)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2613)
[M::mem_pestat] mean and std.dev: (380.33, 585.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3453)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 666486 reads in 682.240 CPU sec, 114.725 real sec
[M::process] read 665618 sequences (80000003 bp)...
[M::process] 0 single-end sequences; 665618 paired-end sequences
[M::process] read 666656 sequences (80000021 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (20, 199305, 152, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (151, 331, 761)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1981)
[M::mem_pestat] mean and std.dev: (360.53, 363.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2591)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 153, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (167.29, 85.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 47, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 563)
[M::mem_pestat] mean and std.dev: (89.41, 120.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 742)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 284, 1351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3785)
[M::mem_pestat] mean and std.dev: (829.73, 1040.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5002)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 665618 reads in 673.128 CPU sec, 95.844 real sec
[M::process] 0 single-end sequences; 666656 paired-end sequences
[M::process] read 671866 sequences (80000078 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (23, 198823, 157, 17)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 439, 614)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1440)
[M::mem_pestat] mean and std.dev: (369.63, 289.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1853)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 153, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 462)
[M::mem_pestat] mean and std.dev: (167.61, 85.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 582)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 56, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 835)
[M::mem_pestat] mean and std.dev: (120.53, 175.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1104)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 680, 4920)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14358)
[M::mem_pestat] mean and std.dev: (2273.06, 2704.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19077)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 666656 reads in 703.872 CPU sec, 97.389 real sec
[M::process] 0 single-end sequences; 671866 paired-end sequences
[M::process] read 674774 sequences (80000016 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 200276, 158, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (99, 199, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 663)
[M::mem_pestat] mean and std.dev: (187.85, 90.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 851)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (101, 151, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 458)
[M::mem_pestat] mean and std.dev: (166.28, 85.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 577)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 48, 314)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 888)
[M::mem_pestat] mean and std.dev: (126.87, 163.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1175)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (161, 239, 664)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1670)
[M::mem_pestat] mean and std.dev: (331.12, 280.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2173)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 671866 reads in 699.632 CPU sec, 102.367 real sec
[M::process] 0 single-end sequences; 674774 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (21, 200962, 158, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (209, 442, 1179)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3119)
[M::mem_pestat] mean and std.dev: (423.41, 317.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4089)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 453)
[M::mem_pestat] mean and std.dev: (165.93, 84.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 570)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 42, 126)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 330)
[M::mem_pestat] mean and std.dev: (64.12, 66.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 432)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 687, 3589)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10537)
[M::mem_pestat] mean and std.dev: (1743.33, 2449.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14011)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 674774 reads in 699.000 CPU sec, 114.127 real sec
[M::process] read 671912 sequences (80000065 bp)...
[M::process] 0 single-end sequences; 671912 paired-end sequences
[M::process] read 669440 sequences (80000223 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 200067, 174, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (157, 278, 746)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1924)
[M::mem_pestat] mean and std.dev: (337.08, 316.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2513)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (166.97, 85.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 47, 177)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 481)
[M::mem_pestat] mean and std.dev: (79.96, 93.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 633)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (297, 554, 1077)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2637)
[M::mem_pestat] mean and std.dev: (470.00, 307.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3417)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 671912 reads in 694.456 CPU sec, 99.867 real sec
[M::process] 0 single-end sequences; 669440 paired-end sequences
[M::process] read 669348 sequences (80000081 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (21, 199214, 149, 9)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (133, 213, 547)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1375)
[M::mem_pestat] mean and std.dev: (322.32, 317.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1789)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (101, 151, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 458)
[M::mem_pestat] mean and std.dev: (166.11, 85.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 577)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 47, 173)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 463)
[M::mem_pestat] mean and std.dev: (88.04, 105.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 608)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 669440 reads in 704.700 CPU sec, 97.372 real sec
[M::process] 0 single-end sequences; 669348 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (18, 199411, 174, 24)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (124, 353, 1596)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4540)
[M::mem_pestat] mean and std.dev: (860.53, 1188.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6012)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (167.13, 85.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 54, 249)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 691)
[M::mem_pestat] mean and std.dev: (123.24, 161.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 912)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 371, 823)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2119)
[M::mem_pestat] mean and std.dev: (357.90, 260.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2767)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 669348 reads in 701.964 CPU sec, 93.553 real sec
[M::process] read 670470 sequences (80000111 bp)...
[M::process] 0 single-end sequences; 670470 paired-end sequences
[M::process] read 672182 sequences (80000082 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 199959, 166, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (166, 502, 2487)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7129)
[M::mem_pestat] mean and std.dev: (1313.88, 1773.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9450)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (166.96, 86.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (19, 41, 167)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 463)
[M::mem_pestat] mean and std.dev: (71.62, 89.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 611)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 248, 570)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1448)
[M::mem_pestat] mean and std.dev: (240.91, 184.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1887)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 670470 reads in 698.128 CPU sec, 98.066 real sec
[M::process] 0 single-end sequences; 672182 paired-end sequences
[M::process] read 672768 sequences (80000008 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (26, 200442, 136, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (109, 289, 702)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1888)
[M::mem_pestat] mean and std.dev: (435.43, 446.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2481)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 151, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 453)
[M::mem_pestat] mean and std.dev: (165.87, 84.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 570)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 47, 321)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 911)
[M::mem_pestat] mean and std.dev: (126.81, 169.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1206)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (179, 317, 1409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3869)
[M::mem_pestat] mean and std.dev: (808.62, 1058.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5099)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 672182 reads in 716.932 CPU sec, 100.517 real sec
[M::process] 0 single-end sequences; 672768 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 200371, 161, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (123, 245, 414)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 996)
[M::mem_pestat] mean and std.dev: (216.36, 118.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1287)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 456)
[M::mem_pestat] mean and std.dev: (166.61, 85.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 574)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 52, 159)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (74.44, 86.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 549)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 200, 503)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1185)
[M::mem_pestat] mean and std.dev: (188.27, 111.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1526)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 672768 reads in 705.284 CPU sec, 95.344 real sec
[M::process] read 669944 sequences (80000089 bp)...
[M::process] 0 single-end sequences; 669944 paired-end sequences
[M::process] read 669272 sequences (80000060 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (19, 199290, 145, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (109, 228, 1449)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4129)
[M::mem_pestat] mean and std.dev: (659.76, 990.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5469)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (166.89, 85.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 47, 282)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 794)
[M::mem_pestat] mean and std.dev: (128.17, 165.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1050)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (125, 579, 4148)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12194)
[M::mem_pestat] mean and std.dev: (1780.00, 2040.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16217)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 669944 reads in 710.100 CPU sec, 98.915 real sec
[M::process] 0 single-end sequences; 669272 paired-end sequences
[M::process] read 675832 sequences (80000152 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (20, 199320, 159, 9)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (131, 591, 1966)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5636)
[M::mem_pestat] mean and std.dev: (1123.75, 1412.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7471)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 456)
[M::mem_pestat] mean and std.dev: (166.10, 85.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 574)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 42, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 566)
[M::mem_pestat] mean and std.dev: (87.94, 115.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 746)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 669272 reads in 709.804 CPU sec, 98.910 real sec
[M::process] 0 single-end sequences; 675832 paired-end sequences
Finished in 3177.75 s (404 us/read; 0.15 M reads/minute).

=== Summary ===

Total read pairs processed:          7,875,347
  Read 1 with adapter:               2,749,779 (34.9%)
  Read 2 with adapter:               2,611,312 (33.2%)
Pairs that were too short:             676,724 (8.6%)
Pairs written (passing filters):     7,198,623 (91.4%)

Total basepairs processed: 2,362,604,100 bp
  Read 1: 1,181,302,050 bp
  Read 2: 1,181,302,050 bp
Quality-trimmed:             398,306,858 bp (16.9%)
  Read 1:   199,153,429 bp
  Read 2:   199,153,429 bp
Total written (filtered):  1,720,749,521 bp (72.8%)
  Read 1:   875,647,093 bp
  Read 2:   845,102,428 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 2749779 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.2%
  C: 39.2%
  G: 28.5%
  T: 20.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	139728	123052.3	0	139728
4	66641	30763.1	0	66641
5	40093	7690.8	0	40093
6	35116	1922.7	0	35116
7	34876	480.7	0	34876
8	34008	120.2	0	34008
9	32657	30.0	0	32426 231
10	32939	7.5	1	31832 1107
11	35783	1.9	1	34675 1108
12	37960	0.5	1	36707 1253
13	35893	0.5	1	34829 1064
14	36914	0.5	1	35733 1181
15	37233	0.5	1	35970 1263
16	37042	0.5	1	35673 1369
17	40764	0.5	1	39505 1259
18	34809	0.5	1	33816 993
19	40681	0.5	1	39456 1225
20	38987	0.5	1	37846 1141
21	43384	0.5	1	42102 1282
22	40397	0.5	1	39285 1112
23	31204	0.5	1	30510 694
24	31963	0.5	1	31304 659
25	36018	0.5	1	35083 935
26	33543	0.5	1	32718 825
27	36746	0.5	1	35673 1073
28	32353	0.5	1	31608 745
29	37235	0.5	1	36133 1102
30	41356	0.5	1	40239 1117
31	32436	0.5	1	31644 792
32	38888	0.5	1	37887 1001
33	33729	0.5	1	32860 869
34	35570	0.5	1	34711 859
35	38669	0.5	1	37808 861
36	31106	0.5	1	30435 671
37	38316	0.5	1	37491 825
38	31480	0.5	1	30846 634
39	40373	0.5	1	39476 897
40	29661	0.5	1	29080 581
41	38909	0.5	1	37865 1044
42	52023	0.5	1	50878 1145
43	44380	0.5	1	43612 768
44	26257	0.5	1	25796 461
45	55450	0.5	1	54761 689
46	10951	0.5	1	10732 219
47	17328	0.5	1	17023 305
48	25398	0.5	1	24986 412
49	29429	0.5	1	28901 528
50	28812	0.5	1	28385 427
51	27653	0.5	1	27186 467
52	28252	0.5	1	27823 429
53	29863	0.5	1	29396 467
54	26521	0.5	1	26127 394
55	32555	0.5	1	32116 439
56	24472	0.5	1	24161 311
57	28566	0.5	1	28136 430
58	27534	0.5	1	27165 369
59	26336	0.5	1	25939 397
60	24946	0.5	1	24660 286
61	25612	0.5	1	25239 373
62	24427	0.5	1	24107 320
63	32212	0.5	1	31752 460
64	28168	0.5	1	27858 310
65	22858	0.5	1	22606 252
66	32528	0.5	1	32169 359
67	25526	0.5	1	25201 325
68	22179	0.5	1	21881 298
69	29946	0.5	1	29469 477
70	32084	0.5	1	31587 497
71	41492	0.5	1	40561 931
72	287436	0.5	1	285805 1631
73	7153	0.5	1	6886 267
74	853	0.5	1	793 60
75	604	0.5	1	550 54
76	630	0.5	1	579 51
77	860	0.5	1	791 69
78	958	0.5	1	896 62
79	1187	0.5	1	1108 79
80	1278	0.5	1	1195 83
81	1441	0.5	1	1362 79
82	1345	0.5	1	1273 72
83	1390	0.5	1	1296 94
84	1083	0.5	1	992 91
85	996	0.5	1	911 85
86	853	0.5	1	793 60
87	762	0.5	1	683 79
88	660	0.5	1	601 59
89	730	0.5	1	652 78
90	630	0.5	1	571 59
91	661	0.5	1	579 82
92	594	0.5	1	531 63
93	589	0.5	1	519 70
94	517	0.5	1	455 62
95	589	0.5	1	528 61
96	416	0.5	1	368 48
97	510	0.5	1	428 82
98	363	0.5	1	313 50
99	432	0.5	1	377 55
100	378	0.5	1	322 56
101	405	0.5	1	347 58
102	297	0.5	1	251 46
103	366	0.5	1	304 62
104	282	0.5	1	244 38
105	319	0.5	1	260 59
106	223	0.5	1	172 51
107	252	0.5	1	209 43
108	188	0.5	1	146 42
109	204	0.5	1	164 40
110	162	0.5	1	113 49
111	188	0.5	1	140 48
112	121	0.5	1	80 41
113	152	0.5	1	117 35
114	132	0.5	1	80 52
115	111	0.5	1	77 34
116	90	0.5	1	40 50
117	91	0.5	1	49 42
118	63	0.5	1	27 36
119	78	0.5	1	42 36
120	67	0.5	1	20 47
121	69	0.5	1	28 41
122	52	0.5	1	7 45
123	55	0.5	1	13 42
124	47	0.5	1	4 43
125	53	0.5	1	9 44
126	32	0.5	1	2 30
127	45	0.5	1	12 33
128	48	0.5	1	2 46
129	44	0.5	1	11 33
130	44	0.5	1	0 44
131	31	0.5	1	3 28
132	37	0.5	1	0 37
133	34	0.5	1	1 33
134	46	0.5	1	1 45
135	39	0.5	1	2 37
136	35	0.5	1	0 35
137	48	0.5	1	3 45
138	45	0.5	1	0 45
139	24	0.5	1	1 23
140	44	0.5	1	2 42

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 2611312 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.2%
  C: 39.4%
  G: 28.0%
  T: 20.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	141050	123052.3	0	141050
4	60365	30763.1	0	60365
5	39036	7690.8	0	39036
6	30652	1922.7	0	30652
7	32375	480.7	0	32375
8	30297	120.2	0	30297
9	29038	30.0	0	28833 205
10	29520	7.5	1	28447 1073
11	32554	1.9	1	31323 1231
12	34211	0.5	1	32979 1232
13	33283	0.5	1	32076 1207
14	32636	0.5	1	31355 1281
15	37279	0.5	1	35664 1615
16	36890	0.5	1	35315 1575
17	34395	0.5	1	33125 1270
18	35113	0.5	1	33913 1200
19	40630	0.5	1	39146 1484
20	38011	0.5	1	36791 1220
21	32146	0.5	1	31178 968
22	33917	0.5	1	32940 977
23	31536	0.5	1	30627 909
24	36157	0.5	1	35042 1115
25	33447	0.5	1	32548 899
26	37866	0.5	1	36684 1182
27	33889	0.5	1	32959 930
28	31628	0.5	1	30829 799
29	32498	0.5	1	31664 834
30	29902	0.5	1	29081 821
31	31382	0.5	1	30559 823
32	34952	0.5	1	34084 868
33	31299	0.5	1	30365 934
34	31702	0.5	1	30973 729
35	30055	0.5	1	29293 762
36	38294	0.5	1	37348 946
37	25066	0.5	1	24551 515
38	28853	0.5	1	28297 556
39	35259	0.5	1	34430 829
40	29877	0.5	1	29329 548
41	25438	0.5	1	24920 518
42	28686	0.5	1	28043 643
43	28418	0.5	1	27657 761
44	29871	0.5	1	29106 765
45	32940	0.5	1	31939 1001
46	32273	0.5	1	31369 904
47	34009	0.5	1	33164 845
48	27660	0.5	1	27077 583
49	30424	0.5	1	29674 750
50	30603	0.5	1	29966 637
51	29279	0.5	1	28601 678
52	31615	0.5	1	30934 681
53	32827	0.5	1	32040 787
54	39370	0.5	1	38519 851
55	23046	0.5	1	22547 499
56	30646	0.5	1	29902 744
57	37175	0.5	1	36362 813
58	23291	0.5	1	22823 468
59	21634	0.5	1	21255 379
60	28200	0.5	1	27690 510
61	23627	0.5	1	23147 480
62	21624	0.5	1	21210 414
63	44707	0.5	1	44028 679
64	12337	0.5	1	12073 264
65	18506	0.5	1	18247 259
66	14540	0.5	1	14321 219
67	21310	0.5	1	20948 362
68	21629	0.5	1	21311 318
69	22662	0.5	1	22350 312
70	17629	0.5	1	17359 270
71	20794	0.5	1	20432 362
72	20527	0.5	1	20177 350
73	22024	0.5	1	21520 504
74	24181	0.5	1	23710 471
75	30303	0.5	1	29440 863
76	250619	0.5	1	248916 1703
77	5887	0.5	1	5635 252
78	1206	0.5	1	1136 70
79	1141	0.5	1	1082 59
80	1081	0.5	1	1042 39
81	1152	0.5	1	1091 61
82	993	0.5	1	938 55
83	1299	0.5	1	1236 63
84	2154	0.5	1	2082 72
85	2201	0.5	1	2119 82
86	2490	0.5	1	2432 58
87	1942	0.5	1	1875 67
88	1408	0.5	1	1352 56
89	808	0.5	1	756 52
90	528	0.5	1	489 39
91	430	0.5	1	369 61
92	352	0.5	1	304 48
93	378	0.5	1	329 49
94	297	0.5	1	255 42
95	323	0.5	1	283 40
96	229	0.5	1	188 41
97	238	0.5	1	194 44
98	189	0.5	1	151 38
99	195	0.5	1	157 38
100	219	0.5	1	183 36
101	208	0.5	1	163 45
102	162	0.5	1	123 39
103	178	0.5	1	130 48
104	119	0.5	1	78 41
105	124	0.5	1	91 33
106	107	0.5	1	75 32
107	103	0.5	1	68 35
108	82	0.5	1	43 39
109	102	0.5	1	53 49
110	97	0.5	1	49 48
111	94	0.5	1	54 40
112	103	0.5	1	62 41
113	68	0.5	1	39 29
114	73	0.5	1	33 40
115	52	0.5	1	28 24
116	56	0.5	1	21 35
117	63	0.5	1	20 43
118	50	0.5	1	14 36
119	52	0.5	1	16 36
120	41	0.5	1	8 33
121	63	0.5	1	17 46
122	56	0.5	1	9 47
123	45	0.5	1	9 36
124	53	0.5	1	6 47
125	44	0.5	1	8 36
126	36	0.5	1	2 34
127	30	0.5	1	3 27
128	34	0.5	1	2 32
129	25	0.5	1	3 22
130	33	0.5	1	0 33
131	50	0.5	1	6 44
132	35	0.5	1	1 34
133	35	0.5	1	3 32
134	32	0.5	1	0 32
135	32	0.5	1	3 29
136	27	0.5	1	1 26
137	36	0.5	1	0 36
138	35	0.5	1	0 35
139	28	0.5	1	1 27
140	25	0.5	1	0 25

[M::process] read 343014 sequences (40747260 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (23, 201171, 161, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 308, 859)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2341)
[M::mem_pestat] mean and std.dev: (302.56, 272.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3082)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 456)
[M::mem_pestat] mean and std.dev: (166.49, 85.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 574)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 49, 184)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 502)
[M::mem_pestat] mean and std.dev: (71.41, 89.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 661)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (125, 523, 1357)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3821)
[M::mem_pestat] mean and std.dev: (454.62, 476.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5053)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 675832 reads in 712.596 CPU sec, 94.249 real sec
[M::process] 0 single-end sequences; 343014 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 101964, 73, 9)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (100, 290, 691)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1873)
[M::mem_pestat] mean and std.dev: (295.53, 228.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2464)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 459)
[M::mem_pestat] mean and std.dev: (167.18, 86.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 57, 308)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 868)
[M::mem_pestat] mean and std.dev: (122.91, 168.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1148)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 343014 reads in 363.764 CPU sec, 51.326 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0383\tPL:Illumina\tPU:x\tLB:pherring\tSM:0383.BC17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 3346.345 sec; CPU: 15014.632 sec
[bam_sort_core] merging from 6 files and 1 in-memory blocks...
