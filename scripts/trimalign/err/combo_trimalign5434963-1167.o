==========================================
SLURM_JOB_ID = 5436154
SLURM_NODELIST = c9-69
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1167
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 642748 sequences (80000041 bp)...
[M::process] 0 single-end sequences; 642748 paired-end sequences
[M::process] read 644424 sequences (80000273 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 177696, 174, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (334, 628, 4451)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12685)
[M::mem_pestat] mean and std.dev: (2564.79, 3045.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16802)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (148, 261, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 862)
[M::mem_pestat] mean and std.dev: (276.92, 155.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1100)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 75, 358)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1020)
[M::mem_pestat] mean and std.dev: (143.25, 205.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1351)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (314, 1222, 7438)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 21686)
[M::mem_pestat] mean and std.dev: (3392.52, 3480.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 28810)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 642748 reads in 848.672 CPU sec, 118.991 real sec
[M::process] 0 single-end sequences; 644424 paired-end sequences
[M::process] read 644746 sequences (80000233 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 177791, 162, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (158, 655, 2444)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7016)
[M::mem_pestat] mean and std.dev: (1370.40, 1788.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9302)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 259, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 863)
[M::mem_pestat] mean and std.dev: (275.60, 155.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1102)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 90, 437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1255)
[M::mem_pestat] mean and std.dev: (177.68, 260.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1664)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 458, 715)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1741)
[M::mem_pestat] mean and std.dev: (403.15, 298.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2254)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 644424 reads in 859.536 CPU sec, 119.469 real sec
[M::process] 0 single-end sequences; 644746 paired-end sequences
[M::process] read 643766 sequences (80000273 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 177614, 174, 37)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (169, 502, 3618)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10516)
[M::mem_pestat] mean and std.dev: (2027.34, 2721.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13965)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (147, 261, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 864)
[M::mem_pestat] mean and std.dev: (276.44, 155.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1103)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 76, 314)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 882)
[M::mem_pestat] mean and std.dev: (131.00, 167.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1166)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (194, 242, 1242)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3338)
[M::mem_pestat] mean and std.dev: (447.71, 550.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4386)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 644746 reads in 860.028 CPU sec, 116.829 real sec
[M::process] 0 single-end sequences; 643766 paired-end sequences
[M::process] read 640694 sequences (80000111 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 178148, 163, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (466, 1101, 3732)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10264)
[M::mem_pestat] mean and std.dev: (2150.92, 2177.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13530)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (147, 260, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 864)
[M::mem_pestat] mean and std.dev: (276.75, 155.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1103)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 76, 409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1159)
[M::mem_pestat] mean and std.dev: (200.51, 273.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1534)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (341, 607, 3293)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9197)
[M::mem_pestat] mean and std.dev: (1932.36, 2439.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12149)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 643766 reads in 842.852 CPU sec, 116.131 real sec
[M::process] 0 single-end sequences; 640694 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (47, 177062, 160, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 402, 908)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2316)
[M::mem_pestat] mean and std.dev: (421.42, 373.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3020)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (148, 262, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 865)
[M::mem_pestat] mean and std.dev: (277.96, 156.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1104)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 136, 827)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2423)
[M::mem_pestat] mean and std.dev: (321.73, 496.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3221)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (176, 520, 1668)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4652)
[M::mem_pestat] mean and std.dev: (954.17, 1190.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6144)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 640694 reads in 847.296 CPU sec, 111.964 real sec
[M::process] read 643132 sequences (80000078 bp)...
[M::process] 0 single-end sequences; 643132 paired-end sequences
[M::process] read 653532 sequences (80000008 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 177487, 156, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (161, 336, 710)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1808)
[M::mem_pestat] mean and std.dev: (291.22, 184.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2357)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 260, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 863)
[M::mem_pestat] mean and std.dev: (276.01, 155.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1102)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 54, 239)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 665)
[M::mem_pestat] mean and std.dev: (98.47, 127.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 878)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (396, 1154, 3451)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9561)
[M::mem_pestat] mean and std.dev: (2042.91, 2257.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12616)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 643132 reads in 852.232 CPU sec, 145.448 real sec
[M::process] 0 single-end sequences; 653532 paired-end sequences
[M::process] read 659268 sequences (80000061 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 179837, 163, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (209, 373, 1984)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5534)
[M::mem_pestat] mean and std.dev: (699.24, 1083.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7309)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 258, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 854)
[M::mem_pestat] mean and std.dev: (273.77, 153.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1090)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 63, 337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 953)
[M::mem_pestat] mean and std.dev: (134.39, 194.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1261)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (179, 457, 1284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3494)
[M::mem_pestat] mean and std.dev: (663.64, 813.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4599)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 653532 reads in 849.728 CPU sec, 119.305 real sec
[M::process] 0 single-end sequences; 659268 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 179736, 165, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (168, 263, 3014)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8706)
[M::mem_pestat] mean and std.dev: (1530.26, 2331.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11552)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (145, 250, 368)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 814)
[M::mem_pestat] mean and std.dev: (265.07, 144.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (37, 93, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1042)
[M::mem_pestat] mean and std.dev: (160.37, 202.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1377)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (346, 589, 3494)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9790)
[M::mem_pestat] mean and std.dev: (1828.38, 2167.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12938)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 664730 sequences (80000136 bp)...
[M::mem_process_seqs] Processed 659268 reads in 868.728 CPU sec, 123.914 real sec
[M::process] 0 single-end sequences; 664730 paired-end sequences
[M::process] read 662936 sequences (80000269 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 181036, 165, 36)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 270, 2597)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7423)
[M::mem_pestat] mean and std.dev: (1141.06, 1874.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9836)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (143, 247, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 809)
[M::mem_pestat] mean and std.dev: (262.35, 144.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1031)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 99, 556)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1604)
[M::mem_pestat] mean and std.dev: (201.44, 286.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2128)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (187, 359, 1131)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3019)
[M::mem_pestat] mean and std.dev: (452.53, 461.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3963)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 664730 reads in 873.564 CPU sec, 121.256 real sec
[M::process] 0 single-end sequences; 662936 paired-end sequences
[M::process] read 663016 sequences (80000009 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 180484, 177, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (227, 448, 3255)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9311)
[M::mem_pestat] mean and std.dev: (1502.74, 2200.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12339)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (144, 249, 368)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 816)
[M::mem_pestat] mean and std.dev: (264.67, 145.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1040)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 81, 524)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1520)
[M::mem_pestat] mean and std.dev: (181.03, 266.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2018)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 361, 1246)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3388)
[M::mem_pestat] mean and std.dev: (675.73, 886.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4459)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662936 reads in 874.340 CPU sec, 118.494 real sec
[M::process] 0 single-end sequences; 663016 paired-end sequences
Finished in 1921.14 s (418 us/read; 0.14 M reads/minute).

=== Summary ===

Total read pairs processed:          4,591,187
  Read 1 with adapter:                 878,647 (19.1%)
  Read 2 with adapter:                 839,866 (18.3%)
Pairs that were too short:             695,721 (15.2%)
Pairs written (passing filters):     3,895,466 (84.8%)

Total basepairs processed: 1,377,356,100 bp
  Read 1:   688,678,050 bp
  Read 2:   688,678,050 bp
Quality-trimmed:             363,950,818 bp (26.4%)
  Read 1:   181,975,409 bp
  Read 2:   181,975,409 bp
Total written (filtered):    955,295,126 bp (69.4%)
  Read 1:   489,581,494 bp
  Read 2:   465,713,632 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 878647 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.7%
  C: 39.0%
  G: 28.9%
  T: 19.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	79143	71737.3	0	79143
4	32357	17934.3	0	32357
5	13902	4483.6	0	13902
6	10884	1120.9	0	10884
7	10201	280.2	0	10201
8	9137	70.1	0	9137
9	8846	17.5	0	8684 162
10	8729	4.4	1	8096 633
11	9616	1.1	1	9075 541
12	9907	0.3	1	9342 565
13	9762	0.3	1	9303 459
14	10003	0.3	1	9415 588
15	10713	0.3	1	10029 684
16	10693	0.3	1	9904 789
17	11182	0.3	1	10594 588
18	9785	0.3	1	9271 514
19	11187	0.3	1	10653 534
20	11301	0.3	1	10726 575
21	13162	0.3	1	12498 664
22	11566	0.3	1	11076 490
23	7972	0.3	1	7694 278
24	7349	0.3	1	7095 254
25	9658	0.3	1	9247 411
26	8702	0.3	1	8382 320
27	10606	0.3	1	10112 494
28	8443	0.3	1	8121 322
29	11927	0.3	1	11335 592
30	12300	0.3	1	11845 455
31	8968	0.3	1	8611 357
32	9659	0.3	1	9312 347
33	9556	0.3	1	9165 391
34	9004	0.3	1	8681 323
35	10437	0.3	1	10024 413
36	10129	0.3	1	9786 343
37	10294	0.3	1	9976 318
38	8582	0.3	1	8317 265
39	12582	0.3	1	12107 475
40	10062	0.3	1	9756 306
41	10598	0.3	1	10295 303
42	10550	0.3	1	10288 262
43	13377	0.3	1	12961 416
44	8049	0.3	1	7848 201
45	17879	0.3	1	17487 392
46	3971	0.3	1	3852 119
47	5846	0.3	1	5691 155
48	6825	0.3	1	6714 111
49	8430	0.3	1	8227 203
50	8597	0.3	1	8435 162
51	8337	0.3	1	8148 189
52	7181	0.3	1	7023 158
53	8650	0.3	1	8459 191
54	7795	0.3	1	7622 173
55	9287	0.3	1	9102 185
56	6827	0.3	1	6688 139
57	9099	0.3	1	8899 200
58	8054	0.3	1	7923 131
59	8368	0.3	1	8180 188
60	7595	0.3	1	7451 144
61	8771	0.3	1	8591 180
62	7174	0.3	1	7025 149
63	11167	0.3	1	10986 181
64	8885	0.3	1	8747 138
65	8016	0.3	1	7862 154
66	11752	0.3	1	11589 163
67	9042	0.3	1	8869 173
68	7876	0.3	1	7719 157
69	11151	0.3	1	10893 258
70	12497	0.3	1	12308 189
71	16313	0.3	1	15896 417
72	93643	0.3	1	93036 607
73	6597	0.3	1	6424 173
74	860	0.3	1	798 62
75	463	0.3	1	396 67
76	346	0.3	1	298 48
77	344	0.3	1	289 55
78	334	0.3	1	296 38
79	439	0.3	1	378 61
80	423	0.3	1	384 39
81	533	0.3	1	494 39
82	460	0.3	1	414 46
83	463	0.3	1	425 38
84	372	0.3	1	314 58
85	334	0.3	1	290 44
86	307	0.3	1	261 46
87	359	0.3	1	292 67
88	263	0.3	1	232 31
89	305	0.3	1	252 53
90	239	0.3	1	206 33
91	303	0.3	1	251 52
92	235	0.3	1	187 48
93	259	0.3	1	225 34
94	224	0.3	1	178 46
95	287	0.3	1	234 53
96	208	0.3	1	171 37
97	245	0.3	1	197 48
98	191	0.3	1	157 34
99	238	0.3	1	184 54
100	216	0.3	1	168 48
101	199	0.3	1	156 43
102	171	0.3	1	146 25
103	204	0.3	1	151 53
104	123	0.3	1	97 26
105	152	0.3	1	123 29
106	96	0.3	1	71 25
107	157	0.3	1	127 30
108	106	0.3	1	73 33
109	142	0.3	1	106 36
110	105	0.3	1	77 28
111	127	0.3	1	96 31
112	79	0.3	1	48 31
113	105	0.3	1	72 33
114	75	0.3	1	42 33
115	94	0.3	1	59 35
116	64	0.3	1	24 40
117	62	0.3	1	29 33
118	44	0.3	1	23 21
119	69	0.3	1	36 33
120	52	0.3	1	19 33
121	86	0.3	1	24 62
122	34	0.3	1	10 24
123	48	0.3	1	21 27
124	27	0.3	1	3 24
125	46	0.3	1	19 27
126	34	0.3	1	4 30
127	33	0.3	1	9 24
128	30	0.3	1	2 28
129	33	0.3	1	7 26
130	23	0.3	1	4 19
131	29	0.3	1	5 24
132	31	0.3	1	2 29
133	26	0.3	1	4 22
134	39	0.3	1	1 38
135	15	0.3	1	2 13
136	27	0.3	1	0 27
137	19	0.3	1	4 15
138	30	0.3	1	1 29
139	26	0.3	1	0 26
140	30	0.3	1	0 30

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 839866 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.6%
  C: 39.3%
  G: 28.5%
  T: 19.4%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	72504	71737.3	0	72504
4	27220	17934.3	0	27220
5	12874	4483.6	0	12874
6	9741	1120.9	0	9741
7	9338	280.2	0	9338
8	7966	70.1	0	7966
9	8078	17.5	0	7952 126
10	7849	4.4	1	7303 546
11	8874	1.1	1	8353 521
12	9349	0.3	1	8770 579
13	8913	0.3	1	8432 481
14	9486	0.3	1	8861 625
15	10917	0.3	1	10149 768
16	10924	0.3	1	10163 761
17	10444	0.3	1	9787 657
18	9935	0.3	1	9379 556
19	12356	0.3	1	11638 718
20	9901	0.3	1	9480 421
21	8426	0.3	1	8041 385
22	9991	0.3	1	9524 467
23	7577	0.3	1	7262 315
24	9364	0.3	1	8924 440
25	9447	0.3	1	9048 399
26	9104	0.3	1	8734 370
27	8954	0.3	1	8610 344
28	8851	0.3	1	8529 322
29	8980	0.3	1	8712 268
30	7816	0.3	1	7536 280
31	9559	0.3	1	9154 405
32	9267	0.3	1	8948 319
33	8535	0.3	1	8128 407
34	8096	0.3	1	7835 261
35	8581	0.3	1	8250 331
36	11053	0.3	1	10621 432
37	6963	0.3	1	6777 186
38	8061	0.3	1	7796 265
39	9651	0.3	1	9320 331
40	7783	0.3	1	7579 204
41	7608	0.3	1	7371 237
42	7870	0.3	1	7644 226
43	8513	0.3	1	8203 310
44	8151	0.3	1	7901 250
45	9860	0.3	1	9519 341
46	10624	0.3	1	10286 338
47	9211	0.3	1	8957 254
48	8415	0.3	1	8159 256
49	8483	0.3	1	8248 235
50	9180	0.3	1	8860 320
51	8836	0.3	1	8564 272
52	10037	0.3	1	9768 269
53	9599	0.3	1	9339 260
54	11446	0.3	1	11140 306
55	7359	0.3	1	7176 183
56	9032	0.3	1	8805 227
57	10968	0.3	1	10746 222
58	6033	0.3	1	5894 139
59	7088	0.3	1	6922 166
60	7750	0.3	1	7613 137
61	7503	0.3	1	7349 154
62	7206	0.3	1	7046 160
63	12506	0.3	1	12276 230
64	5052	0.3	1	4926 126
65	6550	0.3	1	6390 160
66	4923	0.3	1	4827 96
67	7591	0.3	1	7425 166
68	7139	0.3	1	6995 144
69	7667	0.3	1	7508 159
70	6162	0.3	1	6060 102
71	7617	0.3	1	7460 157
72	7371	0.3	1	7208 163
73	8749	0.3	1	8480 269
74	9569	0.3	1	9284 285
75	13807	0.3	1	13339 468
76	95041	0.3	1	93989 1052
77	6166	0.3	1	5966 200
78	852	0.3	1	800 52
79	521	0.3	1	475 46
80	466	0.3	1	422 44
81	443	0.3	1	391 52
82	374	0.3	1	323 51
83	500	0.3	1	467 33
84	828	0.3	1	783 45
85	834	0.3	1	796 38
86	999	0.3	1	954 45
87	771	0.3	1	728 43
88	584	0.3	1	542 42
89	350	0.3	1	314 36
90	167	0.3	1	132 35
91	165	0.3	1	125 40
92	121	0.3	1	90 31
93	142	0.3	1	109 33
94	121	0.3	1	90 31
95	130	0.3	1	99 31
96	85	0.3	1	59 26
97	114	0.3	1	87 27
98	81	0.3	1	56 25
99	103	0.3	1	67 36
100	103	0.3	1	74 29
101	107	0.3	1	73 34
102	87	0.3	1	60 27
103	85	0.3	1	66 19
104	81	0.3	1	40 41
105	62	0.3	1	42 20
106	49	0.3	1	29 20
107	62	0.3	1	37 25
108	51	0.3	1	14 37
109	78	0.3	1	43 35
110	61	0.3	1	32 29
111	55	0.3	1	35 20
112	40	0.3	1	9 31
113	37	0.3	1	16 21
114	40	0.3	1	15 25
115	51	0.3	1	23 28
116	40	0.3	1	12 28
117	40	0.3	1	18 22
118	26	0.3	1	3 23
119	38	0.3	1	17 21
120	30	0.3	1	7 23
121	42	0.3	1	12 30
122	33	0.3	1	6 27
123	27	0.3	1	9 18
124	35	0.3	1	2 33
125	31	0.3	1	7 24
126	26	0.3	1	5 21
127	33	0.3	1	7 26
128	17	0.3	1	2 15
129	26	0.3	1	5 21
130	13	0.3	1	2 11
131	24	0.3	1	1 23
132	22	0.3	1	0 22
133	23	0.3	1	1 22
134	28	0.3	1	1 27
135	14	0.3	1	0 14
136	18	0.3	1	0 18
137	9	0.3	1	0 9
138	17	0.3	1	0 17
139	19	0.3	1	2 17
140	25	0.3	1	0 25

[M::process] read 627940 sequences (75293634 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 180643, 144, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 199, 405)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 965)
[M::mem_pestat] mean and std.dev: (239.12, 180.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1245)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (143, 245, 363)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 803)
[M::mem_pestat] mean and std.dev: (261.29, 143.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 129, 645)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1867)
[M::mem_pestat] mean and std.dev: (279.25, 381.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2478)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (166, 330, 2143)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6097)
[M::mem_pestat] mean and std.dev: (1111.17, 1507.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8074)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 663016 reads in 888.372 CPU sec, 119.421 real sec
[M::process] 0 single-end sequences; 627940 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 170199, 154, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (255, 567, 4535)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13095)
[M::mem_pestat] mean and std.dev: (2272.93, 2919.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17375)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (140, 242, 362)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 806)
[M::mem_pestat] mean and std.dev: (258.88, 144.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1028)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 57, 463)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1341)
[M::mem_pestat] mean and std.dev: (159.03, 239.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1780)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (200, 607, 2152)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6056)
[M::mem_pestat] mean and std.dev: (1159.45, 1487.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8008)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 627940 reads in 837.116 CPU sec, 110.145 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1167\tPL:Illumina\tPU:x\tLB:pherring\tSM:1167.TB17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2117.761 sec; CPU: 10314.180 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
