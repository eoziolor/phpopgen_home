==========================================
SLURM_JOB_ID = 5436256
SLURM_NODELIST = c10-68
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1269
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 649786 sequences (80000065 bp)...
[M::process] 0 single-end sequences; 649786 paired-end sequences
[M::process] read 652346 sequences (80000013 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 142574, 135, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (236, 406, 970)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2438)
[M::mem_pestat] mean and std.dev: (439.93, 398.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3172)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (156, 284, 424)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 960)
[M::mem_pestat] mean and std.dev: (303.67, 179.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1228)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (37, 78, 696)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2014)
[M::mem_pestat] mean and std.dev: (251.93, 413.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2673)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (262, 468, 1256)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3244)
[M::mem_pestat] mean and std.dev: (610.47, 681.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4238)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 649786 reads in 761.892 CPU sec, 135.748 real sec
[M::process] 0 single-end sequences; 652346 paired-end sequences
[M::process] read 653688 sequences (80000276 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 142673, 162, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (282, 362, 756)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1704)
[M::mem_pestat] mean and std.dev: (425.38, 262.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2178)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (151, 279, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 958)
[M::mem_pestat] mean and std.dev: (300.04, 180.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1227)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 74, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1207)
[M::mem_pestat] mean and std.dev: (172.69, 262.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1601)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (251, 434, 854)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2060)
[M::mem_pestat] mean and std.dev: (398.78, 285.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2663)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 652346 reads in 734.408 CPU sec, 126.739 real sec
[M::process] 0 single-end sequences; 653688 paired-end sequences
[M::process] read 650604 sequences (80000200 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 142750, 154, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (150, 339, 885)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2355)
[M::mem_pestat] mean and std.dev: (412.91, 425.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3090)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (152, 284, 425)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 971)
[M::mem_pestat] mean and std.dev: (303.42, 181.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1244)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 75, 311)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 877)
[M::mem_pestat] mean and std.dev: (128.71, 158.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1160)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 408, 1008)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2540)
[M::mem_pestat] mean and std.dev: (546.72, 543.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3306)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 653688 reads in 733.640 CPU sec, 151.022 real sec
[M::process] 0 single-end sequences; 650604 paired-end sequences
[M::process] read 649412 sequences (80000035 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 142459, 158, 42)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (156, 406, 4072)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11904)
[M::mem_pestat] mean and std.dev: (1797.03, 2328.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15820)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (155, 285, 426)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 968)
[M::mem_pestat] mean and std.dev: (304.65, 179.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1239)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (35, 72, 534)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1532)
[M::mem_pestat] mean and std.dev: (215.46, 344.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2031)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (295, 620, 1770)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4720)
[M::mem_pestat] mean and std.dev: (846.76, 892.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6195)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 650604 reads in 680.992 CPU sec, 126.583 real sec
[M::process] 0 single-end sequences; 649412 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 142469, 139, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 344, 2426)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6892)
[M::mem_pestat] mean and std.dev: (1219.08, 1760.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9125)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (153, 281, 423)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (301.99, 180.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1233)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 64, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1206)
[M::mem_pestat] mean and std.dev: (170.66, 258.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1599)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 372, 3534)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10190)
[M::mem_pestat] mean and std.dev: (2019.16, 3055.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14241)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 650404 sequences (80000172 bp)...
[M::mem_process_seqs] Processed 649412 reads in 688.304 CPU sec, 146.326 real sec
[M::process] 0 single-end sequences; 650404 paired-end sequences
[M::process] read 655514 sequences (80000106 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (41, 142634, 149, 36)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (220, 499, 1398)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3754)
[M::mem_pestat] mean and std.dev: (783.13, 890.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4932)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (152, 281, 422)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 962)
[M::mem_pestat] mean and std.dev: (301.64, 180.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1232)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 130, 489)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1401)
[M::mem_pestat] mean and std.dev: (208.68, 257.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1857)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 340, 4041)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11773)
[M::mem_pestat] mean and std.dev: (1804.25, 2639.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15639)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 650404 reads in 635.428 CPU sec, 128.289 real sec
[M::process] 0 single-end sequences; 655514 paired-end sequences
[M::process] read 654826 sequences (80000097 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (43, 142955, 168, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 335, 1519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4169)
[M::mem_pestat] mean and std.dev: (750.79, 1102.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5494)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 283, 423)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 961)
[M::mem_pestat] mean and std.dev: (302.03, 178.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1230)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 83, 534)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1542)
[M::mem_pestat] mean and std.dev: (201.40, 296.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2046)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 386, 2765)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7893)
[M::mem_pestat] mean and std.dev: (1375.33, 2039.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10457)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 655514 reads in 628.960 CPU sec, 132.855 real sec
[M::process] 0 single-end sequences; 654826 paired-end sequences
[M::process] read 657212 sequences (80000134 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 142572, 174, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (206, 459, 3012)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8624)
[M::mem_pestat] mean and std.dev: (1266.40, 1806.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11430)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (157, 279, 413)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 925)
[M::mem_pestat] mean and std.dev: (296.89, 170.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1181)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 68, 232)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 632)
[M::mem_pestat] mean and std.dev: (100.14, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 832)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (208, 638, 3359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9661)
[M::mem_pestat] mean and std.dev: (1668.76, 2135.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12812)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 654826 reads in 640.992 CPU sec, 119.615 real sec
[M::process] 0 single-end sequences; 657212 paired-end sequences
[M::process] read 655914 sequences (80000145 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 142204, 193, 42)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 439, 3534)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10240)
[M::mem_pestat] mean and std.dev: (1603.59, 2280.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13593)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (157, 280, 414)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 928)
[M::mem_pestat] mean and std.dev: (297.95, 172.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1185)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 76, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1068)
[M::mem_pestat] mean and std.dev: (150.91, 198.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1412)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (120, 263, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1359)
[M::mem_pestat] mean and std.dev: (344.15, 318.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1772)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 657212 reads in 647.032 CPU sec, 89.618 real sec
[M::process] 0 single-end sequences; 655914 paired-end sequences
[M::process] read 655340 sequences (80000045 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 142136, 158, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 447, 731)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1791)
[M::mem_pestat] mean and std.dev: (453.03, 387.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2321)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (156, 281, 416)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 936)
[M::mem_pestat] mean and std.dev: (299.05, 173.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1196)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 101, 447)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1273)
[M::mem_pestat] mean and std.dev: (208.15, 299.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1686)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (278, 452, 807)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1865)
[M::mem_pestat] mean and std.dev: (406.10, 246.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2394)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 655914 reads in 649.120 CPU sec, 89.398 real sec
[M::process] 0 single-end sequences; 655340 paired-end sequences
[M::process] read 660040 sequences (80000206 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (42, 142681, 151, 40)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (162, 396, 3350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9726)
[M::mem_pestat] mean and std.dev: (1600.33, 2293.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12914)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 276, 408)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 916)
[M::mem_pestat] mean and std.dev: (293.53, 169.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1170)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 99, 441)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1251)
[M::mem_pestat] mean and std.dev: (187.22, 245.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1656)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 402, 1188)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3272)
[M::mem_pestat] mean and std.dev: (407.56, 486.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4314)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 655340 reads in 647.448 CPU sec, 87.881 real sec
[M::process] 0 single-end sequences; 660040 paired-end sequences
Finished in 1646.14 s (331 us/read; 0.18 M reads/minute).

=== Summary ===

Total read pairs processed:          4,975,046
  Read 1 with adapter:               1,017,930 (20.5%)
  Read 2 with adapter:                 935,672 (18.8%)
Pairs that were too short:             743,752 (14.9%)
Pairs written (passing filters):     4,231,294 (85.1%)

Total basepairs processed: 1,492,513,800 bp
  Read 1:   746,256,900 bp
  Read 2:   746,256,900 bp
Quality-trimmed:             371,637,166 bp (24.9%)
  Read 1:   185,818,583 bp
  Read 2:   185,818,583 bp
Total written (filtered):  1,034,956,171 bp (69.3%)
  Read 1:   532,186,990 bp
  Read 2:   502,769,181 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1017930 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.7%
  C: 40.0%
  G: 29.0%
  T: 19.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	84488	77735.1	0	84488
4	35509	19433.8	0	35509
5	15037	4858.4	0	15037
6	11879	1214.6	0	11879
7	10696	303.7	0	10696
8	10157	75.9	0	10157
9	9205	19.0	0	9009 196
10	9317	4.7	1	8608 709
11	9641	1.2	1	9195 446
12	10169	0.3	1	9715 454
13	9771	0.3	1	9365 406
14	9913	0.3	1	9411 502
15	11065	0.3	1	10443 622
16	11433	0.3	1	10619 814
17	11607	0.3	1	11083 524
18	9945	0.3	1	9505 440
19	11701	0.3	1	11227 474
20	11377	0.3	1	10880 497
21	12395	0.3	1	11857 538
22	11150	0.3	1	10726 424
23	8513	0.3	1	8253 260
24	8263	0.3	1	8032 231
25	10119	0.3	1	9720 399
26	8707	0.3	1	8428 279
27	10684	0.3	1	10207 477
28	8941	0.3	1	8654 287
29	11396	0.3	1	10898 498
30	11198	0.3	1	10831 367
31	9711	0.3	1	9349 362
32	9678	0.3	1	9379 299
33	10152	0.3	1	9667 485
34	10187	0.3	1	9830 357
35	12147	0.3	1	11684 463
36	11086	0.3	1	10662 424
37	10972	0.3	1	10591 381
38	10762	0.3	1	10384 378
39	14050	0.3	1	13543 507
40	11059	0.3	1	10767 292
41	13474	0.3	1	13083 391
42	13871	0.3	1	13474 397
43	18193	0.3	1	17757 436
44	7914	0.3	1	7738 176
45	19647	0.3	1	19262 385
46	2992	0.3	1	2914 78
47	6135	0.3	1	5994 141
48	7628	0.3	1	7463 165
49	9288	0.3	1	9094 194
50	9317	0.3	1	9150 167
51	9171	0.3	1	9000 171
52	8172	0.3	1	8020 152
53	9661	0.3	1	9457 204
54	9037	0.3	1	8858 179
55	10962	0.3	1	10777 185
56	7735	0.3	1	7614 121
57	10249	0.3	1	10042 207
58	9156	0.3	1	9003 153
59	9598	0.3	1	9405 193
60	8877	0.3	1	8747 130
61	9785	0.3	1	9578 207
62	8529	0.3	1	8379 150
63	13414	0.3	1	13187 227
64	10033	0.3	1	9884 149
65	9048	0.3	1	8928 120
66	12862	0.3	1	12692 170
67	11034	0.3	1	10844 190
68	9297	0.3	1	9146 151
69	13745	0.3	1	13406 339
70	14911	0.3	1	14622 289
71	21159	0.3	1	20569 590
72	146266	0.3	1	145462 804
73	12265	0.3	1	11983 282
74	1695	0.3	1	1602 93
75	773	0.3	1	688 85
76	602	0.3	1	535 67
77	667	0.3	1	607 60
78	561	0.3	1	496 65
79	677	0.3	1	614 63
80	722	0.3	1	654 68
81	929	0.3	1	866 63
82	886	0.3	1	815 71
83	929	0.3	1	868 61
84	707	0.3	1	648 59
85	661	0.3	1	591 70
86	510	0.3	1	468 42
87	503	0.3	1	436 67
88	404	0.3	1	341 63
89	460	0.3	1	381 79
90	405	0.3	1	362 43
91	454	0.3	1	383 71
92	380	0.3	1	323 57
93	467	0.3	1	384 83
94	341	0.3	1	293 48
95	445	0.3	1	379 66
96	338	0.3	1	293 45
97	431	0.3	1	358 73
98	299	0.3	1	265 34
99	371	0.3	1	307 64
100	290	0.3	1	232 58
101	349	0.3	1	287 62
102	234	0.3	1	188 46
103	303	0.3	1	236 67
104	232	0.3	1	189 43
105	288	0.3	1	230 58
106	193	0.3	1	155 38
107	245	0.3	1	199 46
108	159	0.3	1	126 33
109	229	0.3	1	183 46
110	139	0.3	1	104 35
111	210	0.3	1	169 41
112	150	0.3	1	109 41
113	161	0.3	1	120 41
114	101	0.3	1	65 36
115	134	0.3	1	92 42
116	87	0.3	1	43 44
117	105	0.3	1	68 37
118	89	0.3	1	47 42
119	107	0.3	1	51 56
120	51	0.3	1	15 36
121	83	0.3	1	33 50
122	62	0.3	1	18 44
123	69	0.3	1	30 39
124	60	0.3	1	8 52
125	62	0.3	1	13 49
126	49	0.3	1	3 46
127	53	0.3	1	13 40
128	50	0.3	1	5 45
129	47	0.3	1	9 38
130	37	0.3	1	3 34
131	47	0.3	1	11 36
132	40	0.3	1	2 38
133	37	0.3	1	5 32
134	35	0.3	1	3 32
135	33	0.3	1	1 32
136	41	0.3	1	2 39
137	27	0.3	1	2 25
138	55	0.3	1	0 55
139	17	0.3	1	1 16
140	48	0.3	1	0 48

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 935672 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.6%
  C: 40.6%
  G: 28.0%
  T: 19.6%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	77813	77735.1	0	77813
4	28876	19433.8	0	28876
5	13402	4858.4	0	13402
6	10069	1214.6	0	10069
7	9230	303.7	0	9230
8	8509	75.9	0	8509
9	7647	19.0	0	7485 162
10	8438	4.7	1	7628 810
11	8348	1.2	1	7886 462
12	9559	0.3	1	8960 599
13	8853	0.3	1	8361 492
14	10315	0.3	1	9638 677
15	10998	0.3	1	10287 711
16	12385	0.3	1	11412 973
17	10366	0.3	1	9800 566
18	10021	0.3	1	9465 556
19	11188	0.3	1	10534 654
20	9589	0.3	1	9197 392
21	8028	0.3	1	7663 365
22	10148	0.3	1	9667 481
23	8250	0.3	1	7893 357
24	9635	0.3	1	9208 427
25	9517	0.3	1	9150 367
26	9602	0.3	1	9241 361
27	8919	0.3	1	8599 320
28	9073	0.3	1	8725 348
29	11034	0.3	1	10655 379
30	7166	0.3	1	6906 260
31	8539	0.3	1	8224 315
32	8514	0.3	1	8232 282
33	8047	0.3	1	7707 340
34	9829	0.3	1	9370 459
35	8372	0.3	1	8062 310
36	8823	0.3	1	8487 336
37	10599	0.3	1	10149 450
38	8650	0.3	1	8343 307
39	7838	0.3	1	7573 265
40	7563	0.3	1	7308 255
41	9149	0.3	1	8769 380
42	9663	0.3	1	9307 356
43	8129	0.3	1	7814 315
44	8826	0.3	1	8515 311
45	9043	0.3	1	8701 342
46	9709	0.3	1	9335 374
47	9908	0.3	1	9550 358
48	9687	0.3	1	9347 340
49	9369	0.3	1	9063 306
50	10160	0.3	1	9813 347
51	9182	0.3	1	8874 308
52	10373	0.3	1	10066 307
53	10583	0.3	1	10276 307
54	14133	0.3	1	13766 367
55	7601	0.3	1	7413 188
56	9844	0.3	1	9617 227
57	13778	0.3	1	13493 285
58	6174	0.3	1	6026 148
59	7549	0.3	1	7386 163
60	8820	0.3	1	8625 195
61	8549	0.3	1	8352 197
62	8221	0.3	1	8018 203
63	16387	0.3	1	16058 329
64	5268	0.3	1	5142 126
65	7808	0.3	1	7626 182
66	5504	0.3	1	5407 97
67	8740	0.3	1	8531 209
68	8472	0.3	1	8255 217
69	8924	0.3	1	8706 218
70	6706	0.3	1	6565 141
71	8709	0.3	1	8491 218
72	8756	0.3	1	8503 253
73	10376	0.3	1	9960 416
74	11717	0.3	1	11306 411
75	19110	0.3	1	18443 667
76	125124	0.3	1	123514 1610
77	11185	0.3	1	10866 319
78	1683	0.3	1	1588 95
79	1152	0.3	1	1071 81
80	845	0.3	1	780 65
81	836	0.3	1	773 63
82	727	0.3	1	676 51
83	868	0.3	1	796 72
84	1370	0.3	1	1325 45
85	1656	0.3	1	1578 78
86	2084	0.3	1	2019 65
87	1660	0.3	1	1595 65
88	1262	0.3	1	1203 59
89	676	0.3	1	631 45
90	374	0.3	1	330 44
91	384	0.3	1	327 57
92	308	0.3	1	269 39
93	268	0.3	1	221 47
94	267	0.3	1	237 30
95	357	0.3	1	293 64
96	225	0.3	1	176 49
97	227	0.3	1	178 49
98	198	0.3	1	152 46
99	205	0.3	1	166 39
100	223	0.3	1	184 39
101	246	0.3	1	192 54
102	163	0.3	1	121 42
103	165	0.3	1	122 43
104	153	0.3	1	107 46
105	170	0.3	1	131 39
106	108	0.3	1	70 38
107	139	0.3	1	103 36
108	94	0.3	1	62 32
109	118	0.3	1	77 41
110	85	0.3	1	50 35
111	106	0.3	1	75 31
112	96	0.3	1	63 33
113	108	0.3	1	72 36
114	69	0.3	1	39 30
115	76	0.3	1	43 33
116	65	0.3	1	28 37
117	58	0.3	1	27 31
118	61	0.3	1	27 34
119	55	0.3	1	26 29
120	53	0.3	1	16 37
121	46	0.3	1	17 29
122	34	0.3	1	10 24
123	46	0.3	1	19 27
124	29	0.3	1	3 26
125	41	0.3	1	11 30
126	47	0.3	1	8 39
127	30	0.3	1	12 18
128	46	0.3	1	1 45
129	45	0.3	1	9 36
130	26	0.3	1	3 23
131	34	0.3	1	5 29
132	25	0.3	1	3 22
133	22	0.3	1	2 20
134	21	0.3	1	0 21
135	33	0.3	1	3 30
136	20	0.3	1	0 20
137	25	0.3	1	0 25
138	23	0.3	1	1 22
139	21	0.3	1	0 21
140	27	0.3	1	0 27

[M::process] read 617502 sequences (74954677 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (48, 142256, 128, 37)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (199, 386, 908)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2326)
[M::mem_pestat] mean and std.dev: (399.57, 298.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3035)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (152, 272, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 908)
[M::mem_pestat] mean and std.dev: (290.32, 168.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1160)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 121, 463)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1331)
[M::mem_pestat] mean and std.dev: (192.43, 240.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1765)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 365, 1133)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3017)
[M::mem_pestat] mean and std.dev: (421.81, 393.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3959)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 660040 reads in 671.172 CPU sec, 93.073 real sec
[M::process] 0 single-end sequences; 617502 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 133142, 156, 39)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (167, 318, 638)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1580)
[M::mem_pestat] mean and std.dev: (314.65, 243.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2051)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (153, 275, 407)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 915)
[M::mem_pestat] mean and std.dev: (292.45, 169.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1169)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 65, 363)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1045)
[M::mem_pestat] mean and std.dev: (167.05, 230.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1386)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 327, 590)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1392)
[M::mem_pestat] mean and std.dev: (282.29, 186.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1793)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 617502 reads in 615.668 CPU sec, 78.620 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1269\tPL:Illumina\tPU:x\tLB:pherring\tSM:1269.PWS91 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1786.902 sec; CPU: 8742.916 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
