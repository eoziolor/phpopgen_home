==========================================
SLURM_JOB_ID = 5436147
SLURM_NODELIST = c8-71
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1160
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 630836 sequences (80000122 bp)...
[M::process] 0 single-end sequences; 630836 paired-end sequences
[M::process] read 632002 sequences (80000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (47, 176690, 190, 47)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (269, 408, 1448)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3806)
[M::mem_pestat] mean and std.dev: (561.45, 584.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4985)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (174, 298, 417)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 903)
[M::mem_pestat] mean and std.dev: (304.54, 159.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1146)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 94, 457)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1299)
[M::mem_pestat] mean and std.dev: (185.77, 275.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1720)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (230, 458, 3644)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10472)
[M::mem_pestat] mean and std.dev: (1955.00, 2811.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13886)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 630836 reads in 861.632 CPU sec, 121.169 real sec
[M::process] 0 single-end sequences; 632002 paired-end sequences
[M::process] read 632686 sequences (80000093 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (50, 176547, 183, 44)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (237, 420, 1976)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5454)
[M::mem_pestat] mean and std.dev: (859.52, 1058.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7193)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (173, 300, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 908)
[M::mem_pestat] mean and std.dev: (305.02, 160.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1153)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 77, 510)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1466)
[M::mem_pestat] mean and std.dev: (174.90, 268.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1944)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (216, 558, 1512)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4104)
[M::mem_pestat] mean and std.dev: (612.64, 698.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5400)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 632002 reads in 868.472 CPU sec, 117.729 real sec
[M::process] 0 single-end sequences; 632686 paired-end sequences
[M::process] read 629218 sequences (80000247 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (42, 177001, 203, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (313, 627, 3018)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8428)
[M::mem_pestat] mean and std.dev: (1696.03, 2145.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11133)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (174, 300, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 909)
[M::mem_pestat] mean and std.dev: (306.07, 160.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1154)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 78, 413)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1175)
[M::mem_pestat] mean and std.dev: (176.07, 224.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1556)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (328, 656, 1483)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3793)
[M::mem_pestat] mean and std.dev: (647.91, 571.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4948)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 632686 reads in 859.024 CPU sec, 121.421 real sec
[M::process] 0 single-end sequences; 629218 paired-end sequences
[M::process] read 631902 sequences (80000270 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 175805, 183, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (433, 755, 4662)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13120)
[M::mem_pestat] mean and std.dev: (2816.46, 3232.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17349)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 299, 417)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 901)
[M::mem_pestat] mean and std.dev: (305.19, 159.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1143)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 98, 673)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1947)
[M::mem_pestat] mean and std.dev: (224.08, 346.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2584)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 374, 652)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1464)
[M::mem_pestat] mean and std.dev: (398.97, 232.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1870)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 629218 reads in 861.608 CPU sec, 115.932 real sec
[M::process] 0 single-end sequences; 631902 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 176636, 157, 29)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (234, 375, 3027)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8613)
[M::mem_pestat] mean and std.dev: (1371.03, 1913.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11406)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (174, 300, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 906)
[M::mem_pestat] mean and std.dev: (305.46, 160.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1150)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 52, 265)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 741)
[M::mem_pestat] mean and std.dev: (85.22, 105.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 979)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 454, 3782)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10776)
[M::mem_pestat] mean and std.dev: (1921.34, 2373.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14273)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 631902 reads in 862.936 CPU sec, 114.600 real sec
[M::process] read 651144 sequences (80000049 bp)...
[M::process] 0 single-end sequences; 651144 paired-end sequences
[M::process] read 656946 sequences (80000126 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (49, 180180, 227, 49)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (213, 458, 2177)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6105)
[M::mem_pestat] mean and std.dev: (1069.40, 1462.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8069)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (169, 288, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 868)
[M::mem_pestat] mean and std.dev: (293.60, 151.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1101)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 76, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1023)
[M::mem_pestat] mean and std.dev: (159.54, 223.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1355)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (208, 416, 879)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2221)
[M::mem_pestat] mean and std.dev: (392.27, 311.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2892)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 651144 reads in 875.160 CPU sec, 123.914 real sec
[M::process] 0 single-end sequences; 656946 paired-end sequences
[M::process] read 651546 sequences (80000084 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 179986, 197, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (227, 372, 695)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1631)
[M::mem_pestat] mean and std.dev: (369.79, 224.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2099)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (165, 281, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 855)
[M::mem_pestat] mean and std.dev: (287.95, 149.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1085)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 74, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1201)
[M::mem_pestat] mean and std.dev: (166.79, 236.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1592)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (220, 363, 741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1783)
[M::mem_pestat] mean and std.dev: (324.65, 254.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2304)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656946 reads in 897.836 CPU sec, 123.865 real sec
[M::process] 0 single-end sequences; 651546 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 179611, 198, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (242, 682, 2710)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7646)
[M::mem_pestat] mean and std.dev: (1526.46, 1919.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10114)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (168, 285, 398)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)
[M::mem_pestat] mean and std.dev: (290.65, 149.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1088)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 94, 454)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1294)
[M::mem_pestat] mean and std.dev: (172.85, 242.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1714)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 326, 459)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1053)
[M::mem_pestat] mean and std.dev: (291.77, 166.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1350)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 651546 reads in 899.316 CPU sec, 125.741 real sec
Finished in 1100.49 s (328 us/read; 0.18 M reads/minute).

=== Summary ===

Total read pairs processed:          3,360,152
  Read 1 with adapter:                 517,672 (15.4%)
  Read 2 with adapter:                 498,942 (14.8%)
Pairs that were too short:             485,013 (14.4%)
Pairs written (passing filters):     2,875,139 (85.6%)

Total basepairs processed: 1,008,045,600 bp
  Read 1:   504,022,800 bp
  Read 2:   504,022,800 bp
Quality-trimmed:             259,059,208 bp (25.7%)
  Read 1:   129,529,604 bp
  Read 2:   129,529,604 bp
Total written (filtered):    717,103,966 bp (71.1%)
  Read 1:   366,571,523 bp
  Read 2:   350,532,443 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 517672 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.9%
  C: 37.3%
  G: 27.8%
  T: 21.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	59224	52502.4	0	59224
4	22694	13125.6	0	22694
5	9123	3281.4	0	9123
6	6545	820.3	0	6545
7	6071	205.1	0	6071
8	5249	51.3	0	5249
9	5054	12.8	0	4957 97
10	5222	3.2	1	4815 407
11	5551	0.8	1	5248 303
12	5729	0.2	1	5401 328
13	5691	0.2	1	5388 303
14	5816	0.2	1	5425 391
15	6123	0.2	1	5694 429
16	6337	0.2	1	5785 552
17	6509	0.2	1	6132 377
18	5735	0.2	1	5404 331
19	6306	0.2	1	5945 361
20	6440	0.2	1	6066 374
21	7329	0.2	1	6971 358
22	6233	0.2	1	5948 285
23	4711	0.2	1	4520 191
24	4390	0.2	1	4208 182
25	5536	0.2	1	5258 278
26	4892	0.2	1	4697 195
27	5834	0.2	1	5531 303
28	4830	0.2	1	4591 239
29	6370	0.2	1	6010 360
30	5964	0.2	1	5724 240
31	4977	0.2	1	4720 257
32	4393	0.2	1	4191 202
33	6317	0.2	1	5972 345
34	6466	0.2	1	6150 316
35	6463	0.2	1	6177 286
36	6383	0.2	1	6103 280
37	6780	0.2	1	6453 327
38	6312	0.2	1	6088 224
39	5767	0.2	1	5557 210
40	6507	0.2	1	6273 234
41	9101	0.2	1	8814 287
42	6635	0.2	1	6404 231
43	8560	0.2	1	8274 286
44	4563	0.2	1	4432 131
45	12027	0.2	1	11736 291
46	1625	0.2	1	1561 64
47	3123	0.2	1	3020 103
48	3768	0.2	1	3679 89
49	4697	0.2	1	4559 138
50	4956	0.2	1	4835 121
51	4287	0.2	1	4187 100
52	3956	0.2	1	3869 87
53	4570	0.2	1	4450 120
54	4490	0.2	1	4393 97
55	5399	0.2	1	5289 110
56	3509	0.2	1	3442 67
57	4990	0.2	1	4879 111
58	4259	0.2	1	4164 95
59	4583	0.2	1	4480 103
60	4264	0.2	1	4152 112
61	4697	0.2	1	4589 108
62	3784	0.2	1	3709 75
63	6162	0.2	1	6057 105
64	4695	0.2	1	4605 90
65	4325	0.2	1	4252 73
66	6228	0.2	1	6133 95
67	4844	0.2	1	4749 95
68	3993	0.2	1	3906 87
69	6010	0.2	1	5879 131
70	6310	0.2	1	6183 127
71	8258	0.2	1	7996 262
72	48046	0.2	1	47725 321
73	4122	0.2	1	4025 97
74	579	0.2	1	549 30
75	257	0.2	1	223 34
76	186	0.2	1	148 38
77	248	0.2	1	211 37
78	196	0.2	1	164 32
79	223	0.2	1	188 35
80	240	0.2	1	203 37
81	292	0.2	1	253 39
82	217	0.2	1	189 28
83	206	0.2	1	176 30
84	172	0.2	1	147 25
85	216	0.2	1	188 28
86	156	0.2	1	130 26
87	185	0.2	1	150 35
88	141	0.2	1	104 37
89	177	0.2	1	142 35
90	146	0.2	1	120 26
91	170	0.2	1	137 33
92	121	0.2	1	96 25
93	173	0.2	1	136 37
94	131	0.2	1	96 35
95	142	0.2	1	116 26
96	112	0.2	1	93 19
97	127	0.2	1	99 28
98	98	0.2	1	69 29
99	142	0.2	1	115 27
100	94	0.2	1	64 30
101	132	0.2	1	102 30
102	97	0.2	1	65 32
103	96	0.2	1	71 25
104	78	0.2	1	49 29
105	105	0.2	1	74 31
106	62	0.2	1	37 25
107	80	0.2	1	61 19
108	60	0.2	1	32 28
109	80	0.2	1	43 37
110	56	0.2	1	35 21
111	86	0.2	1	55 31
112	53	0.2	1	32 21
113	66	0.2	1	44 22
114	44	0.2	1	26 18
115	46	0.2	1	24 22
116	50	0.2	1	19 31
117	44	0.2	1	19 25
118	34	0.2	1	11 23
119	41	0.2	1	17 24
120	28	0.2	1	10 18
121	40	0.2	1	12 28
122	20	0.2	1	1 19
123	31	0.2	1	6 25
124	27	0.2	1	3 24
125	28	0.2	1	4 24
126	22	0.2	1	0 22
127	25	0.2	1	5 20
128	17	0.2	1	2 15
129	30	0.2	1	1 29
130	19	0.2	1	0 19
131	20	0.2	1	3 17
132	23	0.2	1	0 23
133	33	0.2	1	6 27
134	27	0.2	1	1 26
135	22	0.2	1	0 22
136	16	0.2	1	1 15
137	13	0.2	1	0 13
138	31	0.2	1	0 31
139	11	0.2	1	0 11
140	23	0.2	1	0 23

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 498942 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.7%
  C: 37.5%
  G: 27.5%
  T: 21.2%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	55861	52502.4	0	55861
4	19979	13125.6	0	19979
5	8915	3281.4	0	8915
6	6102	820.3	0	6102
7	5774	205.1	0	5774
8	5071	51.3	0	5071
9	5153	12.8	0	5064 89
10	4840	3.2	1	4503 337
11	5412	0.8	1	5160 252
12	5418	0.2	1	5139 279
13	5494	0.2	1	5212 282
14	5665	0.2	1	5312 353
15	6761	0.2	1	6361 400
16	6745	0.2	1	6299 446
17	5883	0.2	1	5591 292
18	5961	0.2	1	5693 268
19	6165	0.2	1	5848 317
20	5917	0.2	1	5712 205
21	4562	0.2	1	4384 178
22	6003	0.2	1	5770 233
23	4689	0.2	1	4529 160
24	5693	0.2	1	5468 225
25	5792	0.2	1	5582 210
26	5476	0.2	1	5300 176
27	5936	0.2	1	5744 192
28	5785	0.2	1	5580 205
29	5981	0.2	1	5791 190
30	4559	0.2	1	4400 159
31	5795	0.2	1	5583 212
32	5941	0.2	1	5755 186
33	5524	0.2	1	5338 186
34	4326	0.2	1	4155 171
35	5280	0.2	1	5107 173
36	5078	0.2	1	4911 167
37	7150	0.2	1	6952 198
38	4240	0.2	1	4127 113
39	3243	0.2	1	3164 79
40	3771	0.2	1	3691 80
41	4313	0.2	1	4203 110
42	4777	0.2	1	4657 120
43	3933	0.2	1	3821 112
44	4573	0.2	1	4457 116
45	4315	0.2	1	4213 102
46	4584	0.2	1	4470 114
47	5017	0.2	1	4895 122
48	4743	0.2	1	4624 119
49	4703	0.2	1	4573 130
50	4934	0.2	1	4784 150
51	4454	0.2	1	4335 119
52	5070	0.2	1	4922 148
53	5053	0.2	1	4925 128
54	6765	0.2	1	6604 161
55	3684	0.2	1	3591 93
56	4600	0.2	1	4478 122
57	6257	0.2	1	6121 136
58	3305	0.2	1	3220 85
59	3856	0.2	1	3761 95
60	4302	0.2	1	4224 78
61	4283	0.2	1	4198 85
62	3868	0.2	1	3793 75
63	7646	0.2	1	7489 157
64	2756	0.2	1	2690 66
65	3565	0.2	1	3482 83
66	2448	0.2	1	2403 45
67	4196	0.2	1	4121 75
68	4060	0.2	1	3990 70
69	4251	0.2	1	4158 93
70	3229	0.2	1	3162 67
71	4049	0.2	1	3958 91
72	3999	0.2	1	3906 93
73	4644	0.2	1	4471 173
74	5084	0.2	1	4948 136
75	7897	0.2	1	7629 268
76	54122	0.2	1	53532 590
77	3011	0.2	1	2884 127
78	369	0.2	1	347 22
79	281	0.2	1	253 28
80	235	0.2	1	204 31
81	263	0.2	1	225 38
82	220	0.2	1	193 27
83	264	0.2	1	232 32
84	496	0.2	1	468 28
85	504	0.2	1	477 27
86	579	0.2	1	552 27
87	507	0.2	1	475 32
88	372	0.2	1	345 27
89	238	0.2	1	209 29
90	121	0.2	1	98 23
91	125	0.2	1	96 29
92	97	0.2	1	72 25
93	111	0.2	1	87 24
94	92	0.2	1	73 19
95	79	0.2	1	56 23
96	76	0.2	1	50 26
97	84	0.2	1	59 25
98	63	0.2	1	41 22
99	88	0.2	1	70 18
100	80	0.2	1	52 28
101	69	0.2	1	50 19
102	62	0.2	1	38 24
103	99	0.2	1	65 34
104	44	0.2	1	32 12
105	63	0.2	1	43 20
106	54	0.2	1	28 26
107	62	0.2	1	30 32
108	43	0.2	1	22 21
109	53	0.2	1	32 21
110	39	0.2	1	16 23
111	48	0.2	1	28 20
112	25	0.2	1	18 7
113	35	0.2	1	16 19
114	47	0.2	1	16 31
115	39	0.2	1	19 20
116	25	0.2	1	9 16
117	33	0.2	1	13 20
118	32	0.2	1	8 24
119	25	0.2	1	13 12
120	24	0.2	1	9 15
121	22	0.2	1	4 18
122	26	0.2	1	5 21
123	31	0.2	1	11 20
124	20	0.2	1	5 15
125	31	0.2	1	8 23
126	22	0.2	1	1 21
127	27	0.2	1	5 22
128	20	0.2	1	2 18
129	13	0.2	1	1 12
130	26	0.2	1	0 26
131	23	0.2	1	1 22
132	17	0.2	1	0 17
133	12	0.2	1	2 10
134	15	0.2	1	0 15
135	13	0.2	1	2 11
136	19	0.2	1	1 18
137	17	0.2	1	1 16
138	10	0.2	1	1 9
139	15	0.2	1	2 13
140	12	0.2	1	0 12

[M::process] read 633998 sequences (77102782 bp)...
[M::process] 0 single-end sequences; 633998 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 174252, 195, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (202, 471, 2160)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6076)
[M::mem_pestat] mean and std.dev: (1074.17, 1424.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8034)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 278, 392)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 852)
[M::mem_pestat] mean and std.dev: (285.08, 148.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1082)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 75, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 989)
[M::mem_pestat] mean and std.dev: (147.38, 188.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1310)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 349, 813)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2033)
[M::mem_pestat] mean and std.dev: (314.07, 212.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2643)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 633998 reads in 867.532 CPU sec, 108.808 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1160\tPL:Illumina\tPU:x\tLB:pherring\tSM:1160.TB91 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1212.299 sec; CPU: 7862.284 sec
[bam_sort_core] merging from 2 files and 1 in-memory blocks...
