==========================================
SLURM_JOB_ID = 5435415
SLURM_NODELIST = c9-70
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
428
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 666348 sequences (80000134 bp)...
[M::process] 0 single-end sequences; 666348 paired-end sequences
[M::process] read 662290 sequences (80000045 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 168956, 176, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (256, 736, 4001)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11491)
[M::mem_pestat] mean and std.dev: (2128.21, 2423.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15236)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 226, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 793)
[M::mem_pestat] mean and std.dev: (249.51, 145.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1014)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 74, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1052)
[M::mem_pestat] mean and std.dev: (173.32, 227.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1392)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 3306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9434)
[M::mem_pestat] mean and std.dev: (2015.32, 2738.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12968)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 666348 reads in 1194.268 CPU sec, 163.820 real sec
[M::process] 0 single-end sequences; 662290 paired-end sequences
[M::process] read 663570 sequences (80000005 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 167830, 163, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (224, 451, 895)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2237)
[M::mem_pestat] mean and std.dev: (434.96, 351.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2908)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 229, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 801)
[M::mem_pestat] mean and std.dev: (252.75, 147.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1024)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 66, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 821)
[M::mem_pestat] mean and std.dev: (139.66, 174.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1084)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (245, 333, 4632)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13406)
[M::mem_pestat] mean and std.dev: (2418.56, 2979.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17793)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662290 reads in 1211.060 CPU sec, 161.127 real sec
[M::process] 0 single-end sequences; 663570 paired-end sequences
[M::process] read 664184 sequences (80000147 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 168030, 181, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 535, 1194)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3188)
[M::mem_pestat] mean and std.dev: (444.96, 383.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4185)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 231, 357)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 809)
[M::mem_pestat] mean and std.dev: (253.80, 148.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 98, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1015)
[M::mem_pestat] mean and std.dev: (164.62, 219.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1342)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (214, 562, 3454)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9934)
[M::mem_pestat] mean and std.dev: (2328.44, 3193.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15104)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 663570 reads in 1204.860 CPU sec, 172.034 real sec
[M::process] 0 single-end sequences; 664184 paired-end sequences
[M::process] read 662016 sequences (80000091 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 168426, 130, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 336, 624)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1478)
[M::mem_pestat] mean and std.dev: (347.29, 255.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1905)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 227, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 788)
[M::mem_pestat] mean and std.dev: (249.75, 144.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1007)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 74, 320)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 894)
[M::mem_pestat] mean and std.dev: (156.38, 208.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1181)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 548, 1250)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3294)
[M::mem_pestat] mean and std.dev: (402.59, 291.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4316)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 664184 reads in 1191.060 CPU sec, 158.438 real sec
[M::process] 0 single-end sequences; 662016 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (26, 167364, 175, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (259, 717, 3091)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8755)
[M::mem_pestat] mean and std.dev: (1823.46, 2251.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11587)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 229, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 797)
[M::mem_pestat] mean and std.dev: (251.77, 146.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 72, 329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 929)
[M::mem_pestat] mean and std.dev: (134.21, 178.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1229)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (183, 290, 881)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2277)
[M::mem_pestat] mean and std.dev: (454.83, 443.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2975)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662016 reads in 1196.396 CPU sec, 157.131 real sec
[M::process] read 667866 sequences (80000258 bp)...
[M::process] 0 single-end sequences; 667866 paired-end sequences
[M::process] read 668216 sequences (80000222 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 168943, 166, 37)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (238, 446, 3341)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9547)
[M::mem_pestat] mean and std.dev: (1337.52, 1706.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12650)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 228, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)
[M::mem_pestat] mean and std.dev: (251.65, 147.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1026)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 63, 307)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 863)
[M::mem_pestat] mean and std.dev: (149.64, 197.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1141)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 411, 2358)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6570)
[M::mem_pestat] mean and std.dev: (973.50, 1377.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8676)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 667866 reads in 1199.684 CPU sec, 161.208 real sec
[M::process] 0 single-end sequences; 668216 paired-end sequences
[M::process] read 667130 sequences (80000005 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 168864, 171, 29)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 442, 1838)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5094)
[M::mem_pestat] mean and std.dev: (825.19, 1131.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6722)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 226, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 804)
[M::mem_pestat] mean and std.dev: (251.24, 148.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (35, 109, 519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1487)
[M::mem_pestat] mean and std.dev: (214.12, 281.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1971)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (187, 308, 3883)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11275)
[M::mem_pestat] mean and std.dev: (2017.31, 3086.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14971)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 668216 reads in 1229.688 CPU sec, 165.619 real sec
[M::process] 0 single-end sequences; 667130 paired-end sequences
[M::process] read 669366 sequences (80000131 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 168706, 163, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 411, 955)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2483)
[M::mem_pestat] mean and std.dev: (401.18, 395.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3247)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 228, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)
[M::mem_pestat] mean and std.dev: (252.55, 149.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1034)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 130, 552)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1584)
[M::mem_pestat] mean and std.dev: (229.57, 307.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2100)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (278, 410, 1100)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2744)
[M::mem_pestat] mean and std.dev: (546.50, 467.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3566)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 667130 reads in 1218.124 CPU sec, 183.730 real sec
[M::process] 0 single-end sequences; 669366 paired-end sequences
[M::process] read 668440 sequences (80000115 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 168743, 172, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (169, 309, 2525)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7237)
[M::mem_pestat] mean and std.dev: (1543.30, 2212.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10392)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 229, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 803)
[M::mem_pestat] mean and std.dev: (252.47, 148.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 71, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1529)
[M::mem_pestat] mean and std.dev: (228.06, 331.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2028)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 543, 1445)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3755)
[M::mem_pestat] mean and std.dev: (565.28, 454.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4910)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 669366 reads in 1228.592 CPU sec, 164.910 real sec
[M::process] 0 single-end sequences; 668440 paired-end sequences
[M::process] read 666034 sequences (80000137 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 168243, 176, 26)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 303, 787)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1953)
[M::mem_pestat] mean and std.dev: (405.34, 379.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2536)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 226, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 801)
[M::mem_pestat] mean and std.dev: (250.80, 147.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1025)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 63, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 803)
[M::mem_pestat] mean and std.dev: (129.44, 171.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1061)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (260, 373, 852)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2036)
[M::mem_pestat] mean and std.dev: (383.38, 253.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2628)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 668440 reads in 1231.640 CPU sec, 166.023 real sec
[M::process] 0 single-end sequences; 666034 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (26, 167970, 157, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (190, 319, 864)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2212)
[M::mem_pestat] mean and std.dev: (429.87, 339.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2886)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 227, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 807)
[M::mem_pestat] mean and std.dev: (251.67, 148.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1033)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 82, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 967)
[M::mem_pestat] mean and std.dev: (147.86, 184.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1278)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (220, 510, 2519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7117)
[M::mem_pestat] mean and std.dev: (1431.89, 1936.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9416)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
Finished in 2137.51 s (489 us/read; 0.12 M reads/minute).

=== Summary ===

Total read pairs processed:          4,370,878
  Read 1 with adapter:                 995,971 (22.8%)
  Read 2 with adapter:                 934,191 (21.4%)
Pairs that were too short:             597,288 (13.7%)
Pairs written (passing filters):     3,773,590 (86.3%)

Total basepairs processed: 1,311,263,400 bp
  Read 1:   655,631,700 bp
  Read 2:   655,631,700 bp
Quality-trimmed:             335,780,436 bp (25.6%)
  Read 1:   167,890,218 bp
  Read 2:   167,890,218 bp
Total written (filtered):    906,703,101 bp (69.1%)
  Read 1:   465,930,310 bp
  Read 2:   440,772,791 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 995971 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.5%
  C: 40.7%
  G: 31.0%
  T: 17.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	72777	68295.0	0	72777
4	31915	17073.7	0	31915
5	14338	4268.4	0	14338
6	12033	1067.1	0	12033
7	11018	266.8	0	11018
8	10561	66.7	0	10561
9	9825	16.7	0	9696 129
10	9463	4.2	1	8909 554
11	10415	1.0	1	9937 478
12	11331	0.3	1	10721 610
13	10683	0.3	1	10216 467
14	11427	0.3	1	10836 591
15	12172	0.3	1	11427 745
16	13263	0.3	1	12104 1159
17	13122	0.3	1	12505 617
18	10921	0.3	1	10376 545
19	13342	0.3	1	12814 528
20	12415	0.3	1	11890 525
21	12398	0.3	1	11906 492
22	14189	0.3	1	13616 573
23	8691	0.3	1	8463 228
24	9369	0.3	1	9131 238
25	11644	0.3	1	11235 409
26	8991	0.3	1	8782 209
27	11248	0.3	1	10786 462
28	9408	0.3	1	9150 258
29	12154	0.3	1	11657 497
30	14088	0.3	1	13630 458
31	9639	0.3	1	9327 312
32	11450	0.3	1	11097 353
33	11617	0.3	1	11195 422
34	10092	0.3	1	9817 275
35	12445	0.3	1	12104 341
36	11259	0.3	1	10946 313
37	11259	0.3	1	10991 268
38	10377	0.3	1	10117 260
39	13257	0.3	1	12865 392
40	12251	0.3	1	11864 387
41	9597	0.3	1	9355 242
42	11964	0.3	1	11670 294
43	12949	0.3	1	12588 361
44	8929	0.3	1	8702 227
45	19545	0.3	1	19101 444
46	3966	0.3	1	3836 130
47	6290	0.3	1	6088 202
48	8130	0.3	1	7908 222
49	10389	0.3	1	10101 288
50	8810	0.3	1	8614 196
51	9745	0.3	1	9502 243
52	9589	0.3	1	9353 236
53	10521	0.3	1	10187 334
54	8904	0.3	1	8645 259
55	11063	0.3	1	10803 260
56	8377	0.3	1	8170 207
57	10212	0.3	1	9933 279
58	9358	0.3	1	9103 255
59	10054	0.3	1	9745 309
60	8527	0.3	1	8329 198
61	10032	0.3	1	9749 283
62	8943	0.3	1	8753 190
63	13079	0.3	1	12787 292
64	10347	0.3	1	10159 188
65	8704	0.3	1	8565 139
66	12789	0.3	1	12617 172
67	10337	0.3	1	10148 189
68	8304	0.3	1	8147 157
69	12614	0.3	1	12267 347
70	13323	0.3	1	13005 318
71	18414	0.3	1	17788 626
72	138321	0.3	1	137107 1214
73	3127	0.3	1	2965 162
74	364	0.3	1	324 40
75	292	0.3	1	234 58
76	260	0.3	1	218 42
77	388	0.3	1	335 53
78	388	0.3	1	339 49
79	547	0.3	1	482 65
80	533	0.3	1	475 58
81	678	0.3	1	621 57
82	565	0.3	1	517 48
83	648	0.3	1	582 66
84	506	0.3	1	439 67
85	514	0.3	1	447 67
86	365	0.3	1	326 39
87	440	0.3	1	391 49
88	338	0.3	1	289 49
89	405	0.3	1	338 67
90	313	0.3	1	269 44
91	402	0.3	1	341 61
92	289	0.3	1	238 51
93	396	0.3	1	332 64
94	310	0.3	1	254 56
95	369	0.3	1	300 69
96	214	0.3	1	184 30
97	337	0.3	1	284 53
98	207	0.3	1	169 38
99	301	0.3	1	247 54
100	189	0.3	1	158 31
101	259	0.3	1	216 43
102	178	0.3	1	149 29
103	219	0.3	1	175 44
104	150	0.3	1	120 30
105	219	0.3	1	178 41
106	156	0.3	1	119 37
107	176	0.3	1	149 27
108	102	0.3	1	76 26
109	166	0.3	1	136 30
110	100	0.3	1	77 23
111	150	0.3	1	121 29
112	98	0.3	1	68 30
113	120	0.3	1	83 37
114	60	0.3	1	44 16
115	99	0.3	1	66 33
116	65	0.3	1	32 33
117	91	0.3	1	60 31
118	54	0.3	1	25 29
119	67	0.3	1	36 31
120	60	0.3	1	27 33
121	74	0.3	1	32 42
122	43	0.3	1	15 28
123	60	0.3	1	29 31
124	44	0.3	1	8 36
125	47	0.3	1	17 30
126	40	0.3	1	5 35
127	31	0.3	1	11 20
128	23	0.3	1	5 18
129	43	0.3	1	17 26
130	35	0.3	1	4 31
131	26	0.3	1	4 22
132	35	0.3	1	0 35
133	28	0.3	1	3 25
134	36	0.3	1	3 33
135	36	0.3	1	8 28
136	24	0.3	1	0 24
137	27	0.3	1	1 26
138	22	0.3	1	1 21
139	21	0.3	1	0 21
140	29	0.3	1	0 29

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 934191 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.5%
  C: 40.7%
  G: 30.4%
  T: 18.4%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	68575	68295.0	0	68575
4	27679	17073.7	0	27679
5	13116	4268.4	0	13116
6	10462	1067.1	0	10462
7	9628	266.8	0	9628
8	9023	66.7	0	9023
9	8770	16.7	0	8638 132
10	8191	4.2	1	7730 461
11	9187	1.0	1	8716 471
12	10228	0.3	1	9729 499
13	9653	0.3	1	9163 490
14	10014	0.3	1	9503 511
15	11454	0.3	1	10706 748
16	11192	0.3	1	10417 775
17	10833	0.3	1	10299 534
18	9806	0.3	1	9385 421
19	14309	0.3	1	13536 773
20	11099	0.3	1	10687 412
21	8778	0.3	1	8512 266
22	9797	0.3	1	9452 345
23	8565	0.3	1	8279 286
24	10140	0.3	1	9740 400
25	10163	0.3	1	9849 314
26	10181	0.3	1	9888 293
27	8925	0.3	1	8668 257
28	9356	0.3	1	9103 253
29	8562	0.3	1	8360 202
30	8623	0.3	1	8400 223
31	9698	0.3	1	9409 289
32	10001	0.3	1	9700 301
33	8872	0.3	1	8585 287
34	7353	0.3	1	7158 195
35	9183	0.3	1	8883 300
36	9504	0.3	1	9240 264
37	8366	0.3	1	8121 245
38	10003	0.3	1	9650 353
39	8508	0.3	1	8194 314
40	9127	0.3	1	8837 290
41	9325	0.3	1	8928 397
42	8937	0.3	1	8610 327
43	9910	0.3	1	9390 520
44	9548	0.3	1	9179 369
45	11659	0.3	1	11015 644
46	12249	0.3	1	11777 472
47	10689	0.3	1	10361 328
48	8510	0.3	1	8283 227
49	10018	0.3	1	9679 339
50	9711	0.3	1	9354 357
51	10499	0.3	1	10061 438
52	12075	0.3	1	11561 514
53	11018	0.3	1	10657 361
54	13618	0.3	1	13183 435
55	8185	0.3	1	7944 241
56	10827	0.3	1	10469 358
57	12812	0.3	1	12474 338
58	7823	0.3	1	7615 208
59	7927	0.3	1	7730 197
60	9554	0.3	1	9317 237
61	8738	0.3	1	8536 202
62	7652	0.3	1	7467 185
63	14995	0.3	1	14701 294
64	5117	0.3	1	5015 102
65	7056	0.3	1	6912 144
66	5864	0.3	1	5754 110
67	8579	0.3	1	8379 200
68	8096	0.3	1	7916 180
69	8597	0.3	1	8418 179
70	6909	0.3	1	6754 155
71	8903	0.3	1	8694 209
72	8077	0.3	1	7832 245
73	10095	0.3	1	9670 425
74	10274	0.3	1	9905 369
75	13836	0.3	1	13143 693
76	134662	0.3	1	132405 2257
77	2757	0.3	1	2590 167
78	490	0.3	1	447 43
79	445	0.3	1	400 45
80	453	0.3	1	410 43
81	498	0.3	1	447 51
82	421	0.3	1	376 45
83	594	0.3	1	545 49
84	972	0.3	1	918 54
85	1037	0.3	1	963 74
86	1237	0.3	1	1179 58
87	990	0.3	1	931 59
88	711	0.3	1	673 38
89	395	0.3	1	349 46
90	245	0.3	1	217 28
91	238	0.3	1	196 42
92	140	0.3	1	119 21
93	213	0.3	1	170 43
94	156	0.3	1	127 29
95	198	0.3	1	155 43
96	134	0.3	1	106 28
97	141	0.3	1	107 34
98	124	0.3	1	89 35
99	140	0.3	1	97 43
100	126	0.3	1	95 31
101	106	0.3	1	83 23
102	102	0.3	1	64 38
103	98	0.3	1	62 36
104	105	0.3	1	62 43
105	101	0.3	1	65 36
106	81	0.3	1	47 34
107	87	0.3	1	54 33
108	65	0.3	1	45 20
109	81	0.3	1	51 30
110	70	0.3	1	37 33
111	77	0.3	1	51 26
112	57	0.3	1	32 25
113	89	0.3	1	54 35
114	43	0.3	1	24 19
115	55	0.3	1	32 23
116	47	0.3	1	25 22
117	59	0.3	1	36 23
118	54	0.3	1	15 39
119	48	0.3	1	28 20
120	40	0.3	1	17 23
121	51	0.3	1	20 31
122	35	0.3	1	9 26
123	43	0.3	1	18 25
124	38	0.3	1	10 28
125	48	0.3	1	23 25
126	38	0.3	1	7 31
127	45	0.3	1	14 31
128	29	0.3	1	5 24
129	24	0.3	1	5 19
130	24	0.3	1	9 15
131	33	0.3	1	10 23
132	27	0.3	1	2 25
133	24	0.3	1	7 17
134	27	0.3	1	1 26
135	21	0.3	1	2 19
136	22	0.3	1	5 17
137	23	0.3	1	5 18
138	18	0.3	1	0 18
139	16	0.3	1	1 15
140	17	0.3	1	0 17

[M::process] read 221720 sequences (26701811 bp)...
[M::mem_process_seqs] Processed 666034 reads in 1232.196 CPU sec, 163.297 real sec
[M::process] 0 single-end sequences; 221720 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (20, 55904, 54, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 554, 3069)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8815)
[M::mem_pestat] mean and std.dev: (1545.37, 2116.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11688)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 232, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 823)
[M::mem_pestat] mean and std.dev: (255.81, 151.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1054)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 122, 501)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1451)
[M::mem_pestat] mean and std.dev: (212.15, 266.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1926)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (436, 1061, 4589)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12895)
[M::mem_pestat] mean and std.dev: (2444.00, 2530.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17048)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 221720 reads in 409.240 CPU sec, 52.173 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0428\tPL:Illumina\tPU:x\tLB:pherring\tSM:0428.TB06 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2228.154 sec; CPU: 13754.300 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
