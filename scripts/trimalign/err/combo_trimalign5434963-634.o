==========================================
SLURM_JOB_ID = 5435621
SLURM_NODELIST = c11-90
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
634
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 656966 sequences (80000006 bp)...
[M::process] 0 single-end sequences; 656966 paired-end sequences
[M::process] read 665298 sequences (80000167 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 175318, 187, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (167, 268, 1580)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4406)
[M::mem_pestat] mean and std.dev: (665.71, 936.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5819)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 224, 340)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (246.56, 141.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 961)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 56, 272)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 760)
[M::mem_pestat] mean and std.dev: (105.82, 136.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1004)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (243, 403, 3258)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9288)
[M::mem_pestat] mean and std.dev: (1460.13, 1903.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12303)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656966 reads in 872.640 CPU sec, 125.919 real sec
[M::process] 0 single-end sequences; 665298 paired-end sequences
[M::process] read 663776 sequences (80000041 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 177287, 166, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (228, 459, 1655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4509)
[M::mem_pestat] mean and std.dev: (821.63, 1047.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5936)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 224, 341)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 759)
[M::mem_pestat] mean and std.dev: (246.18, 141.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 968)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 73, 255)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 703)
[M::mem_pestat] mean and std.dev: (105.26, 133.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 927)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (182, 357, 886)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2294)
[M::mem_pestat] mean and std.dev: (364.33, 359.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2998)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 665298 reads in 867.464 CPU sec, 119.679 real sec
[M::process] 0 single-end sequences; 663776 paired-end sequences
[M::process] read 654086 sequences (80000246 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 177300, 167, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 240, 689)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1699)
[M::mem_pestat] mean and std.dev: (296.41, 258.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2204)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 225, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 760)
[M::mem_pestat] mean and std.dev: (246.61, 142.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 969)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 62, 428)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1228)
[M::mem_pestat] mean and std.dev: (165.27, 234.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1628)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (190, 309, 761)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1903)
[M::mem_pestat] mean and std.dev: (329.00, 241.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2474)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 663776 reads in 777.452 CPU sec, 139.036 real sec
[M::process] 0 single-end sequences; 654086 paired-end sequences
[M::process] read 652372 sequences (80000266 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (20, 175166, 176, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (324, 570, 4062)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11538)
[M::mem_pestat] mean and std.dev: (2252.25, 2890.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15276)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 225, 341)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 755)
[M::mem_pestat] mean and std.dev: (246.82, 141.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 962)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 61, 225)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 617)
[M::mem_pestat] mean and std.dev: (112.23, 133.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 813)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (119, 253, 789)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2129)
[M::mem_pestat] mean and std.dev: (320.75, 344.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2799)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 654086 reads in 764.592 CPU sec, 138.751 real sec
[M::process] 0 single-end sequences; 652372 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 174980, 166, 29)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (162, 383, 1414)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3918)
[M::mem_pestat] mean and std.dev: (561.47, 714.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5170)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 224, 340)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (245.75, 141.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 961)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 52, 182)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 494)
[M::mem_pestat] mean and std.dev: (82.99, 100.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 650)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 483, 5963)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17565)
[M::mem_pestat] mean and std.dev: (2354.48, 3252.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 23366)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 654560 sequences (80000185 bp)...
[M::mem_process_seqs] Processed 652372 reads in 756.652 CPU sec, 212.026 real sec
[M::process] 0 single-end sequences; 654560 paired-end sequences
[M::process] read 664328 sequences (80000161 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 174979, 161, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (200, 341, 901)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2303)
[M::mem_pestat] mean and std.dev: (426.37, 389.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3004)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 225, 341)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 757)
[M::mem_pestat] mean and std.dev: (246.67, 142.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 965)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 79, 527)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1523)
[M::mem_pestat] mean and std.dev: (237.02, 336.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2021)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (331, 428, 2638)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7252)
[M::mem_pestat] mean and std.dev: (1297.04, 1652.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9559)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 654560 reads in 812.844 CPU sec, 141.641 real sec
[M::process] 0 single-end sequences; 664328 paired-end sequences
[M::process] read 694112 sequences (80000119 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 177036, 171, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 418, 2595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7421)
[M::mem_pestat] mean and std.dev: (1157.02, 1478.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9834)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 221, 337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 747)
[M::mem_pestat] mean and std.dev: (243.97, 140.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 952)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 58, 265)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 747)
[M::mem_pestat] mean and std.dev: (119.56, 161.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 988)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (327, 800, 4159)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11823)
[M::mem_pestat] mean and std.dev: (2185.63, 2474.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15655)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 664328 reads in 860.320 CPU sec, 119.799 real sec
[M::process] 0 single-end sequences; 694112 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 182800, 189, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (158, 298, 3223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9353)
[M::mem_pestat] mean and std.dev: (1222.63, 1914.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12418)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 216, 323)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 707)
[M::mem_pestat] mean and std.dev: (235.29, 131.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 899)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 55, 321)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 915)
[M::mem_pestat] mean and std.dev: (137.31, 197.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1212)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (217, 446, 2148)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6010)
[M::mem_pestat] mean and std.dev: (1124.13, 1532.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7941)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 694112 reads in 773.624 CPU sec, 150.443 real sec
[M::process] read 690394 sequences (80000102 bp)...
[M::process] 0 single-end sequences; 690394 paired-end sequences
[M::process] read 675752 sequences (80000065 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 182111, 194, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (147, 342, 1816)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5154)
[M::mem_pestat] mean and std.dev: (682.09, 861.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6823)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 216, 325)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 713)
[M::mem_pestat] mean and std.dev: (236.03, 131.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 907)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 59, 278)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 780)
[M::mem_pestat] mean and std.dev: (123.44, 164.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1031)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (220, 375, 2481)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7003)
[M::mem_pestat] mean and std.dev: (1273.82, 1891.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9264)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 690394 reads in 888.000 CPU sec, 126.435 real sec
[M::process] 0 single-end sequences; 675752 paired-end sequences
[M::process] read 683134 sequences (80000231 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 178490, 179, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (162, 303, 1261)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3459)
[M::mem_pestat] mean and std.dev: (450.31, 531.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4558)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 216, 325)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 713)
[M::mem_pestat] mean and std.dev: (236.48, 131.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 907)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 64, 186)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 494)
[M::mem_pestat] mean and std.dev: (90.31, 99.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 648)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (192, 373, 1195)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3201)
[M::mem_pestat] mean and std.dev: (601.93, 575.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4204)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 675752 reads in 873.400 CPU sec, 169.821 real sec
[M::process] 0 single-end sequences; 683134 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 180677, 187, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (212, 422, 901)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2279)
[M::mem_pestat] mean and std.dev: (379.46, 287.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2968)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 215, 323)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 709)
[M::mem_pestat] mean and std.dev: (235.22, 131.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 902)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 55, 265)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 737)
[M::mem_pestat] mean and std.dev: (128.05, 166.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 973)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 379, 777)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1953)
[M::mem_pestat] mean and std.dev: (436.69, 402.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2541)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
Finished in 1686.42 s (371 us/read; 0.16 M reads/minute).

=== Summary ===

Total read pairs processed:          4,541,134
  Read 1 with adapter:                 975,482 (21.5%)
  Read 2 with adapter:                 937,955 (20.7%)
Pairs that were too short:             605,028 (13.3%)
Pairs written (passing filters):     3,936,106 (86.7%)

Total basepairs processed: 1,362,340,200 bp
  Read 1:   681,170,100 bp
  Read 2:   681,170,100 bp
Quality-trimmed:             381,107,710 bp (28.0%)
  Read 1:   190,553,855 bp
  Read 2:   190,553,855 bp
Total written (filtered):    940,842,170 bp (69.1%)
  Read 1:   481,633,221 bp
  Read 2:   459,208,949 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 975482 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.5%
  C: 40.2%
  G: 29.6%
  T: 18.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	77631	70955.2	0	77631
4	31008	17738.8	0	31008
5	14756	4434.7	0	14756
6	11131	1108.7	0	11131
7	11232	277.2	0	11232
8	10361	69.3	0	10361
9	9634	17.3	0	9493 141
10	9607	4.3	1	9003 604
11	10770	1.1	1	10163 607
12	11961	0.3	1	11285 676
13	11323	0.3	1	10733 590
14	11602	0.3	1	10832 770
15	12507	0.3	1	11724 783
16	12998	0.3	1	11994 1004
17	13318	0.3	1	12547 771
18	11303	0.3	1	10641 662
19	13029	0.3	1	12275 754
20	13336	0.3	1	12581 755
21	16187	0.3	1	15356 831
22	14460	0.3	1	13873 587
23	9245	0.3	1	8823 422
24	8639	0.3	1	8291 348
25	10737	0.3	1	10295 442
26	9934	0.3	1	9546 388
27	12573	0.3	1	11947 626
28	9604	0.3	1	9245 359
29	13287	0.3	1	12675 612
30	14067	0.3	1	13516 551
31	10442	0.3	1	9969 473
32	12418	0.3	1	12003 415
33	9984	0.3	1	9511 473
34	11533	0.3	1	11120 413
35	13853	0.3	1	13343 510
36	10820	0.3	1	10395 425
37	13738	0.3	1	13260 478
38	10955	0.3	1	10536 419
39	15228	0.3	1	14618 610
40	10422	0.3	1	9968 454
41	16665	0.3	1	15986 679
42	19813	0.3	1	19258 555
43	18781	0.3	1	18271 510
44	6864	0.3	1	6689 175
45	20132	0.3	1	19755 377
46	2296	0.3	1	2212 84
47	4685	0.3	1	4562 123
48	6552	0.3	1	6413 139
49	8805	0.3	1	8588 217
50	8997	0.3	1	8804 193
51	8409	0.3	1	8221 188
52	7730	0.3	1	7577 153
53	9388	0.3	1	9185 203
54	8567	0.3	1	8388 179
55	11047	0.3	1	10850 197
56	7413	0.3	1	7261 152
57	9167	0.3	1	8952 215
58	8957	0.3	1	8770 187
59	8909	0.3	1	8710 199
60	8259	0.3	1	8104 155
61	9175	0.3	1	8975 200
62	7923	0.3	1	7744 179
63	13364	0.3	1	13100 264
64	9958	0.3	1	9780 178
65	8355	0.3	1	8208 147
66	13290	0.3	1	13078 212
67	9788	0.3	1	9611 177
68	8161	0.3	1	8002 159
69	12372	0.3	1	12081 291
70	13765	0.3	1	13543 222
71	18138	0.3	1	17658 480
72	97248	0.3	1	96544 704
73	6956	0.3	1	6761 195
74	954	0.3	1	898 56
75	434	0.3	1	381 53
76	266	0.3	1	241 25
77	323	0.3	1	272 51
78	271	0.3	1	230 41
79	387	0.3	1	326 61
80	333	0.3	1	293 40
81	396	0.3	1	348 48
82	364	0.3	1	322 42
83	387	0.3	1	330 57
84	281	0.3	1	250 31
85	318	0.3	1	266 52
86	217	0.3	1	190 27
87	275	0.3	1	220 55
88	245	0.3	1	192 53
89	279	0.3	1	233 46
90	182	0.3	1	145 37
91	235	0.3	1	186 49
92	182	0.3	1	136 46
93	221	0.3	1	166 55
94	161	0.3	1	129 32
95	207	0.3	1	172 35
96	136	0.3	1	101 35
97	181	0.3	1	142 39
98	149	0.3	1	119 30
99	148	0.3	1	114 34
100	134	0.3	1	97 37
101	176	0.3	1	132 44
102	120	0.3	1	93 27
103	155	0.3	1	123 32
104	91	0.3	1	60 31
105	128	0.3	1	92 36
106	81	0.3	1	54 27
107	108	0.3	1	81 27
108	90	0.3	1	64 26
109	109	0.3	1	74 35
110	68	0.3	1	39 29
111	94	0.3	1	62 32
112	52	0.3	1	30 22
113	84	0.3	1	62 22
114	47	0.3	1	25 22
115	65	0.3	1	37 28
116	47	0.3	1	19 28
117	56	0.3	1	28 28
118	50	0.3	1	17 33
119	52	0.3	1	27 25
120	34	0.3	1	15 19
121	47	0.3	1	11 36
122	30	0.3	1	6 24
123	38	0.3	1	16 22
124	33	0.3	1	2 31
125	28	0.3	1	8 20
126	26	0.3	1	2 24
127	37	0.3	1	5 32
128	31	0.3	1	0 31
129	28	0.3	1	4 24
130	26	0.3	1	1 25
131	25	0.3	1	5 20
132	30	0.3	1	1 29
133	24	0.3	1	2 22
134	27	0.3	1	0 27
135	27	0.3	1	1 26
136	21	0.3	1	0 21
137	19	0.3	1	2 17
138	12	0.3	1	0 12
139	12	0.3	1	0 12
140	26	0.3	1	0 26

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 937955 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.5%
  C: 40.5%
  G: 29.1%
  T: 18.9%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	72418	70955.2	0	72418
4	29408	17738.8	0	29408
5	15118	4434.7	0	15118
6	10835	1108.7	0	10835
7	10860	277.2	0	10860
8	9654	69.3	0	9654
9	9937	17.3	0	9811 126
10	9277	4.3	1	8778 499
11	10245	1.1	1	9794 451
12	11162	0.3	1	10622 540
13	10519	0.3	1	10069 450
14	11254	0.3	1	10648 606
15	13076	0.3	1	12373 703
16	13733	0.3	1	12961 772
17	12995	0.3	1	12423 572
18	12351	0.3	1	11823 528
19	12876	0.3	1	12315 561
20	12097	0.3	1	11692 405
21	9307	0.3	1	8977 330
22	12492	0.3	1	12059 433
23	9155	0.3	1	8838 317
24	11509	0.3	1	11101 408
25	12203	0.3	1	11798 405
26	12470	0.3	1	12084 386
27	11819	0.3	1	11478 341
28	11035	0.3	1	10698 337
29	13670	0.3	1	13320 350
30	8565	0.3	1	8320 245
31	9631	0.3	1	9366 265
32	10478	0.3	1	10224 254
33	9588	0.3	1	9289 299
34	9572	0.3	1	9253 319
35	8643	0.3	1	8445 198
36	9149	0.3	1	8881 268
37	11511	0.3	1	11162 349
38	9665	0.3	1	9324 341
39	13685	0.3	1	13191 494
40	7839	0.3	1	7586 253
41	10986	0.3	1	10634 352
42	14763	0.3	1	14447 316
43	6324	0.3	1	6190 134
44	8489	0.3	1	8321 168
45	7409	0.3	1	7276 133
46	8592	0.3	1	8427 165
47	9670	0.3	1	9498 172
48	9655	0.3	1	9444 211
49	9412	0.3	1	9204 208
50	10115	0.3	1	9909 206
51	9086	0.3	1	8894 192
52	10947	0.3	1	10703 244
53	10871	0.3	1	10645 226
54	15530	0.3	1	15243 287
55	7277	0.3	1	7138 139
56	10420	0.3	1	10253 167
57	13206	0.3	1	12986 220
58	5987	0.3	1	5883 104
59	7100	0.3	1	6984 116
60	8556	0.3	1	8400 156
61	7947	0.3	1	7797 150
62	7770	0.3	1	7614 156
63	16035	0.3	1	15797 238
64	4231	0.3	1	4133 98
65	6596	0.3	1	6480 116
66	4588	0.3	1	4488 100
67	7814	0.3	1	7646 168
68	7990	0.3	1	7825 165
69	8145	0.3	1	7994 151
70	6006	0.3	1	5906 100
71	7829	0.3	1	7661 168
72	7842	0.3	1	7661 181
73	9631	0.3	1	9320 311
74	10296	0.3	1	10009 287
75	16516	0.3	1	15982 534
76	97326	0.3	1	96337 989
77	5910	0.3	1	5722 188
78	803	0.3	1	739 64
79	560	0.3	1	502 58
80	496	0.3	1	458 38
81	540	0.3	1	496 44
82	375	0.3	1	345 30
83	535	0.3	1	502 33
84	942	0.3	1	882 60
85	897	0.3	1	866 31
86	1016	0.3	1	984 32
87	879	0.3	1	827 52
88	631	0.3	1	594 37
89	392	0.3	1	351 41
90	209	0.3	1	183 26
91	185	0.3	1	151 34
92	186	0.3	1	164 22
93	182	0.3	1	147 35
94	107	0.3	1	81 26
95	152	0.3	1	118 34
96	119	0.3	1	87 32
97	112	0.3	1	89 23
98	102	0.3	1	82 20
99	106	0.3	1	83 23
100	125	0.3	1	92 33
101	107	0.3	1	80 27
102	88	0.3	1	58 30
103	89	0.3	1	69 20
104	81	0.3	1	47 34
105	98	0.3	1	65 33
106	66	0.3	1	32 34
107	89	0.3	1	55 34
108	58	0.3	1	36 22
109	70	0.3	1	44 26
110	62	0.3	1	34 28
111	55	0.3	1	24 31
112	48	0.3	1	25 23
113	52	0.3	1	35 17
114	31	0.3	1	8 23
115	47	0.3	1	27 20
116	30	0.3	1	7 23
117	46	0.3	1	26 20
118	31	0.3	1	11 20
119	32	0.3	1	11 21
120	33	0.3	1	5 28
121	36	0.3	1	11 25
122	24	0.3	1	4 20
123	28	0.3	1	7 21
124	17	0.3	1	1 16
125	37	0.3	1	16 21
126	27	0.3	1	5 22
127	28	0.3	1	4 24
128	31	0.3	1	5 26
129	18	0.3	1	2 16
130	20	0.3	1	1 19
131	22	0.3	1	1 21
132	17	0.3	1	0 17
133	13	0.3	1	3 10
134	14	0.3	1	1 13
135	14	0.3	1	1 13
136	12	0.3	1	0 12
137	18	0.3	1	0 18
138	15	0.3	1	2 13
139	10	0.3	1	1 9
140	22	0.3	1	2 20

[M::process] read 517434 sequences (60840581 bp)...
[M::mem_process_seqs] Processed 683134 reads in 868.024 CPU sec, 126.575 real sec
[M::process] 0 single-end sequences; 517434 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 136558, 138, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (165, 279, 1658)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4644)
[M::mem_pestat] mean and std.dev: (773.04, 1074.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6137)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 213, 322)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 708)
[M::mem_pestat] mean and std.dev: (233.61, 131.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 901)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 53, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 839)
[M::mem_pestat] mean and std.dev: (121.31, 170.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1110)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (504, 730, 3515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9537)
[M::mem_pestat] mean and std.dev: (2122.43, 2775.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13224)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 517434 reads in 661.568 CPU sec, 87.056 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0634\tPL:Illumina\tPU:x\tLB:pherring\tSM:0634.TB17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1779.557 sec; CPU: 9785.852 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
