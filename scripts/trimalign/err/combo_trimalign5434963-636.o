==========================================
SLURM_JOB_ID = 5435623
SLURM_NODELIST = c9-86
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
636
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 658792 sequences (80000022 bp)...
[M::process] 0 single-end sequences; 658792 paired-end sequences
[M::process] read 665848 sequences (80000122 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 177531, 182, 37)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (227, 442, 2355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6611)
[M::mem_pestat] mean and std.dev: (1149.42, 1452.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8739)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (126, 215, 340)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 768)
[M::mem_pestat] mean and std.dev: (244.81, 149.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 982)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 70, 275)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 761)
[M::mem_pestat] mean and std.dev: (120.94, 158.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1004)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (208, 405, 4302)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12490)
[M::mem_pestat] mean and std.dev: (1916.86, 2460.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16584)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 658792 reads in 1031.268 CPU sec, 146.017 real sec
[M::process] 0 single-end sequences; 665848 paired-end sequences
[M::process] read 666392 sequences (80000054 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 179160, 161, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 504, 4223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12281)
[M::mem_pestat] mean and std.dev: (2101.82, 2779.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16310)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (125, 214, 339)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 767)
[M::mem_pestat] mean and std.dev: (244.03, 149.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 981)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 68, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1386)
[M::mem_pestat] mean and std.dev: (199.08, 277.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1839)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (161, 1030, 3586)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10436)
[M::mem_pestat] mean and std.dev: (2296.93, 2884.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13861)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 665848 reads in 1007.432 CPU sec, 134.715 real sec
[M::process] 0 single-end sequences; 666392 paired-end sequences
[M::process] read 659782 sequences (80000016 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 179644, 182, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (219, 386, 1433)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3861)
[M::mem_pestat] mean and std.dev: (621.60, 651.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5075)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (125, 215, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 776)
[M::mem_pestat] mean and std.dev: (245.44, 150.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 993)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 58, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1041)
[M::mem_pestat] mean and std.dev: (141.20, 216.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1379)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (249, 931, 3486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9960)
[M::mem_pestat] mean and std.dev: (2064.50, 2479.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13197)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 666392 reads in 998.912 CPU sec, 137.837 real sec
[M::process] 0 single-end sequences; 659782 paired-end sequences
[M::process] read 654382 sequences (80000063 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 178015, 179, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (173, 403, 1438)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3968)
[M::mem_pestat] mean and std.dev: (812.61, 978.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5233)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (126, 216, 343)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 777)
[M::mem_pestat] mean and std.dev: (245.83, 150.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 994)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 66, 358)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1016)
[M::mem_pestat] mean and std.dev: (147.74, 209.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1345)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (313, 840, 4898)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14068)
[M::mem_pestat] mean and std.dev: (2442.74, 2908.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18653)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 659782 reads in 1006.736 CPU sec, 134.189 real sec
[M::process] 0 single-end sequences; 654382 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (24, 176476, 165, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (205, 543, 3874)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11212)
[M::mem_pestat] mean and std.dev: (1850.08, 2729.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14881)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (126, 215, 340)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 768)
[M::mem_pestat] mean and std.dev: (244.76, 149.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 982)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 52, 332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 932)
[M::mem_pestat] mean and std.dev: (143.30, 204.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1232)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 320, 820)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2136)
[M::mem_pestat] mean and std.dev: (383.83, 333.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2794)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 657626 sequences (80000196 bp)...
[M::mem_process_seqs] Processed 654382 reads in 1001.404 CPU sec, 143.681 real sec
[M::process] 0 single-end sequences; 657626 paired-end sequences
[M::process] read 656416 sequences (80000102 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (30, 176977, 158, 42)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (211, 543, 1534)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4180)
[M::mem_pestat] mean and std.dev: (756.19, 843.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5503)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (126, 214, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 774)
[M::mem_pestat] mean and std.dev: (245.16, 150.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 990)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 76, 490)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1404)
[M::mem_pestat] mean and std.dev: (206.00, 292.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1861)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (187, 433, 1771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4939)
[M::mem_pestat] mean and std.dev: (808.43, 1011.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6523)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 657626 reads in 990.232 CPU sec, 132.255 real sec
[M::process] 0 single-end sequences; 656416 paired-end sequences
[M::process] read 681646 sequences (80000034 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 177625, 193, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (190, 621, 1969)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5527)
[M::mem_pestat] mean and std.dev: (1290.30, 1617.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7760)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (126, 215, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 774)
[M::mem_pestat] mean and std.dev: (245.14, 150.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 990)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 59, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 985)
[M::mem_pestat] mean and std.dev: (153.16, 216.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1303)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (188, 587, 3201)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9227)
[M::mem_pestat] mean and std.dev: (2008.82, 2705.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12830)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656416 reads in 981.824 CPU sec, 133.240 real sec
[M::process] 0 single-end sequences; 681646 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (30, 181825, 163, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (148, 420, 2302)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6610)
[M::mem_pestat] mean and std.dev: (1152.79, 1497.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8764)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (125, 209, 325)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 725)
[M::mem_pestat] mean and std.dev: (235.70, 140.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 925)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 60, 323)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 919)
[M::mem_pestat] mean and std.dev: (137.78, 201.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1217)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (237, 433, 927)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2307)
[M::mem_pestat] mean and std.dev: (374.32, 252.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2997)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 681646 reads in 1002.880 CPU sec, 131.889 real sec
[M::process] read 699162 sequences (80000038 bp)...
[M::process] 0 single-end sequences; 699162 paired-end sequences
[M::process] read 682432 sequences (80000263 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (23, 185931, 172, 36)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (224, 386, 2073)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5771)
[M::mem_pestat] mean and std.dev: (1131.32, 1548.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7620)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (123, 205, 319)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 711)
[M::mem_pestat] mean and std.dev: (231.28, 137.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 907)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 52, 269)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 755)
[M::mem_pestat] mean and std.dev: (90.32, 143.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 998)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 682, 3020)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8668)
[M::mem_pestat] mean and std.dev: (1812.61, 2253.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11492)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 699162 reads in 1002.492 CPU sec, 140.847 real sec
[M::process] 0 single-end sequences; 682432 paired-end sequences
[M::process] read 679036 sequences (80000238 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 181764, 201, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (206, 346, 2214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6230)
[M::mem_pestat] mean and std.dev: (1181.67, 1598.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8238)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (124, 207, 323)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 721)
[M::mem_pestat] mean and std.dev: (233.62, 138.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 61, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 979)
[M::mem_pestat] mean and std.dev: (150.44, 213.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1296)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (183, 422, 4051)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11787)
[M::mem_pestat] mean and std.dev: (2140.87, 2755.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15655)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 682432 reads in 1000.840 CPU sec, 134.306 real sec
[M::process] 0 single-end sequences; 679036 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (19, 181218, 165, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (241, 552, 2891)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8191)
[M::mem_pestat] mean and std.dev: (1190.76, 1401.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10841)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (125, 207, 321)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 713)
[M::mem_pestat] mean and std.dev: (233.03, 137.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 909)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 56, 333)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 945)
[M::mem_pestat] mean and std.dev: (141.05, 207.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1251)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (334, 636, 3165)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8827)
[M::mem_pestat] mean and std.dev: (1779.81, 2277.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11658)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 681826 sequences (80000183 bp)...
[M::mem_process_seqs] Processed 679036 reads in 1007.208 CPU sec, 141.428 real sec
[M::process] 0 single-end sequences; 681826 paired-end sequences
Finished in 1841.18 s (374 us/read; 0.16 M reads/minute).

=== Summary ===

Total read pairs processed:          4,917,540
  Read 1 with adapter:               1,140,271 (23.2%)
  Read 2 with adapter:               1,088,120 (22.1%)
Pairs that were too short:             667,545 (13.6%)
Pairs written (passing filters):     4,249,995 (86.4%)

Total basepairs processed: 1,475,262,000 bp
  Read 1:   737,631,000 bp
  Read 2:   737,631,000 bp
Quality-trimmed:             399,416,586 bp (27.1%)
  Read 1:   199,708,293 bp
  Read 2:   199,708,293 bp
Total written (filtered):  1,013,624,210 bp (68.7%)
  Read 1:   519,984,778 bp
  Read 2:   493,639,432 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1140271 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.3%
  C: 39.1%
  G: 29.6%
  T: 19.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	82681	76836.6	0	82681
4	34027	19209.1	0	34027
5	16882	4802.3	0	16882
6	12847	1200.6	0	12847
7	13243	300.1	0	13243
8	11880	75.0	0	11880
9	11419	18.8	0	11267 152
10	11556	4.7	1	10889 667
11	12581	1.2	1	12006 575
12	13222	0.3	1	12530 692
13	13247	0.3	1	12599 648
14	13255	0.3	1	12468 787
15	14539	0.3	1	13661 878
16	14874	0.3	1	13820 1054
17	15271	0.3	1	14492 779
18	13148	0.3	1	12444 704
19	15029	0.3	1	14292 737
20	14902	0.3	1	14153 749
21	18306	0.3	1	17433 873
22	16144	0.3	1	15492 652
23	10915	0.3	1	10462 453
24	10210	0.3	1	9849 361
25	12341	0.3	1	11857 484
26	11607	0.3	1	11197 410
27	14715	0.3	1	14033 682
28	11097	0.3	1	10662 435
29	15334	0.3	1	14652 682
30	16153	0.3	1	15573 580
31	12009	0.3	1	11566 443
32	14915	0.3	1	14413 502
33	12123	0.3	1	11648 475
34	14115	0.3	1	13663 452
35	16625	0.3	1	16065 560
36	12304	0.3	1	11857 447
37	15270	0.3	1	14753 517
38	12562	0.3	1	12101 461
39	17636	0.3	1	16982 654
40	12311	0.3	1	11799 512
41	18933	0.3	1	18192 741
42	22754	0.3	1	22124 630
43	21660	0.3	1	21101 559
44	8476	0.3	1	8266 210
45	23956	0.3	1	23548 408
46	2725	0.3	1	2632 93
47	5486	0.3	1	5364 122
48	8086	0.3	1	7926 160
49	10068	0.3	1	9831 237
50	10839	0.3	1	10654 185
51	9860	0.3	1	9648 212
52	9179	0.3	1	9016 163
53	11399	0.3	1	11151 248
54	10127	0.3	1	9891 236
55	13288	0.3	1	13039 249
56	8913	0.3	1	8749 164
57	10946	0.3	1	10733 213
58	10528	0.3	1	10307 221
59	10449	0.3	1	10208 241
60	10032	0.3	1	9852 180
61	10489	0.3	1	10277 212
62	9492	0.3	1	9302 190
63	15691	0.3	1	15419 272
64	11813	0.3	1	11635 178
65	9997	0.3	1	9814 183
66	15052	0.3	1	14845 207
67	11582	0.3	1	11379 203
68	9791	0.3	1	9613 178
69	14603	0.3	1	14275 328
70	16324	0.3	1	16043 281
71	22731	0.3	1	22115 616
72	123161	0.3	1	122274 887
73	9013	0.3	1	8762 251
74	1010	0.3	1	953 57
75	468	0.3	1	412 56
76	347	0.3	1	293 54
77	348	0.3	1	292 56
78	330	0.3	1	270 60
79	444	0.3	1	388 56
80	372	0.3	1	341 31
81	471	0.3	1	410 61
82	404	0.3	1	359 45
83	425	0.3	1	376 49
84	351	0.3	1	286 65
85	348	0.3	1	291 57
86	288	0.3	1	247 41
87	328	0.3	1	282 46
88	267	0.3	1	226 41
89	319	0.3	1	266 53
90	226	0.3	1	192 34
91	271	0.3	1	232 39
92	195	0.3	1	161 34
93	294	0.3	1	243 51
94	176	0.3	1	142 34
95	244	0.3	1	193 51
96	204	0.3	1	167 37
97	253	0.3	1	201 52
98	144	0.3	1	119 25
99	237	0.3	1	185 52
100	147	0.3	1	126 21
101	196	0.3	1	152 44
102	139	0.3	1	104 35
103	161	0.3	1	141 20
104	134	0.3	1	103 31
105	164	0.3	1	128 36
106	97	0.3	1	65 32
107	135	0.3	1	100 35
108	84	0.3	1	59 25
109	118	0.3	1	90 28
110	111	0.3	1	70 41
111	120	0.3	1	85 35
112	67	0.3	1	41 26
113	109	0.3	1	62 47
114	59	0.3	1	38 21
115	69	0.3	1	33 36
116	53	0.3	1	19 34
117	66	0.3	1	35 31
118	39	0.3	1	11 28
119	51	0.3	1	24 27
120	36	0.3	1	11 25
121	60	0.3	1	17 43
122	33	0.3	1	9 24
123	35	0.3	1	15 20
124	34	0.3	1	1 33
125	20	0.3	1	6 14
126	33	0.3	1	5 28
127	36	0.3	1	8 28
128	26	0.3	1	1 25
129	32	0.3	1	3 29
130	37	0.3	1	1 36
131	27	0.3	1	0 27
132	29	0.3	1	0 29
133	26	0.3	1	2 24
134	23	0.3	1	0 23
135	37	0.3	1	2 35
136	23	0.3	1	1 22
137	32	0.3	1	0 32
138	26	0.3	1	1 25
139	17	0.3	1	0 17
140	28	0.3	1	1 27

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1088120 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.3%
  C: 39.0%
  G: 29.0%
  T: 19.6%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	77505	76836.6	0	77505
4	30729	19209.1	0	30729
5	15793	4802.3	0	15793
6	12207	1200.6	0	12207
7	12158	300.1	0	12158
8	10732	75.0	0	10732
9	11552	18.8	0	11411 141
10	10424	4.7	1	9797 627
11	11755	1.2	1	11205 550
12	12227	0.3	1	11583 644
13	12132	0.3	1	11613 519
14	11689	0.3	1	11071 618
15	14328	0.3	1	13533 795
16	13772	0.3	1	12967 805
17	12931	0.3	1	12327 604
18	13216	0.3	1	12595 621
19	16765	0.3	1	15952 813
20	13325	0.3	1	12849 476
21	10623	0.3	1	10250 373
22	12706	0.3	1	12225 481
23	9884	0.3	1	9577 307
24	12493	0.3	1	12040 453
25	12186	0.3	1	11772 414
26	11978	0.3	1	11578 400
27	10810	0.3	1	10485 325
28	12026	0.3	1	11676 350
29	11225	0.3	1	10940 285
30	10662	0.3	1	10266 396
31	12924	0.3	1	12486 438
32	12406	0.3	1	12073 333
33	11376	0.3	1	10959 417
34	8668	0.3	1	8446 222
35	11391	0.3	1	11030 361
36	12162	0.3	1	11817 345
37	9947	0.3	1	9623 324
38	13228	0.3	1	12858 370
39	9734	0.3	1	9461 273
40	12019	0.3	1	11719 300
41	10907	0.3	1	10580 327
42	10892	0.3	1	10590 302
43	11980	0.3	1	11542 438
44	11145	0.3	1	10805 340
45	14158	0.3	1	13695 463
46	14301	0.3	1	13846 455
47	12849	0.3	1	12595 254
48	11121	0.3	1	10833 288
49	11514	0.3	1	11232 282
50	12188	0.3	1	11854 334
51	11633	0.3	1	11336 297
52	14827	0.3	1	14454 373
53	14033	0.3	1	13752 281
54	16983	0.3	1	16634 349
55	9708	0.3	1	9522 186
56	12876	0.3	1	12630 246
57	14444	0.3	1	14187 257
58	8071	0.3	1	7939 132
59	9314	0.3	1	9143 171
60	10369	0.3	1	10184 185
61	9733	0.3	1	9561 172
62	9490	0.3	1	9300 190
63	18983	0.3	1	18650 333
64	5975	0.3	1	5853 122
65	8231	0.3	1	8082 149
66	6128	0.3	1	5994 134
67	10138	0.3	1	9912 226
68	9178	0.3	1	8996 182
69	9792	0.3	1	9590 202
70	8214	0.3	1	8074 140
71	10533	0.3	1	10310 223
72	9956	0.3	1	9717 239
73	11949	0.3	1	11552 397
74	12859	0.3	1	12486 373
75	19415	0.3	1	18817 598
76	123324	0.3	1	122079 1245
77	6399	0.3	1	6170 229
78	847	0.3	1	790 57
79	644	0.3	1	588 56
80	518	0.3	1	486 32
81	527	0.3	1	476 51
82	463	0.3	1	420 43
83	629	0.3	1	586 43
84	1125	0.3	1	1069 56
85	1100	0.3	1	1055 45
86	1248	0.3	1	1206 42
87	1014	0.3	1	970 44
88	758	0.3	1	720 38
89	404	0.3	1	365 39
90	216	0.3	1	183 33
91	241	0.3	1	192 49
92	199	0.3	1	160 39
93	191	0.3	1	149 42
94	128	0.3	1	105 23
95	185	0.3	1	148 37
96	117	0.3	1	90 27
97	146	0.3	1	113 33
98	121	0.3	1	83 38
99	119	0.3	1	83 36
100	110	0.3	1	75 35
101	155	0.3	1	108 47
102	85	0.3	1	55 30
103	118	0.3	1	80 38
104	79	0.3	1	49 30
105	88	0.3	1	59 29
106	56	0.3	1	31 25
107	66	0.3	1	47 19
108	60	0.3	1	27 33
109	64	0.3	1	43 21
110	49	0.3	1	21 28
111	66	0.3	1	39 27
112	58	0.3	1	28 30
113	57	0.3	1	37 20
114	44	0.3	1	21 23
115	45	0.3	1	25 20
116	31	0.3	1	6 25
117	42	0.3	1	18 24
118	42	0.3	1	11 31
119	45	0.3	1	17 28
120	44	0.3	1	8 36
121	43	0.3	1	16 27
122	22	0.3	1	4 18
123	28	0.3	1	13 15
124	39	0.3	1	4 35
125	32	0.3	1	8 24
126	23	0.3	1	6 17
127	26	0.3	1	11 15
128	33	0.3	1	2 31
129	21	0.3	1	2 19
130	27	0.3	1	0 27
131	22	0.3	1	4 18
132	28	0.3	1	1 27
133	19	0.3	1	2 17
134	20	0.3	1	2 18
135	23	0.3	1	2 21
136	17	0.3	1	0 17
137	14	0.3	1	0 14
138	8	0.3	1	0 8
139	15	0.3	1	0 15
140	18	0.3	1	0 18

[M::process] read 456650 sequences (53622879 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 181961, 159, 29)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (159, 229, 666)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1680)
[M::mem_pestat] mean and std.dev: (366.52, 356.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2187)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (123, 205, 320)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 714)
[M::mem_pestat] mean and std.dev: (231.65, 137.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 911)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 64, 430)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1236)
[M::mem_pestat] mean and std.dev: (183.81, 294.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1639)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 258, 1066)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2922)
[M::mem_pestat] mean and std.dev: (354.38, 444.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3850)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 681826 reads in 1037.432 CPU sec, 136.277 real sec
[M::process] 0 single-end sequences; 456650 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 121550, 106, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (264, 393, 1380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3612)
[M::mem_pestat] mean and std.dev: (457.04, 367.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4728)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (122, 204, 318)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 710)
[M::mem_pestat] mean and std.dev: (230.02, 136.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 906)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 64, 339)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 961)
[M::mem_pestat] mean and std.dev: (137.05, 186.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1272)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (166, 417, 672)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1684)
[M::mem_pestat] mean and std.dev: (374.23, 236.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2190)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 456650 reads in 703.940 CPU sec, 88.993 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0636\tPL:Illumina\tPU:x\tLB:pherring\tSM:0636.TB17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2048.002 sec; CPU: 12782.956 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
