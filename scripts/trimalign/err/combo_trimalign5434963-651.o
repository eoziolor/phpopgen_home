==========================================
SLURM_JOB_ID = 5435638
SLURM_NODELIST = c8-92
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
651
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 618900 sequences (80000158 bp)...
[M::process] 0 single-end sequences; 618900 paired-end sequences
[M::process] read 621754 sequences (80000072 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 176656, 172, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (224, 749, 3869)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11159)
[M::mem_pestat] mean and std.dev: (2176.86, 2845.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14804)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (217, 367, 508)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1090)
[M::mem_pestat] mean and std.dev: (374.84, 196.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1381)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 86, 409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1159)
[M::mem_pestat] mean and std.dev: (165.42, 231.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1534)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (249, 529, 3349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9549)
[M::mem_pestat] mean and std.dev: (1626.78, 1854.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12649)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 618900 reads in 835.792 CPU sec, 124.170 real sec
[M::process] 0 single-end sequences; 621754 paired-end sequences
[M::process] read 620248 sequences (80000001 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 176689, 181, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (507, 1227, 5097)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14277)
[M::mem_pestat] mean and std.dev: (2595.84, 2624.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18867)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (219, 370, 514)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1104)
[M::mem_pestat] mean and std.dev: (378.70, 199.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1399)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 142, 608)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1758)
[M::mem_pestat] mean and std.dev: (236.55, 326.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2333)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (479, 900, 3615)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9887)
[M::mem_pestat] mean and std.dev: (2141.53, 2472.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13023)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 621754 reads in 842.200 CPU sec, 114.414 real sec
[M::process] 0 single-end sequences; 620248 paired-end sequences
[M::process] read 619756 sequences (80000163 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (43, 177069, 176, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (355, 1392, 3478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9724)
[M::mem_pestat] mean and std.dev: (2337.84, 2243.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12847)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (218, 367, 510)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1094)
[M::mem_pestat] mean and std.dev: (375.54, 196.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1386)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 82, 657)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1915)
[M::mem_pestat] mean and std.dev: (271.05, 426.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2544)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (383, 656, 4103)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11543)
[M::mem_pestat] mean and std.dev: (2233.44, 2567.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15263)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 620248 reads in 846.344 CPU sec, 116.462 real sec
[M::process] 0 single-end sequences; 619756 paired-end sequences
[M::process] read 622446 sequences (80000267 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 176222, 194, 29)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (332, 737, 3004)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8348)
[M::mem_pestat] mean and std.dev: (1795.03, 1970.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11020)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (214, 363, 508)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1096)
[M::mem_pestat] mean and std.dev: (373.35, 198.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1390)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (35, 81, 552)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1586)
[M::mem_pestat] mean and std.dev: (205.86, 282.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2103)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (233, 397, 1186)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3092)
[M::mem_pestat] mean and std.dev: (442.88, 384.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4045)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 619756 reads in 862.008 CPU sec, 116.559 real sec
[M::process] 0 single-end sequences; 622446 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (43, 177485, 184, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (405, 687, 4374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12312)
[M::mem_pestat] mean and std.dev: (2309.77, 2665.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16281)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (218, 366, 507)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1085)
[M::mem_pestat] mean and std.dev: (374.22, 195.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1374)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 57, 422)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1210)
[M::mem_pestat] mean and std.dev: (161.80, 243.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1604)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 721, 3415)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9607)
[M::mem_pestat] mean and std.dev: (1807.81, 2240.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12703)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 622446 reads in 851.964 CPU sec, 114.619 real sec
[M::process] read 627598 sequences (80000101 bp)...
[M::process] 0 single-end sequences; 627598 paired-end sequences
[M::process] read 624864 sequences (80000149 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 177248, 191, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (311, 680, 1689)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4445)
[M::mem_pestat] mean and std.dev: (829.15, 909.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5823)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (217, 361, 497)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1057)
[M::mem_pestat] mean and std.dev: (367.68, 188.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1337)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (23, 62, 371)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1067)
[M::mem_pestat] mean and std.dev: (138.46, 200.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1415)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (347, 906, 5803)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16715)
[M::mem_pestat] mean and std.dev: (2863.79, 3193.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22171)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 627598 reads in 873.380 CPU sec, 118.542 real sec
[M::process] 0 single-end sequences; 624864 paired-end sequences
[M::process] read 625388 sequences (80000136 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 176736, 202, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (319, 566, 1169)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2869)
[M::mem_pestat] mean and std.dev: (568.97, 406.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3719)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (222, 367, 504)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1068)
[M::mem_pestat] mean and std.dev: (373.72, 190.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1350)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 82, 477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1375)
[M::mem_pestat] mean and std.dev: (195.90, 293.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1824)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (408, 577, 3882)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10830)
[M::mem_pestat] mean and std.dev: (1975.78, 2492.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14304)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 624864 reads in 863.932 CPU sec, 120.504 real sec
[M::process] 0 single-end sequences; 625388 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 177011, 185, 36)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (330, 764, 5225)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15015)
[M::mem_pestat] mean and std.dev: (2414.10, 3108.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19910)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (215, 357, 492)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1046)
[M::mem_pestat] mean and std.dev: (364.05, 186.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1323)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 85, 591)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1715)
[M::mem_pestat] mean and std.dev: (212.86, 323.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2277)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (277, 589, 2700)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7546)
[M::mem_pestat] mean and std.dev: (1177.12, 1468.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9969)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 625388 reads in 865.700 CPU sec, 112.357 real sec
Finished in 1391.77 s (435 us/read; 0.14 M reads/minute).

=== Summary ===

Total read pairs processed:          3,199,459
  Read 1 with adapter:                 366,997 (11.5%)
  Read 2 with adapter:                 354,382 (11.1%)
Pairs that were too short:             461,305 (14.4%)
Pairs written (passing filters):     2,738,154 (85.6%)

Total basepairs processed:   959,837,700 bp
  Read 1:   479,918,850 bp
  Read 2:   479,918,850 bp
Quality-trimmed:             220,288,982 bp (23.0%)
  Read 1:   110,144,491 bp
  Read 2:   110,144,491 bp
Total written (filtered):    703,369,447 bp (73.3%)
  Read 1:   359,514,714 bp
  Read 2:   343,854,733 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 366997 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 14.1%
  C: 36.3%
  G: 28.3%
  T: 21.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	58212	49991.5	0	58212
4	22426	12497.9	0	22426
5	7737	3124.5	0	7737
6	5440	781.1	0	5440
7	4458	195.3	0	4458
8	4008	48.8	0	4008
9	3780	12.2	0	3669 111
10	3722	3.1	1	3388 334
11	3996	0.8	1	3752 244
12	4126	0.2	1	3906 220
13	3993	0.2	1	3799 194
14	3839	0.2	1	3606 233
15	4179	0.2	1	3946 233
16	3994	0.2	1	3701 293
17	4354	0.2	1	4152 202
18	3777	0.2	1	3625 152
19	4451	0.2	1	4243 208
20	4513	0.2	1	4305 208
21	5095	0.2	1	4854 241
22	4695	0.2	1	4501 194
23	2969	0.2	1	2889 80
24	3053	0.2	1	2970 83
25	3803	0.2	1	3659 144
26	3389	0.2	1	3276 113
27	4247	0.2	1	4042 205
28	3180	0.2	1	3085 95
29	4282	0.2	1	4093 189
30	4765	0.2	1	4599 166
31	3345	0.2	1	3235 110
32	3561	0.2	1	3456 105
33	3591	0.2	1	3464 127
34	3470	0.2	1	3369 101
35	3791	0.2	1	3643 148
36	3499	0.2	1	3401 98
37	3640	0.2	1	3539 101
38	3033	0.2	1	2949 84
39	4101	0.2	1	3953 148
40	3687	0.2	1	3597 90
41	3674	0.2	1	3583 91
42	3511	0.2	1	3405 106
43	4085	0.2	1	3967 118
44	2976	0.2	1	2893 83
45	5717	0.2	1	5563 154
46	1546	0.2	1	1479 67
47	2521	0.2	1	2449 72
48	2648	0.2	1	2567 81
49	3266	0.2	1	3173 93
50	3018	0.2	1	2959 59
51	3189	0.2	1	3097 92
52	2720	0.2	1	2661 59
53	3065	0.2	1	2995 70
54	2775	0.2	1	2710 65
55	3145	0.2	1	3074 71
56	2577	0.2	1	2511 66
57	3151	0.2	1	3072 79
58	2734	0.2	1	2655 79
59	3020	0.2	1	2932 88
60	2576	0.2	1	2512 64
61	3185	0.2	1	3114 71
62	2461	0.2	1	2391 70
63	3682	0.2	1	3595 87
64	2972	0.2	1	2908 64
65	2837	0.2	1	2774 63
66	3628	0.2	1	3555 73
67	3084	0.2	1	3002 82
68	2652	0.2	1	2585 67
69	3518	0.2	1	3380 138
70	3793	0.2	1	3686 107
71	5464	0.2	1	5241 223
72	33537	0.2	1	33247 290
73	2390	0.2	1	2295 95
74	345	0.2	1	304 41
75	154	0.2	1	110 44
76	134	0.2	1	106 28
77	126	0.2	1	104 22
78	157	0.2	1	125 32
79	201	0.2	1	153 48
80	173	0.2	1	146 27
81	259	0.2	1	222 37
82	195	0.2	1	168 27
83	222	0.2	1	186 36
84	158	0.2	1	124 34
85	171	0.2	1	142 29
86	135	0.2	1	101 34
87	151	0.2	1	113 38
88	113	0.2	1	83 30
89	110	0.2	1	78 32
90	99	0.2	1	81 18
91	126	0.2	1	93 33
92	83	0.2	1	61 22
93	125	0.2	1	90 35
94	82	0.2	1	51 31
95	115	0.2	1	82 33
96	90	0.2	1	61 29
97	110	0.2	1	74 36
98	76	0.2	1	47 29
99	111	0.2	1	89 22
100	69	0.2	1	42 27
101	76	0.2	1	52 24
102	67	0.2	1	39 28
103	70	0.2	1	52 18
104	67	0.2	1	46 21
105	77	0.2	1	52 25
106	66	0.2	1	44 22
107	80	0.2	1	47 33
108	67	0.2	1	35 32
109	54	0.2	1	29 25
110	46	0.2	1	23 23
111	78	0.2	1	43 35
112	43	0.2	1	16 27
113	61	0.2	1	29 32
114	47	0.2	1	19 28
115	50	0.2	1	27 23
116	48	0.2	1	13 35
117	42	0.2	1	23 19
118	37	0.2	1	13 24
119	55	0.2	1	22 33
120	36	0.2	1	8 28
121	53	0.2	1	10 43
122	37	0.2	1	4 33
123	31	0.2	1	17 14
124	39	0.2	1	9 30
125	33	0.2	1	12 21
126	32	0.2	1	2 30
127	31	0.2	1	17 14
128	28	0.2	1	6 22
129	31	0.2	1	11 20
130	25	0.2	1	5 20
131	38	0.2	1	7 31
132	28	0.2	1	2 26
133	35	0.2	1	9 26
134	22	0.2	1	1 21
135	22	0.2	1	4 18
136	25	0.2	1	2 23
137	35	0.2	1	2 33
138	36	0.2	1	0 36
139	17	0.2	1	0 17
140	24	0.2	1	0 24

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 354382 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 14.0%
  C: 37.2%
  G: 27.7%
  T: 21.0%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	52246	49991.5	0	52246
4	18840	12497.9	0	18840
5	7394	3124.5	0	7394
6	4988	781.1	0	4988
7	4236	195.3	0	4236
8	3801	48.8	0	3801
9	3756	12.2	0	3664 92
10	3544	3.1	1	3263 281
11	3892	0.8	1	3697 195
12	4000	0.2	1	3758 242
13	3773	0.2	1	3621 152
14	4150	0.2	1	3919 231
15	4142	0.2	1	3948 194
16	4194	0.2	1	3961 233
17	4863	0.2	1	4631 232
18	4024	0.2	1	3870 154
19	4860	0.2	1	4674 186
20	4079	0.2	1	3942 137
21	3430	0.2	1	3332 98
22	4137	0.2	1	4015 122
23	3175	0.2	1	3078 97
24	3843	0.2	1	3718 125
25	4079	0.2	1	3958 121
26	3767	0.2	1	3653 114
27	3757	0.2	1	3670 87
28	3601	0.2	1	3497 104
29	3913	0.2	1	3829 84
30	3293	0.2	1	3196 97
31	3771	0.2	1	3657 114
32	3932	0.2	1	3828 104
33	3205	0.2	1	3112 93
34	2983	0.2	1	2887 96
35	3733	0.2	1	3641 92
36	2880	0.2	1	2800 80
37	3507	0.2	1	3404 103
38	4049	0.2	1	3959 90
39	3798	0.2	1	3676 122
40	2186	0.2	1	2143 43
41	2872	0.2	1	2809 63
42	3204	0.2	1	3111 93
43	2911	0.2	1	2823 88
44	3025	0.2	1	2947 78
45	3073	0.2	1	2983 90
46	3400	0.2	1	3299 101
47	3206	0.2	1	3116 90
48	3257	0.2	1	3168 89
49	3120	0.2	1	3025 95
50	3194	0.2	1	3122 72
51	3200	0.2	1	3113 87
52	3248	0.2	1	3159 89
53	3216	0.2	1	3146 70
54	3941	0.2	1	3857 84
55	2552	0.2	1	2491 61
56	3056	0.2	1	3003 53
57	4063	0.2	1	3994 69
58	2037	0.2	1	1977 60
59	2510	0.2	1	2448 62
60	2579	0.2	1	2524 55
61	2735	0.2	1	2668 67
62	2407	0.2	1	2349 58
63	4140	0.2	1	4078 62
64	1925	0.2	1	1889 36
65	2365	0.2	1	2303 62
66	1811	0.2	1	1765 46
67	2687	0.2	1	2629 58
68	2624	0.2	1	2557 67
69	2470	0.2	1	2424 46
70	2077	0.2	1	2037 40
71	2595	0.2	1	2524 71
72	2408	0.2	1	2342 66
73	2886	0.2	1	2780 106
74	2964	0.2	1	2850 114
75	4615	0.2	1	4431 184
76	32736	0.2	1	32481 255
77	2621	0.2	1	2540 81
78	364	0.2	1	334 30
79	218	0.2	1	189 29
80	180	0.2	1	153 27
81	159	0.2	1	126 33
82	126	0.2	1	99 27
83	169	0.2	1	138 31
84	295	0.2	1	253 42
85	278	0.2	1	252 26
86	350	0.2	1	319 31
87	295	0.2	1	266 29
88	235	0.2	1	207 28
89	152	0.2	1	121 31
90	91	0.2	1	70 21
91	89	0.2	1	54 35
92	62	0.2	1	34 28
93	78	0.2	1	50 28
94	65	0.2	1	48 17
95	69	0.2	1	47 22
96	65	0.2	1	38 27
97	59	0.2	1	27 32
98	58	0.2	1	32 26
99	64	0.2	1	43 21
100	64	0.2	1	32 32
101	45	0.2	1	25 20
102	36	0.2	1	22 14
103	55	0.2	1	30 25
104	49	0.2	1	24 25
105	55	0.2	1	28 27
106	39	0.2	1	19 20
107	43	0.2	1	28 15
108	34	0.2	1	12 22
109	35	0.2	1	14 21
110	34	0.2	1	15 19
111	46	0.2	1	18 28
112	39	0.2	1	16 23
113	40	0.2	1	22 18
114	34	0.2	1	12 22
115	50	0.2	1	18 32
116	32	0.2	1	4 28
117	37	0.2	1	17 20
118	23	0.2	1	9 14
119	36	0.2	1	15 21
120	28	0.2	1	10 18
121	28	0.2	1	12 16
122	22	0.2	1	7 15
123	35	0.2	1	11 24
124	28	0.2	1	8 20
125	30	0.2	1	12 18
126	23	0.2	1	5 18
127	35	0.2	1	5 30
128	26	0.2	1	3 23
129	24	0.2	1	7 17
130	21	0.2	1	2 19
131	21	0.2	1	3 18
132	34	0.2	1	3 31
133	20	0.2	1	3 17
134	16	0.2	1	0 16
135	12	0.2	1	1 11
136	19	0.2	1	1 18
137	13	0.2	1	1 12
138	19	0.2	1	0 19
139	10	0.2	1	0 10
140	20	0.2	1	0 20

[M::process] read 495354 sequences (63368400 bp)...
[M::process] 0 single-end sequences; 495354 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 140192, 156, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (366, 841, 7065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 20463)
[M::mem_pestat] mean and std.dev: (3425.65, 3486.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 27162)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (219, 364, 501)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1065)
[M::mem_pestat] mean and std.dev: (371.05, 191.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1347)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 74, 529)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1519)
[M::mem_pestat] mean and std.dev: (172.98, 275.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2014)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 589, 957)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2337)
[M::mem_pestat] mean and std.dev: (502.44, 389.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3027)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 495354 reads in 682.900 CPU sec, 85.971 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0651\tPL:Illumina\tPU:x\tLB:pherring\tSM:0651.PWS17 -t[bam_sort_core] merging from 2 files and 1 in-memory blocks...
 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1485.683 sec; CPU: 7533.684 sec
