==========================================
SLURM_JOB_ID = 5436026
SLURM_NODELIST = c11-76
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1039
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 630064 sequences (80000193 bp)...
[M::process] 0 single-end sequences; 630064 paired-end sequences
[M::process] read 634002 sequences (80000199 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (41, 179060, 166, 36)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (371, 628, 3904)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10970)
[M::mem_pestat] mean and std.dev: (1984.61, 2285.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14503)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 301, 401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 825)
[M::mem_pestat] mean and std.dev: (301.49, 143.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 74, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 984)
[M::mem_pestat] mean and std.dev: (164.07, 216.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1301)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 349, 1233)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3291)
[M::mem_pestat] mean and std.dev: (416.83, 482.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4320)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 630064 reads in 648.248 CPU sec, 91.325 real sec
[M::process] 0 single-end sequences; 634002 paired-end sequences
[M::process] read 627336 sequences (80000182 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 179146, 170, 40)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (293, 479, 1407)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3635)
[M::mem_pestat] mean and std.dev: (736.33, 898.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4749)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (184, 295, 394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 814)
[M::mem_pestat] mean and std.dev: (295.47, 140.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1024)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 64, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1101)
[M::mem_pestat] mean and std.dev: (158.78, 216.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1459)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 548, 2447)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6761)
[M::mem_pestat] mean and std.dev: (1252.15, 1397.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8918)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 634002 reads in 662.096 CPU sec, 88.422 real sec
[M::process] 0 single-end sequences; 627336 paired-end sequences
[M::process] read 631318 sequences (80000035 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (58, 178398, 160, 40)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (302, 835, 4592)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13172)
[M::mem_pestat] mean and std.dev: (2413.59, 2610.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17462)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 304, 406)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 836)
[M::mem_pestat] mean and std.dev: (304.67, 145.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 65, 487)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1411)
[M::mem_pestat] mean and std.dev: (175.75, 265.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1873)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (329, 586, 3796)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10730)
[M::mem_pestat] mean and std.dev: (2096.45, 2883.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14197)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 627336 reads in 631.456 CPU sec, 87.684 real sec
[M::process] 0 single-end sequences; 631318 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (30, 178234, 171, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (228, 401, 3456)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9912)
[M::mem_pestat] mean and std.dev: (1820.33, 2381.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13140)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (186, 297, 396)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 816)
[M::mem_pestat] mean and std.dev: (297.02, 141.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1026)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (20, 52, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1040)
[M::mem_pestat] mean and std.dev: (120.03, 171.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1380)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 442, 1157)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2885)
[M::mem_pestat] mean and std.dev: (413.72, 273.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3749)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 640208 sequences (80000081 bp)...
[M::mem_process_seqs] Processed 631318 reads in 619.924 CPU sec, 83.927 real sec
[M::process] 0 single-end sequences; 640208 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 180571, 154, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 408, 2597)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7389)
[M::mem_pestat] mean and std.dev: (1381.07, 1951.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9785)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (182, 293, 394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 818)
[M::mem_pestat] mean and std.dev: (294.64, 142.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1030)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (23, 42, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 827)
[M::mem_pestat] mean and std.dev: (133.50, 182.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1095)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (292, 698, 2542)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7042)
[M::mem_pestat] mean and std.dev: (1329.46, 1608.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9292)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 640208 reads in 622.532 CPU sec, 80.552 real sec
[M::process] read 641640 sequences (80000067 bp)...
[M::process] 0 single-end sequences; 641640 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 180274, 158, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (285, 411, 1695)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4515)
[M::mem_pestat] mean and std.dev: (830.55, 1065.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5925)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (180, 290, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 807)
[M::mem_pestat] mean and std.dev: (290.71, 138.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1016)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 104, 490)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1402)
[M::mem_pestat] mean and std.dev: (182.66, 276.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1858)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 432, 1043)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2853)
[M::mem_pestat] mean and std.dev: (470.75, 555.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3758)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 647126 sequences (80000227 bp)...
[M::mem_process_seqs] Processed 641640 reads in 627.896 CPU sec, 86.346 real sec
[M::process] 0 single-end sequences; 647126 paired-end sequences
[M::process] read 639916 sequences (80000259 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 181740, 175, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (292, 768, 4139)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11833)
[M::mem_pestat] mean and std.dev: (2317.71, 2731.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15680)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (182, 292, 392)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 812)
[M::mem_pestat] mean and std.dev: (293.27, 140.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1022)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 80, 559)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1625)
[M::mem_pestat] mean and std.dev: (225.55, 354.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2158)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (306, 1123, 4921)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14151)
[M::mem_pestat] mean and std.dev: (2488.53, 2689.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18766)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 647126 reads in 626.352 CPU sec, 84.020 real sec
[M::process] 0 single-end sequences; 639916 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 180684, 173, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 486, 1777)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4841)
[M::mem_pestat] mean and std.dev: (956.90, 1160.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6373)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (182, 292, 391)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 809)
[M::mem_pestat] mean and std.dev: (292.23, 139.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1018)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 73, 582)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1680)
[M::mem_pestat] mean and std.dev: (218.88, 320.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2229)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 599, 3186)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9050)
[M::mem_pestat] mean and std.dev: (1683.43, 2224.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11982)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 639916 reads in 613.884 CPU sec, 81.749 real sec
Finished in 1606.44 s (472 us/read; 0.13 M reads/minute).

=== Summary ===

Total read pairs processed:          3,400,781
  Read 1 with adapter:                 448,053 (13.2%)
  Read 2 with adapter:                 420,474 (12.4%)
Pairs that were too short:             632,738 (18.6%)
Pairs written (passing filters):     2,768,043 (81.4%)

Total basepairs processed: 1,020,234,300 bp
  Read 1:   510,117,150 bp
  Read 2:   510,117,150 bp
Quality-trimmed:             297,661,112 bp (29.2%)
  Read 1:   148,830,556 bp
  Read 2:   148,830,556 bp
Total written (filtered):    695,788,827 bp (68.2%)
  Read 1:   358,244,725 bp
  Read 2:   337,544,102 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 448053 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.9%
  C: 36.8%
  G: 28.1%
  T: 21.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	61661	53137.2	0	61661
4	24150	13284.3	0	24150
5	8940	3321.1	0	8940
6	6533	830.3	0	6533
7	5592	207.6	0	5592
8	5041	51.9	0	5041
9	4925	13.0	0	4788 137
10	4574	3.2	1	4201 373
11	5024	0.8	1	4728 296
12	5235	0.2	1	4960 275
13	4978	0.2	1	4725 253
14	5001	0.2	1	4724 277
15	5571	0.2	1	5233 338
16	5300	0.2	1	4941 359
17	5675	0.2	1	5405 270
18	5044	0.2	1	4789 255
19	5758	0.2	1	5488 270
20	5708	0.2	1	5373 335
21	6604	0.2	1	6282 322
22	5884	0.2	1	5631 253
23	3904	0.2	1	3775 129
24	3737	0.2	1	3600 137
25	4869	0.2	1	4663 206
26	4251	0.2	1	4082 169
27	5357	0.2	1	5085 272
28	4212	0.2	1	4013 199
29	5676	0.2	1	5379 297
30	5912	0.2	1	5687 225
31	4479	0.2	1	4294 185
32	4645	0.2	1	4466 179
33	4781	0.2	1	4585 196
34	4509	0.2	1	4341 168
35	4993	0.2	1	4821 172
36	4784	0.2	1	4624 160
37	4778	0.2	1	4632 146
38	4233	0.2	1	4105 128
39	5754	0.2	1	5555 199
40	4520	0.2	1	4390 130
41	4851	0.2	1	4701 150
42	4771	0.2	1	4644 127
43	5952	0.2	1	5775 177
44	3620	0.2	1	3506 114
45	7823	0.2	1	7655 168
46	1870	0.2	1	1812 58
47	2937	0.2	1	2856 81
48	3164	0.2	1	3097 67
49	4034	0.2	1	3926 108
50	3840	0.2	1	3730 110
51	4022	0.2	1	3914 108
52	3481	0.2	1	3401 80
53	3801	0.2	1	3685 116
54	3665	0.2	1	3587 78
55	4081	0.2	1	4008 73
56	3016	0.2	1	2942 74
57	4095	0.2	1	4006 89
58	3650	0.2	1	3554 96
59	3755	0.2	1	3668 87
60	3523	0.2	1	3447 76
61	3975	0.2	1	3891 84
62	3260	0.2	1	3190 70
63	4829	0.2	1	4709 120
64	3866	0.2	1	3779 87
65	3568	0.2	1	3484 84
66	4904	0.2	1	4823 81
67	3866	0.2	1	3779 87
68	3465	0.2	1	3379 86
69	4858	0.2	1	4724 134
70	5260	0.2	1	5156 104
71	6911	0.2	1	6727 184
72	38624	0.2	1	38366 258
73	2434	0.2	1	2351 83
74	340	0.2	1	305 35
75	198	0.2	1	153 45
76	140	0.2	1	107 33
77	158	0.2	1	120 38
78	172	0.2	1	135 37
79	190	0.2	1	152 38
80	167	0.2	1	137 30
81	222	0.2	1	189 33
82	192	0.2	1	171 21
83	192	0.2	1	161 31
84	150	0.2	1	127 23
85	163	0.2	1	127 36
86	118	0.2	1	90 28
87	146	0.2	1	114 32
88	123	0.2	1	89 34
89	155	0.2	1	122 33
90	99	0.2	1	72 27
91	144	0.2	1	109 35
92	129	0.2	1	91 38
93	146	0.2	1	103 43
94	103	0.2	1	66 37
95	114	0.2	1	81 33
96	99	0.2	1	68 31
97	111	0.2	1	81 30
98	76	0.2	1	54 22
99	103	0.2	1	71 32
100	75	0.2	1	48 27
101	93	0.2	1	56 37
102	70	0.2	1	40 30
103	92	0.2	1	51 41
104	58	0.2	1	27 31
105	89	0.2	1	50 39
106	54	0.2	1	27 27
107	85	0.2	1	49 36
108	43	0.2	1	19 24
109	55	0.2	1	40 15
110	37	0.2	1	8 29
111	63	0.2	1	34 29
112	42	0.2	1	13 29
113	63	0.2	1	30 33
114	33	0.2	1	16 17
115	45	0.2	1	18 27
116	45	0.2	1	17 28
117	43	0.2	1	16 27
118	35	0.2	1	9 26
119	46	0.2	1	22 24
120	26	0.2	1	8 18
121	39	0.2	1	9 30
122	28	0.2	1	2 26
123	31	0.2	1	9 22
124	34	0.2	1	11 23
125	28	0.2	1	7 21
126	38	0.2	1	6 32
127	31	0.2	1	8 23
128	27	0.2	1	2 25
129	26	0.2	1	6 20
130	35	0.2	1	0 35
131	22	0.2	1	5 17
132	23	0.2	1	0 23
133	22	0.2	1	4 18
134	18	0.2	1	2 16
135	23	0.2	1	2 21
136	29	0.2	1	1 28
137	22	0.2	1	0 22
138	27	0.2	1	0 27
139	23	0.2	1	0 23
140	22	0.2	1	0 22

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 420474 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.9%
  C: 37.4%
  G: 27.5%
  T: 21.0%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	54149	53137.2	0	54149
4	19663	13284.3	0	19663
5	8096	3321.1	0	8096
6	5686	830.3	0	5686
7	5023	207.6	0	5023
8	4354	51.9	0	4354
9	4270	13.0	0	4181 89
10	4088	3.2	1	3702 386
11	4555	0.8	1	4202 353
12	4989	0.2	1	4690 299
13	4522	0.2	1	4252 270
14	4843	0.2	1	4491 352
15	5406	0.2	1	5069 337
16	5659	0.2	1	5228 431
17	5519	0.2	1	5154 365
18	5177	0.2	1	4895 282
19	6353	0.2	1	5994 359
20	4804	0.2	1	4580 224
21	4163	0.2	1	3975 188
22	5093	0.2	1	4852 241
23	3598	0.2	1	3421 177
24	4690	0.2	1	4463 227
25	4741	0.2	1	4505 236
26	4436	0.2	1	4257 179
27	4541	0.2	1	4373 168
28	4446	0.2	1	4261 185
29	4197	0.2	1	4034 163
30	3690	0.2	1	3535 155
31	4854	0.2	1	4661 193
32	4456	0.2	1	4299 157
33	4166	0.2	1	3952 214
34	4078	0.2	1	3934 144
35	4220	0.2	1	4032 188
36	5392	0.2	1	5161 231
37	3337	0.2	1	3231 106
38	3939	0.2	1	3831 108
39	4607	0.2	1	4462 145
40	3534	0.2	1	3445 89
41	3546	0.2	1	3457 89
42	3638	0.2	1	3512 126
43	4179	0.2	1	3983 196
44	3718	0.2	1	3584 134
45	4629	0.2	1	4416 213
46	5095	0.2	1	4918 177
47	4159	0.2	1	4057 102
48	3867	0.2	1	3761 106
49	3953	0.2	1	3834 119
50	4191	0.2	1	4064 127
51	4036	0.2	1	3905 131
52	4877	0.2	1	4725 152
53	4320	0.2	1	4203 117
54	4746	0.2	1	4605 141
55	3367	0.2	1	3271 96
56	3997	0.2	1	3889 108
57	4623	0.2	1	4518 105
58	2655	0.2	1	2594 61
59	3186	0.2	1	3125 61
60	3424	0.2	1	3358 66
61	3444	0.2	1	3366 78
62	3160	0.2	1	3103 57
63	4885	0.2	1	4791 94
64	2699	0.2	1	2635 64
65	3028	0.2	1	2958 70
66	2286	0.2	1	2232 54
67	3252	0.2	1	3175 77
68	3094	0.2	1	3020 74
69	3312	0.2	1	3219 93
70	2724	0.2	1	2664 60
71	3266	0.2	1	3164 102
72	3214	0.2	1	3144 70
73	3782	0.2	1	3629 153
74	4102	0.2	1	3991 111
75	5466	0.2	1	5290 176
76	38892	0.2	1	38524 368
77	1994	0.2	1	1904 90
78	302	0.2	1	270 32
79	173	0.2	1	141 32
80	151	0.2	1	133 18
81	175	0.2	1	150 25
82	136	0.2	1	111 25
83	187	0.2	1	157 30
84	294	0.2	1	272 22
85	302	0.2	1	273 29
86	335	0.2	1	304 31
87	246	0.2	1	227 19
88	187	0.2	1	176 11
89	130	0.2	1	105 25
90	71	0.2	1	52 19
91	74	0.2	1	48 26
92	63	0.2	1	41 22
93	73	0.2	1	48 25
94	59	0.2	1	38 21
95	68	0.2	1	41 27
96	49	0.2	1	24 25
97	51	0.2	1	28 23
98	41	0.2	1	24 17
99	58	0.2	1	30 28
100	55	0.2	1	33 22
101	49	0.2	1	32 17
102	53	0.2	1	26 27
103	41	0.2	1	20 21
104	31	0.2	1	13 18
105	53	0.2	1	24 29
106	31	0.2	1	12 19
107	34	0.2	1	19 15
108	26	0.2	1	9 17
109	31	0.2	1	11 20
110	27	0.2	1	7 20
111	32	0.2	1	11 21
112	36	0.2	1	11 25
113	34	0.2	1	9 25
114	28	0.2	1	10 18
115	27	0.2	1	8 19
116	26	0.2	1	11 15
117	27	0.2	1	9 18
118	14	0.2	1	3 11
119	32	0.2	1	9 23
120	23	0.2	1	7 16
121	21	0.2	1	2 19
122	25	0.2	1	4 21
123	30	0.2	1	10 20
124	15	0.2	1	3 12
125	20	0.2	1	4 16
126	24	0.2	1	2 22
127	20	0.2	1	3 17
128	12	0.2	1	0 12
129	27	0.2	1	5 22
130	32	0.2	1	0 32
131	21	0.2	1	4 17
132	27	0.2	1	0 27
133	15	0.2	1	3 12
134	16	0.2	1	1 15
135	18	0.2	1	1 17
136	16	0.2	1	0 16
137	19	0.2	1	1 18
138	17	0.2	1	1 16
139	8	0.2	1	0 8
140	16	0.2	1	0 16

[M::process] read 444476 sequences (55787584 bp)...
[M::process] 0 single-end sequences; 444476 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (21, 125414, 135, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (258, 425, 1887)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5145)
[M::mem_pestat] mean and std.dev: (832.37, 1118.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6774)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (184, 296, 396)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 820)
[M::mem_pestat] mean and std.dev: (296.61, 142.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1032)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 78, 520)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1502)
[M::mem_pestat] mean and std.dev: (210.69, 307.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1993)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (346, 666, 4582)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13054)
[M::mem_pestat] mean and std.dev: (2000.81, 2532.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17290)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 444476 reads in 429.664 CPU sec, 56.033 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1039\tPL:Illumina\tPU:x\tLB:pherring\tSM:1039.PWS17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1673.140 sec; CPU: 5493.536 sec
[bam_sort_core] merging from 2 files and 1 in-memory blocks...
