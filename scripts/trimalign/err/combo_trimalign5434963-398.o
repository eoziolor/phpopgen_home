==========================================
SLURM_JOB_ID = 5435385
SLURM_NODELIST = c10-66
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
398
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 629220 sequences (80000245 bp)...
[M::process] 0 single-end sequences; 629220 paired-end sequences
[M::process] read 625114 sequences (80000114 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (64, 177846, 200, 54)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (220, 358, 849)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2107)
[M::mem_pestat] mean and std.dev: (382.19, 279.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2736)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 323, 431)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 891)
[M::mem_pestat] mean and std.dev: (322.35, 154.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1121)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 72, 728)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2120)
[M::mem_pestat] mean and std.dev: (242.70, 398.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (182, 362, 2292)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6512)
[M::mem_pestat] mean and std.dev: (733.42, 1335.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8622)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 629220 reads in 651.076 CPU sec, 122.769 real sec
[M::process] 0 single-end sequences; 625114 paired-end sequences
[M::process] read 627248 sequences (80000037 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (67, 176416, 189, 46)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 291, 993)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2593)
[M::mem_pestat] mean and std.dev: (332.98, 279.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3393)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 329, 436)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 898)
[M::mem_pestat] mean and std.dev: (327.28, 155.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1129)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (37, 106, 430)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1216)
[M::mem_pestat] mean and std.dev: (172.38, 213.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1609)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 302, 434)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 924)
[M::mem_pestat] mean and std.dev: (306.15, 169.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1169)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 625114 reads in 599.908 CPU sec, 123.891 real sec
[M::process] 0 single-end sequences; 627248 paired-end sequences
[M::process] read 625896 sequences (80000272 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (65, 176515, 178, 75)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 333, 611)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1431)
[M::mem_pestat] mean and std.dev: (333.51, 240.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1841)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 327, 435)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 897)
[M::mem_pestat] mean and std.dev: (325.57, 155.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1128)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 169, 568)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1622)
[M::mem_pestat] mean and std.dev: (240.34, 313.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2149)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 362, 1208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3222)
[M::mem_pestat] mean and std.dev: (526.22, 663.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4229)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 627248 reads in 622.340 CPU sec, 109.883 real sec
[M::process] 0 single-end sequences; 625896 paired-end sequences
[M::process] read 628016 sequences (80000180 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (63, 176228, 167, 59)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (257, 396, 2427)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6767)
[M::mem_pestat] mean and std.dev: (1263.54, 1596.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8937)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 325, 433)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 893)
[M::mem_pestat] mean and std.dev: (324.05, 154.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1123)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 143, 755)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2205)
[M::mem_pestat] mean and std.dev: (253.16, 365.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2930)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 372, 1271)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3337)
[M::mem_pestat] mean and std.dev: (463.73, 503.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4370)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 625896 reads in 630.060 CPU sec, 108.587 real sec
[M::process] 0 single-end sequences; 628016 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (54, 177285, 199, 68)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (212, 406, 567)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1277)
[M::mem_pestat] mean and std.dev: (324.20, 184.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1632)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 328, 436)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 902)
[M::mem_pestat] mean and std.dev: (325.92, 156.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1135)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 186, 628)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1812)
[M::mem_pestat] mean and std.dev: (244.89, 329.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2404)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 343, 802)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1994)
[M::mem_pestat] mean and std.dev: (351.76, 268.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2590)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 631916 sequences (80000230 bp)...
[M::mem_process_seqs] Processed 628016 reads in 632.120 CPU sec, 126.473 real sec
[M::process] 0 single-end sequences; 631916 paired-end sequences
[M::process] read 629010 sequences (80000097 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (64, 177596, 210, 69)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 316, 649)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1553)
[M::mem_pestat] mean and std.dev: (323.39, 227.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2005)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 326, 436)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 906)
[M::mem_pestat] mean and std.dev: (325.13, 156.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1141)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 99, 436)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1242)
[M::mem_pestat] mean and std.dev: (200.56, 263.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1645)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (193, 259, 493)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1093)
[M::mem_pestat] mean and std.dev: (271.30, 176.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1393)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 631916 reads in 625.552 CPU sec, 111.763 real sec
[M::process] 0 single-end sequences; 629010 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (46, 177189, 164, 56)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 1458)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3798)
[M::mem_pestat] mean and std.dev: (611.00, 701.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4968)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 332, 441)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 911)
[M::mem_pestat] mean and std.dev: (330.10, 158.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1146)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 113, 694)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2010)
[M::mem_pestat] mean and std.dev: (209.07, 313.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2668)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 363, 913)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2337)
[M::mem_pestat] mean and std.dev: (319.52, 271.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3049)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 633342 sequences (80000215 bp)...
[M::mem_process_seqs] Processed 629010 reads in 638.476 CPU sec, 95.387 real sec
[M::process] 0 single-end sequences; 633342 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (72, 177717, 170, 64)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 319, 630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1488)
[M::mem_pestat] mean and std.dev: (317.63, 218.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1917)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 327, 437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 907)
[M::mem_pestat] mean and std.dev: (325.85, 156.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1142)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 93, 551)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1601)
[M::mem_pestat] mean and std.dev: (186.94, 270.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2126)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 380, 2580)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7232)
[M::mem_pestat] mean and std.dev: (1381.58, 1974.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9558)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 628340 sequences (80000112 bp)...
[M::mem_process_seqs] Processed 633342 reads in 632.608 CPU sec, 184.421 real sec
[M::process] 0 single-end sequences; 628340 paired-end sequences
Finished in 1237.81 s (350 us/read; 0.17 M reads/minute).

=== Summary ===

Total read pairs processed:          3,532,742
  Read 1 with adapter:                 435,221 (12.3%)
  Read 2 with adapter:                 425,218 (12.0%)
Pairs that were too short:             511,389 (14.5%)
Pairs written (passing filters):     3,021,353 (85.5%)

Total basepairs processed: 1,059,822,600 bp
  Read 1:   529,911,300 bp
  Read 2:   529,911,300 bp
Quality-trimmed:             252,998,842 bp (23.9%)
  Read 1:   126,499,421 bp
  Read 2:   126,499,421 bp
Total written (filtered):    769,022,322 bp (72.6%)
  Read 1:   395,382,183 bp
  Read 2:   373,640,139 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 435221 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.2%
  C: 37.0%
  G: 27.7%
  T: 22.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	65939	55199.1	0	65939
4	25366	13799.8	0	25366
5	8567	3449.9	0	8567
6	6351	862.5	0	6351
7	5120	215.6	0	5120
8	4775	53.9	0	4775
9	4468	13.5	0	4338 130
10	4385	3.4	1	4059 326
11	4649	0.8	1	4404 245
12	5090	0.2	1	4845 245
13	4644	0.2	1	4447 197
14	4860	0.2	1	4638 222
15	4974	0.2	1	4714 260
16	4919	0.2	1	4594 325
17	5426	0.2	1	5199 227
18	4580	0.2	1	4386 194
19	5457	0.2	1	5233 224
20	5311	0.2	1	5084 227
21	5743	0.2	1	5501 242
22	5471	0.2	1	5280 191
23	3633	0.2	1	3533 100
24	3793	0.2	1	3701 92
25	4406	0.2	1	4273 133
26	3909	0.2	1	3813 96
27	4412	0.2	1	4233 179
28	3921	0.2	1	3813 108
29	4784	0.2	1	4590 194
30	5243	0.2	1	5069 174
31	4031	0.2	1	3920 111
32	4357	0.2	1	4195 162
33	4493	0.2	1	4352 141
34	4043	0.2	1	3913 130
35	4291	0.2	1	4146 145
36	4496	0.2	1	4369 127
37	4450	0.2	1	4333 117
38	3846	0.2	1	3727 119
39	4791	0.2	1	4648 143
40	4183	0.2	1	4062 121
41	4197	0.2	1	4075 122
42	4586	0.2	1	4478 108
43	4762	0.2	1	4648 114
44	3526	0.2	1	3417 109
45	5999	0.2	1	5849 150
46	2251	0.2	1	2192 59
47	2814	0.2	1	2728 86
48	3330	0.2	1	3228 102
49	3887	0.2	1	3743 144
50	3604	0.2	1	3501 103
51	3873	0.2	1	3772 101
52	3450	0.2	1	3364 86
53	3796	0.2	1	3656 140
54	3311	0.2	1	3201 110
55	3951	0.2	1	3823 128
56	3174	0.2	1	3071 103
57	3767	0.2	1	3656 111
58	3548	0.2	1	3446 102
59	3743	0.2	1	3628 115
60	3169	0.2	1	3074 95
61	3699	0.2	1	3598 101
62	3229	0.2	1	3137 92
63	4262	0.2	1	4144 118
64	3729	0.2	1	3626 103
65	3261	0.2	1	3184 77
66	4735	0.2	1	4654 81
67	3586	0.2	1	3497 89
68	3086	0.2	1	3027 59
69	4292	0.2	1	4147 145
70	4448	0.2	1	4336 112
71	5933	0.2	1	5722 211
72	45958	0.2	1	45521 437
73	1035	0.2	1	968 67
74	152	0.2	1	114 38
75	99	0.2	1	79 20
76	96	0.2	1	58 38
77	186	0.2	1	152 34
78	145	0.2	1	112 33
79	207	0.2	1	170 37
80	238	0.2	1	204 34
81	297	0.2	1	252 45
82	242	0.2	1	213 29
83	255	0.2	1	206 49
84	184	0.2	1	165 19
85	230	0.2	1	182 48
86	166	0.2	1	141 25
87	145	0.2	1	115 30
88	147	0.2	1	112 35
89	157	0.2	1	121 36
90	131	0.2	1	103 28
91	146	0.2	1	113 33
92	114	0.2	1	90 24
93	140	0.2	1	98 42
94	105	0.2	1	77 28
95	130	0.2	1	91 39
96	130	0.2	1	91 39
97	109	0.2	1	76 33
98	87	0.2	1	63 24
99	99	0.2	1	66 33
100	95	0.2	1	60 35
101	116	0.2	1	79 37
102	79	0.2	1	52 27
103	92	0.2	1	69 23
104	65	0.2	1	46 19
105	90	0.2	1	58 32
106	48	0.2	1	31 17
107	74	0.2	1	48 26
108	64	0.2	1	32 32
109	74	0.2	1	46 28
110	55	0.2	1	21 34
111	56	0.2	1	30 26
112	46	0.2	1	22 24
113	55	0.2	1	28 27
114	49	0.2	1	22 27
115	64	0.2	1	28 36
116	45	0.2	1	17 28
117	37	0.2	1	16 21
118	31	0.2	1	9 22
119	40	0.2	1	13 27
120	42	0.2	1	6 36
121	55	0.2	1	10 45
122	33	0.2	1	7 26
123	33	0.2	1	11 22
124	33	0.2	1	5 28
125	35	0.2	1	12 23
126	37	0.2	1	4 33
127	22	0.2	1	5 17
128	25	0.2	1	4 21
129	34	0.2	1	7 27
130	35	0.2	1	2 33
131	24	0.2	1	2 22
132	34	0.2	1	3 31
133	31	0.2	1	2 29
134	34	0.2	1	1 33
135	18	0.2	1	2 16
136	26	0.2	1	0 26
137	30	0.2	1	1 29
138	26	0.2	1	1 25
139	18	0.2	1	0 18
140	16	0.2	1	1 15

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 425218 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.0%
  C: 37.4%
  G: 27.3%
  T: 22.1%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	65063	55199.1	0	65063
4	22602	13799.8	0	22602
5	8490	3449.9	0	8490
6	5788	862.5	0	5788
7	4838	215.6	0	4838
8	4420	53.9	0	4420
9	4325	13.5	0	4230 95
10	4133	3.4	1	3797 336
11	4588	0.8	1	4341 247
12	4816	0.2	1	4545 271
13	4409	0.2	1	4183 226
14	4644	0.2	1	4377 267
15	5208	0.2	1	4913 295
16	4982	0.2	1	4713 269
17	5133	0.2	1	4906 227
18	4680	0.2	1	4499 181
19	5524	0.2	1	5234 290
20	5090	0.2	1	4916 174
21	4010	0.2	1	3862 148
22	4441	0.2	1	4297 144
23	4090	0.2	1	3927 163
24	4744	0.2	1	4572 172
25	4750	0.2	1	4597 153
26	4873	0.2	1	4723 150
27	4682	0.2	1	4569 113
28	4242	0.2	1	4114 128
29	4918	0.2	1	4762 156
30	3518	0.2	1	3431 87
31	3657	0.2	1	3563 94
32	4642	0.2	1	4517 125
33	4062	0.2	1	3935 127
34	3249	0.2	1	3128 121
35	3790	0.2	1	3663 127
36	3103	0.2	1	3006 97
37	3743	0.2	1	3633 110
38	3818	0.2	1	3709 109
39	3430	0.2	1	3324 106
40	4449	0.2	1	4313 136
41	2982	0.2	1	2855 127
42	3746	0.2	1	3612 134
43	3713	0.2	1	3582 131
44	3986	0.2	1	3848 138
45	4348	0.2	1	4170 178
46	4201	0.2	1	4073 128
47	4175	0.2	1	4048 127
48	3565	0.2	1	3467 98
49	3827	0.2	1	3694 133
50	3820	0.2	1	3697 123
51	3952	0.2	1	3807 145
52	4050	0.2	1	3882 168
53	4074	0.2	1	3959 115
54	5165	0.2	1	5011 154
55	2946	0.2	1	2856 90
56	4159	0.2	1	4030 129
57	5110	0.2	1	4983 127
58	3086	0.2	1	3021 65
59	2925	0.2	1	2870 55
60	3793	0.2	1	3712 81
61	3174	0.2	1	3096 78
62	2774	0.2	1	2709 65
63	5277	0.2	1	5190 87
64	1775	0.2	1	1717 58
65	2519	0.2	1	2459 60
66	2225	0.2	1	2165 60
67	3094	0.2	1	3005 89
68	3017	0.2	1	2954 63
69	3179	0.2	1	3100 79
70	2508	0.2	1	2452 56
71	3072	0.2	1	2983 89
72	2900	0.2	1	2826 74
73	3411	0.2	1	3283 128
74	3550	0.2	1	3437 113
75	4784	0.2	1	4565 219
76	43420	0.2	1	42755 665
77	1007	0.2	1	906 101
78	183	0.2	1	155 28
79	204	0.2	1	174 30
80	165	0.2	1	140 25
81	216	0.2	1	177 39
82	181	0.2	1	150 31
83	223	0.2	1	193 30
84	332	0.2	1	304 28
85	425	0.2	1	386 39
86	424	0.2	1	397 27
87	329	0.2	1	307 22
88	281	0.2	1	256 25
89	168	0.2	1	144 24
90	88	0.2	1	72 16
91	74	0.2	1	53 21
92	58	0.2	1	37 21
93	84	0.2	1	56 28
94	52	0.2	1	33 19
95	69	0.2	1	45 24
96	61	0.2	1	36 25
97	50	0.2	1	30 20
98	33	0.2	1	18 15
99	57	0.2	1	33 24
100	46	0.2	1	19 27
101	54	0.2	1	28 26
102	42	0.2	1	20 22
103	38	0.2	1	22 16
104	40	0.2	1	15 25
105	58	0.2	1	27 31
106	35	0.2	1	15 20
107	34	0.2	1	10 24
108	36	0.2	1	9 27
109	46	0.2	1	17 29
110	36	0.2	1	11 25
111	31	0.2	1	9 22
112	33	0.2	1	9 24
113	34	0.2	1	14 20
114	38	0.2	1	11 27
115	34	0.2	1	14 20
116	24	0.2	1	4 20
117	30	0.2	1	13 17
118	30	0.2	1	7 23
119	31	0.2	1	10 21
120	24	0.2	1	4 20
121	34	0.2	1	8 26
122	33	0.2	1	5 28
123	39	0.2	1	9 30
124	27	0.2	1	7 20
125	28	0.2	1	2 26
126	19	0.2	1	4 15
127	17	0.2	1	2 15
128	16	0.2	1	0 16
129	20	0.2	1	1 19
130	18	0.2	1	1 17
131	21	0.2	1	1 20
132	24	0.2	1	2 22
133	25	0.2	1	0 25
134	15	0.2	1	0 15
135	13	0.2	1	0 13
136	23	0.2	1	1 22
137	18	0.2	1	0 18
138	17	0.2	1	0 17
139	9	0.2	1	0 9
140	18	0.2	1	0 18

[M::process] read 384604 sequences (49020820 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (74, 176588, 172, 64)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 330, 563)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1327)
[M::mem_pestat] mean and std.dev: (327.06, 249.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1709)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 327, 437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 907)
[M::mem_pestat] mean and std.dev: (326.18, 157.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1142)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 69, 401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1155)
[M::mem_pestat] mean and std.dev: (169.47, 246.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1532)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (187, 323, 719)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1783)
[M::mem_pestat] mean and std.dev: (330.09, 229.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2315)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 628340 reads in 578.720 CPU sec, 104.904 real sec
[M::process] 0 single-end sequences; 384604 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 108384, 114, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (242, 370, 784)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1868)
[M::mem_pestat] mean and std.dev: (406.68, 300.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2410)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 332, 441)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 913)
[M::mem_pestat] mean and std.dev: (330.10, 159.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1149)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 90, 713)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2083)
[M::mem_pestat] mean and std.dev: (250.08, 426.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2768)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (220, 362, 751)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1813)
[M::mem_pestat] mean and std.dev: (385.53, 299.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2344)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 384604 reads in 341.576 CPU sec, 57.985 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0398\tPL:Illumina\tPU:x\tLB:pherring\tSM:0398.SS96 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1378.123 sec; CPU: 5962.592 sec
[bam_sort_core] merging from 2 files and 1 in-memory blocks...
