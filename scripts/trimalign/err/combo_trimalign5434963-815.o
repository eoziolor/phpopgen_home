==========================================
SLURM_JOB_ID = 5435802
SLURM_NODELIST = c11-75
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
815
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 659620 sequences (80000154 bp)...
[M::process] 0 single-end sequences; 659620 paired-end sequences
[M::process] read 664470 sequences (80000085 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 173226, 162, 37)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (114, 184, 644)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1704)
[M::mem_pestat] mean and std.dev: (282.08, 268.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2234)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 226, 337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 745)
[M::mem_pestat] mean and std.dev: (244.61, 138.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 949)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 75, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 988)
[M::mem_pestat] mean and std.dev: (157.36, 208.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1308)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (167, 513, 5228)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15350)
[M::mem_pestat] mean and std.dev: (2428.73, 3005.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20411)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 659620 reads in 812.168 CPU sec, 112.971 real sec
[M::process] 0 single-end sequences; 664470 paired-end sequences
[M::process] read 663508 sequences (80000220 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (26, 174554, 176, 29)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (160, 611, 3211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9313)
[M::mem_pestat] mean and std.dev: (1758.38, 2311.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12364)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 218, 327)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 725)
[M::mem_pestat] mean and std.dev: (237.19, 134.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 924)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 78, 422)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1212)
[M::mem_pestat] mean and std.dev: (205.50, 275.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1607)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (166, 290, 901)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2371)
[M::mem_pestat] mean and std.dev: (423.12, 405.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3106)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 664470 reads in 815.872 CPU sec, 109.331 real sec
[M::process] 0 single-end sequences; 663508 paired-end sequences
[M::process] read 659294 sequences (80000106 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 174138, 163, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (213, 390, 1100)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2874)
[M::mem_pestat] mean and std.dev: (481.63, 489.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3761)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 221, 330)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 732)
[M::mem_pestat] mean and std.dev: (239.32, 136.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 933)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 62, 309)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 871)
[M::mem_pestat] mean and std.dev: (142.42, 195.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1152)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (179, 485, 890)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2312)
[M::mem_pestat] mean and std.dev: (425.41, 341.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3023)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 663508 reads in 813.100 CPU sec, 107.198 real sec
[M::process] 0 single-end sequences; 659294 paired-end sequences
[M::process] read 664278 sequences (80000048 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 173362, 154, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (150, 280, 801)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2103)
[M::mem_pestat] mean and std.dev: (347.07, 252.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2754)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 225, 336)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 744)
[M::mem_pestat] mean and std.dev: (244.18, 138.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 948)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 53, 276)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 778)
[M::mem_pestat] mean and std.dev: (124.64, 165.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (224, 526, 3489)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10019)
[M::mem_pestat] mean and std.dev: (1888.48, 2411.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13284)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 659294 reads in 805.612 CPU sec, 106.230 real sec
[M::process] 0 single-end sequences; 664278 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (24, 174484, 166, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 402, 944)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2466)
[M::mem_pestat] mean and std.dev: (376.95, 306.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3227)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 217, 325)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 719)
[M::mem_pestat] mean and std.dev: (236.05, 133.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 57, 368)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1048)
[M::mem_pestat] mean and std.dev: (145.32, 196.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1388)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (222, 408, 1925)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5331)
[M::mem_pestat] mean and std.dev: (1065.38, 1520.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7148)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 662480 sequences (80000213 bp)...
[M::mem_process_seqs] Processed 664278 reads in 823.900 CPU sec, 138.740 real sec
[M::process] 0 single-end sequences; 662480 paired-end sequences
[M::process] read 669646 sequences (80000218 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 173959, 151, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (200, 307, 2085)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5855)
[M::mem_pestat] mean and std.dev: (860.38, 1169.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7740)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 220, 330)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 734)
[M::mem_pestat] mean and std.dev: (238.98, 136.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 936)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 63, 337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 957)
[M::mem_pestat] mean and std.dev: (125.70, 168.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1267)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 430, 880)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (447.82, 301.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2842)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662480 reads in 832.816 CPU sec, 109.802 real sec
[M::process] 0 single-end sequences; 669646 paired-end sequences
[M::process] read 665590 sequences (80000098 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 175562, 159, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (234, 384, 3296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9420)
[M::mem_pestat] mean and std.dev: (2050.79, 2847.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13439)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 220, 327)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 721)
[M::mem_pestat] mean and std.dev: (237.91, 133.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 918)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 54, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (101.22, 133.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (125, 257, 3127)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9131)
[M::mem_pestat] mean and std.dev: (1904.18, 2978.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13818)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 669646 reads in 887.024 CPU sec, 117.411 real sec
[M::process] 0 single-end sequences; 665590 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 174162, 156, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (202, 363, 3292)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9472)
[M::mem_pestat] mean and std.dev: (1534.92, 2372.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12562)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 219, 326)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 720)
[M::mem_pestat] mean and std.dev: (237.27, 134.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 57, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1003)
[M::mem_pestat] mean and std.dev: (150.04, 219.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1329)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 304, 753)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1951)
[M::mem_pestat] mean and std.dev: (342.18, 230.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2550)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 659654 sequences (80000123 bp)...
[M::mem_process_seqs] Processed 665590 reads in 901.508 CPU sec, 121.271 real sec
[M::process] 0 single-end sequences; 659654 paired-end sequences
[M::process] read 671578 sequences (80000196 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (20, 173485, 164, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (285, 598, 3494)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9912)
[M::mem_pestat] mean and std.dev: (1818.70, 2067.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13121)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 224, 335)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 743)
[M::mem_pestat] mean and std.dev: (243.32, 139.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 947)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 48, 271)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 759)
[M::mem_pestat] mean and std.dev: (112.95, 163.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1003)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (181, 329, 1040)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2758)
[M::mem_pestat] mean and std.dev: (341.38, 305.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3617)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 659654 reads in 872.220 CPU sec, 116.005 real sec
[M::process] 0 single-end sequences; 671578 paired-end sequences
[M::process] read 665550 sequences (80000030 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 175132, 190, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (167, 263, 1834)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5168)
[M::mem_pestat] mean and std.dev: (817.87, 1264.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6835)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 219, 325)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 715)
[M::mem_pestat] mean and std.dev: (236.30, 132.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 910)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 50, 256)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 724)
[M::mem_pestat] mean and std.dev: (108.46, 155.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 958)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 342, 1135)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3113)
[M::mem_pestat] mean and std.dev: (394.29, 576.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4102)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 671578 reads in 879.120 CPU sec, 116.028 real sec
[M::process] 0 single-end sequences; 665550 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 174288, 170, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (189, 344, 1638)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4536)
[M::mem_pestat] mean and std.dev: (831.86, 1145.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5985)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 219, 326)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 720)
[M::mem_pestat] mean and std.dev: (237.08, 134.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 43, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 577)
[M::mem_pestat] mean and std.dev: (75.76, 104.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 761)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 382, 2866)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8192)
[M::mem_pestat] mean and std.dev: (1314.71, 1999.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10855)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
Finished in 1739.27 s (384 us/read; 0.16 M reads/minute).

=== Summary ===

Total read pairs processed:          4,532,096
  Read 1 with adapter:               1,037,644 (22.9%)
  Read 2 with adapter:                 970,254 (21.4%)
Pairs that were too short:             597,889 (13.2%)
Pairs written (passing filters):     3,934,207 (86.8%)

Total basepairs processed: 1,359,628,800 bp
  Read 1:   679,814,400 bp
  Read 2:   679,814,400 bp
Quality-trimmed:             337,912,580 bp (24.9%)
  Read 1:   168,956,290 bp
  Read 2:   168,956,290 bp
Total written (filtered):    948,096,603 bp (69.7%)
  Read 1:   485,638,986 bp
  Read 2:   462,457,617 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1037644 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.6%
  C: 40.8%
  G: 30.7%
  T: 17.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	74796	70814.0	0	74796
4	31286	17703.5	0	31286
5	14562	4425.9	0	14562
6	11426	1106.5	0	11426
7	11959	276.6	0	11959
8	10319	69.2	0	10319
9	10087	17.3	0	9959 128
10	10115	4.3	1	9475 640
11	10979	1.1	1	10416 563
12	11444	0.3	1	10758 686
13	11238	0.3	1	10618 620
14	11333	0.3	1	10616 717
15	13122	0.3	1	12176 946
16	12792	0.3	1	11822 970
17	12883	0.3	1	12224 659
18	11349	0.3	1	10682 667
19	13120	0.3	1	12436 684
20	13075	0.3	1	12294 781
21	15575	0.3	1	14714 861
22	14207	0.3	1	13591 616
23	9138	0.3	1	8800 338
24	8469	0.3	1	8167 302
25	11659	0.3	1	11135 524
26	9911	0.3	1	9564 347
27	13183	0.3	1	12461 722
28	9179	0.3	1	8819 360
29	13350	0.3	1	12606 744
30	13077	0.3	1	12553 524
31	10818	0.3	1	10343 475
32	10018	0.3	1	9602 416
33	13705	0.3	1	13002 703
34	13266	0.3	1	12745 521
35	13044	0.3	1	12495 549
36	15239	0.3	1	14687 552
37	11397	0.3	1	10946 451
38	13984	0.3	1	13465 519
39	13472	0.3	1	13019 453
40	14564	0.3	1	14096 468
41	9526	0.3	1	9238 288
42	13688	0.3	1	13306 382
43	13482	0.3	1	13054 428
44	8492	0.3	1	8250 242
45	20332	0.3	1	19835 497
46	3860	0.3	1	3747 113
47	7101	0.3	1	6867 234
48	8162	0.3	1	7940 222
49	10494	0.3	1	10184 310
50	9694	0.3	1	9441 253
51	9663	0.3	1	9441 222
52	8808	0.3	1	8620 188
53	10811	0.3	1	10544 267
54	9668	0.3	1	9469 199
55	11553	0.3	1	11315 238
56	7979	0.3	1	7812 167
57	11161	0.3	1	10892 269
58	9555	0.3	1	9344 211
59	10363	0.3	1	10104 259
60	9108	0.3	1	8932 176
61	10611	0.3	1	10342 269
62	9046	0.3	1	8840 206
63	14478	0.3	1	14169 309
64	10617	0.3	1	10417 200
65	9555	0.3	1	9382 173
66	13595	0.3	1	13383 212
67	11657	0.3	1	11357 300
68	9664	0.3	1	9457 207
69	14630	0.3	1	14188 442
70	15561	0.3	1	15193 368
71	22231	0.3	1	21504 727
72	126731	0.3	1	125755 976
73	8067	0.3	1	7818 249
74	1166	0.3	1	1069 97
75	577	0.3	1	500 77
76	412	0.3	1	355 57
77	493	0.3	1	416 77
78	402	0.3	1	354 48
79	577	0.3	1	508 69
80	512	0.3	1	464 48
81	668	0.3	1	587 81
82	551	0.3	1	497 54
83	641	0.3	1	569 72
84	463	0.3	1	420 43
85	534	0.3	1	467 67
86	361	0.3	1	308 53
87	444	0.3	1	371 73
88	321	0.3	1	274 47
89	380	0.3	1	307 73
90	307	0.3	1	259 48
91	392	0.3	1	327 65
92	269	0.3	1	218 51
93	318	0.3	1	255 63
94	230	0.3	1	183 47
95	357	0.3	1	303 54
96	225	0.3	1	191 34
97	308	0.3	1	248 60
98	177	0.3	1	144 33
99	256	0.3	1	213 43
100	173	0.3	1	132 41
101	267	0.3	1	207 60
102	168	0.3	1	130 38
103	210	0.3	1	169 41
104	127	0.3	1	88 39
105	215	0.3	1	165 50
106	112	0.3	1	74 38
107	149	0.3	1	117 32
108	98	0.3	1	64 34
109	153	0.3	1	111 42
110	119	0.3	1	87 32
111	149	0.3	1	103 46
112	99	0.3	1	68 31
113	142	0.3	1	101 41
114	67	0.3	1	25 42
115	79	0.3	1	51 28
116	49	0.3	1	21 28
117	82	0.3	1	50 32
118	57	0.3	1	26 31
119	59	0.3	1	33 26
120	37	0.3	1	11 26
121	59	0.3	1	25 34
122	37	0.3	1	4 33
123	43	0.3	1	27 16
124	29	0.3	1	6 23
125	44	0.3	1	17 27
126	32	0.3	1	4 28
127	27	0.3	1	7 20
128	36	0.3	1	1 35
129	35	0.3	1	12 23
130	32	0.3	1	2 30
131	27	0.3	1	4 23
132	22	0.3	1	2 20
133	27	0.3	1	3 24
134	25	0.3	1	0 25
135	20	0.3	1	3 17
136	29	0.3	1	1 28
137	25	0.3	1	1 24
138	25	0.3	1	0 25
139	11	0.3	1	0 11
140	24	0.3	1	0 24

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 970254 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.6%
  C: 40.8%
  G: 30.0%
  T: 18.6%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	68478	70814.0	0	68478
4	27669	17703.5	0	27669
5	13569	4425.9	0	13569
6	10685	1106.5	0	10685
7	10460	276.6	0	10460
8	9029	69.2	0	9029
9	9511	17.3	0	9411 100
10	8910	4.3	1	8308 602
11	9942	1.1	1	9389 553
12	10633	0.3	1	10039 594
13	10030	0.3	1	9490 540
14	10670	0.3	1	10007 663
15	12198	0.3	1	11380 818
16	12087	0.3	1	11163 924
17	11671	0.3	1	10953 718
18	11241	0.3	1	10636 605
19	14540	0.3	1	13657 883
20	11491	0.3	1	11035 456
21	9165	0.3	1	8772 393
22	11432	0.3	1	10879 553
23	8303	0.3	1	8001 302
24	10459	0.3	1	10015 444
25	10791	0.3	1	10355 436
26	9748	0.3	1	9383 365
27	9918	0.3	1	9572 346
28	10503	0.3	1	10124 379
29	10570	0.3	1	10193 377
30	8497	0.3	1	8187 310
31	11108	0.3	1	10637 471
32	10528	0.3	1	10179 349
33	9721	0.3	1	9317 404
34	9520	0.3	1	9213 307
35	9375	0.3	1	8957 418
36	12375	0.3	1	11926 449
37	7823	0.3	1	7528 295
38	9205	0.3	1	8897 308
39	10759	0.3	1	10370 389
40	8815	0.3	1	8561 254
41	8790	0.3	1	8539 251
42	8860	0.3	1	8568 292
43	10584	0.3	1	10083 501
44	9396	0.3	1	9017 379
45	11782	0.3	1	11239 543
46	12478	0.3	1	11982 496
47	9900	0.3	1	9609 291
48	9088	0.3	1	8701 387
49	9715	0.3	1	9308 407
50	10410	0.3	1	9987 423
51	10096	0.3	1	9696 400
52	12898	0.3	1	12340 558
53	11114	0.3	1	10736 378
54	12640	0.3	1	12240 400
55	8726	0.3	1	8467 259
56	10151	0.3	1	9830 321
57	12594	0.3	1	12196 398
58	7460	0.3	1	7282 178
59	8594	0.3	1	8381 213
60	8656	0.3	1	8456 200
61	9410	0.3	1	9160 250
62	8645	0.3	1	8398 247
63	14776	0.3	1	14435 341
64	7959	0.3	1	7740 219
65	8306	0.3	1	8073 233
66	6040	0.3	1	5898 142
67	9797	0.3	1	9515 282
68	8348	0.3	1	8120 228
69	9327	0.3	1	9100 227
70	7618	0.3	1	7465 153
71	9710	0.3	1	9449 261
72	9147	0.3	1	8929 218
73	11144	0.3	1	10688 456
74	12035	0.3	1	11609 426
75	17165	0.3	1	16420 745
76	127786	0.3	1	125915 1871
77	5735	0.3	1	5468 267
78	724	0.3	1	667 57
79	551	0.3	1	489 62
80	431	0.3	1	395 36
81	501	0.3	1	459 42
82	429	0.3	1	389 40
83	612	0.3	1	554 58
84	964	0.3	1	918 46
85	908	0.3	1	847 61
86	1038	0.3	1	986 52
87	901	0.3	1	840 61
88	636	0.3	1	594 42
89	438	0.3	1	388 50
90	253	0.3	1	220 33
91	236	0.3	1	188 48
92	159	0.3	1	125 34
93	221	0.3	1	180 41
94	144	0.3	1	115 29
95	188	0.3	1	154 34
96	114	0.3	1	77 37
97	164	0.3	1	120 44
98	118	0.3	1	83 35
99	142	0.3	1	111 31
100	100	0.3	1	72 28
101	152	0.3	1	116 36
102	111	0.3	1	79 32
103	112	0.3	1	81 31
104	78	0.3	1	51 27
105	110	0.3	1	83 27
106	64	0.3	1	39 25
107	98	0.3	1	60 38
108	66	0.3	1	31 35
109	81	0.3	1	47 34
110	66	0.3	1	36 30
111	79	0.3	1	42 37
112	59	0.3	1	26 33
113	63	0.3	1	40 23
114	44	0.3	1	16 28
115	60	0.3	1	34 26
116	43	0.3	1	15 28
117	48	0.3	1	31 17
118	20	0.3	1	5 15
119	50	0.3	1	22 28
120	43	0.3	1	9 34
121	49	0.3	1	15 34
122	23	0.3	1	5 18
123	44	0.3	1	18 26
124	33	0.3	1	5 28
125	35	0.3	1	9 26
126	32	0.3	1	5 27
127	33	0.3	1	15 18
128	32	0.3	1	3 29
129	40	0.3	1	5 35
130	28	0.3	1	3 25
131	25	0.3	1	3 22
132	30	0.3	1	0 30
133	23	0.3	1	4 19
134	16	0.3	1	1 15
135	24	0.3	1	5 19
136	11	0.3	1	1 10
137	13	0.3	1	0 13
138	17	0.3	1	0 17
139	5	0.3	1	0 5
140	13	0.3	1	0 13

[M::process] read 562746 sequences (68095112 bp)...
[M::mem_process_seqs] Processed 665550 reads in 871.336 CPU sec, 163.125 real sec
[M::process] 0 single-end sequences; 562746 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 147847, 157, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (178, 303, 1739)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4861)
[M::mem_pestat] mean and std.dev: (912.96, 1268.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6422)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 224, 334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 740)
[M::mem_pestat] mean and std.dev: (242.39, 138.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 943)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 49, 236)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 660)
[M::mem_pestat] mean and std.dev: (98.33, 122.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 872)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (234, 300, 729)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1719)
[M::mem_pestat] mean and std.dev: (321.31, 277.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2214)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 562746 reads in 736.636 CPU sec, 92.832 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0815\tPL:Illumina\tPU:x\tLB:pherring\tSM:0815.PWS91 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1838.384 sec; CPU: 10058.464 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
