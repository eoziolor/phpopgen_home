==========================================
SLURM_JOB_ID = 5435895
SLURM_NODELIST = c8-87
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
908
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 639994 sequences (80000212 bp)...
[M::process] 0 single-end sequences; 639994 paired-end sequences
[M::process] read 640602 sequences (80000082 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 184909, 134, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (294, 1195, 4949)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14259)
[M::mem_pestat] mean and std.dev: (2523.24, 2626.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18914)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 206, 318)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 698)
[M::mem_pestat] mean and std.dev: (233.99, 136.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 888)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 53, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1078)
[M::mem_pestat] mean and std.dev: (160.93, 229.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1430)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (311, 434, 1741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4601)
[M::mem_pestat] mean and std.dev: (729.39, 741.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6031)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 639994 reads in 730.592 CPU sec, 103.945 real sec
[M::process] 0 single-end sequences; 640602 paired-end sequences
[M::process] read 642366 sequences (80000172 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (20, 185215, 180, 17)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (307, 716, 2769)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7693)
[M::mem_pestat] mean and std.dev: (1322.53, 1634.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10155)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 206, 317)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 695)
[M::mem_pestat] mean and std.dev: (233.54, 136.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 884)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (21, 54, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 984)
[M::mem_pestat] mean and std.dev: (130.30, 202.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1305)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (265, 361, 3166)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8968)
[M::mem_pestat] mean and std.dev: (1199.38, 1392.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11869)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 640602 reads in 734.808 CPU sec, 100.102 real sec
[M::process] 0 single-end sequences; 642366 paired-end sequences
[M::process] read 640516 sequences (80000008 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (23, 185440, 146, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (396, 680, 3801)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10611)
[M::mem_pestat] mean and std.dev: (1861.39, 2432.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14016)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (127, 206, 318)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (233.71, 137.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 891)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 42, 254)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 718)
[M::mem_pestat] mean and std.dev: (110.97, 167.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 950)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (173, 683, 2110)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5984)
[M::mem_pestat] mean and std.dev: (1211.67, 1694.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7988)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 642366 reads in 721.508 CPU sec, 116.408 real sec
[M::process] 0 single-end sequences; 640516 paired-end sequences
[M::process] read 640058 sequences (80000190 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (16, 184912, 172, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (200, 298, 540)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1220)
[M::mem_pestat] mean and std.dev: (302.21, 192.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1560)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 206, 317)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 695)
[M::mem_pestat] mean and std.dev: (233.48, 136.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 884)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 54, 239)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 659)
[M::mem_pestat] mean and std.dev: (124.84, 158.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 869)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (348, 544, 2656)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7272)
[M::mem_pestat] mean and std.dev: (1428.33, 1664.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9580)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 640516 reads in 728.968 CPU sec, 99.309 real sec
[M::process] 0 single-end sequences; 640058 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (30, 184933, 166, 26)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (177, 391, 1519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4203)
[M::mem_pestat] mean and std.dev: (596.16, 683.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5545)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (127, 205, 317)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 697)
[M::mem_pestat] mean and std.dev: (232.76, 135.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 887)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (18, 38, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 612)
[M::mem_pestat] mean and std.dev: (85.87, 138.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (407, 697, 3859)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10763)
[M::mem_pestat] mean and std.dev: (1816.85, 1839.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14215)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 640058 reads in 732.580 CPU sec, 98.977 real sec
[M::process] read 640058 sequences (80000216 bp)...
[M::process] 0 single-end sequences; 640058 paired-end sequences
[M::process] read 649086 sequences (80000167 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 184828, 182, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (365, 802, 2829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7757)
[M::mem_pestat] mean and std.dev: (1267.62, 1594.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10221)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 206, 318)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 698)
[M::mem_pestat] mean and std.dev: (233.99, 137.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 888)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 46, 300)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 848)
[M::mem_pestat] mean and std.dev: (106.37, 166.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1122)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (278, 438, 805)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1859)
[M::mem_pestat] mean and std.dev: (447.58, 307.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2386)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 640058 reads in 730.940 CPU sec, 102.631 real sec
[M::process] 0 single-end sequences; 649086 paired-end sequences
[M::process] read 648796 sequences (80000018 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 187393, 193, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (295, 413, 3539)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10027)
[M::mem_pestat] mean and std.dev: (1630.52, 2048.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13271)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (127, 202, 309)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (228.12, 131.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 855)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 51, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)
[M::mem_pestat] mean and std.dev: (101.51, 130.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 832)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (258, 942, 5918)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17238)
[M::mem_pestat] mean and std.dev: (2646.13, 2925.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22898)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 649086 reads in 726.500 CPU sec, 127.755 real sec
[M::process] 0 single-end sequences; 648796 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 187204, 180, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (203, 890, 4628)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13478)
[M::mem_pestat] mean and std.dev: (2672.59, 3273.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17903)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (127, 201, 305)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 661)
[M::mem_pestat] mean and std.dev: (225.81, 127.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 839)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 50, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 599)
[M::mem_pestat] mean and std.dev: (82.35, 106.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 888, 4097)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11799)
[M::mem_pestat] mean and std.dev: (2090.29, 2482.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15650)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 648796 reads in 744.872 CPU sec, 99.339 real sec
[M::process] read 649374 sequences (80000027 bp)...
[M::process] 0 single-end sequences; 649374 paired-end sequences
[M::process] read 651610 sequences (80000204 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 186875, 174, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (238, 486, 2984)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8476)
[M::mem_pestat] mean and std.dev: (1331.69, 1494.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11222)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (127, 202, 304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 658)
[M::mem_pestat] mean and std.dev: (225.50, 127.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 835)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 46, 186)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 504)
[M::mem_pestat] mean and std.dev: (69.62, 90.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 663)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (282, 478, 3480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9876)
[M::mem_pestat] mean and std.dev: (2044.73, 2662.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13074)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 649374 reads in 745.340 CPU sec, 104.781 real sec
[M::process] 0 single-end sequences; 651610 paired-end sequences
[M::process] read 648448 sequences (80000051 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (24, 187119, 181, 26)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 449, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1765)
[M::mem_pestat] mean and std.dev: (407.76, 252.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2262)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (127, 202, 304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 658)
[M::mem_pestat] mean and std.dev: (225.28, 127.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 835)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 46, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 589)
[M::mem_pestat] mean and std.dev: (72.72, 91.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (312, 913, 5260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15156)
[M::mem_pestat] mean and std.dev: (2547.85, 2789.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20104)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 651610 reads in 745.568 CPU sec, 112.323 real sec
[M::process] 0 single-end sequences; 648448 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (16, 186841, 176, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (277, 569, 1804)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4858)
[M::mem_pestat] mean and std.dev: (889.27, 1052.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6385)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (127, 201, 302)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (224.51, 126.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 827)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (24, 50, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 816)
[M::mem_pestat] mean and std.dev: (114.48, 169.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1080)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 414, 632)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1330)
[M::mem_pestat] mean and std.dev: (362.68, 242.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1679)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
Finished in 1795.39 s (417 us/read; 0.14 M reads/minute).

=== Summary ===

Total read pairs processed:          4,303,951
  Read 1 with adapter:                 993,032 (23.1%)
  Read 2 with adapter:                 964,430 (22.4%)
Pairs that were too short:             449,857 (10.5%)
Pairs written (passing filters):     3,854,094 (89.5%)

Total basepairs processed: 1,291,185,300 bp
  Read 1:   645,592,650 bp
  Read 2:   645,592,650 bp
Quality-trimmed:             243,698,514 bp (18.9%)
  Read 1:   121,849,257 bp
  Read 2:   121,849,257 bp
Total written (filtered):    955,850,360 bp (74.0%)
  Read 1:   486,278,887 bp
  Read 2:   469,571,473 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 993032 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.3%
  C: 38.0%
  G: 28.2%
  T: 20.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	75260	67249.2	0	75260
4	32675	16812.3	0	32675
5	16272	4203.1	0	16272
6	13327	1050.8	0	13327
7	13115	262.7	0	13115
8	12029	65.7	0	12029
9	11875	16.4	0	11742 133
10	11615	4.1	1	10987 628
11	12563	1.0	1	11988 575
12	13106	0.3	1	12439 667
13	12512	0.3	1	11989 523
14	12408	0.3	1	11769 639
15	13322	0.3	1	12638 684
16	13149	0.3	1	12458 691
17	13964	0.3	1	13369 595
18	12431	0.3	1	11910 521
19	13760	0.3	1	13266 494
20	13751	0.3	1	13178 573
21	15880	0.3	1	15255 625
22	14176	0.3	1	13685 491
23	10441	0.3	1	10094 347
24	10114	0.3	1	9807 307
25	12037	0.3	1	11585 452
26	11144	0.3	1	10767 377
27	13275	0.3	1	12736 539
28	10751	0.3	1	10404 347
29	13893	0.3	1	13320 573
30	14731	0.3	1	14283 448
31	11259	0.3	1	10897 362
32	11677	0.3	1	11341 336
33	11998	0.3	1	11639 359
34	11250	0.3	1	10944 306
35	12600	0.3	1	12214 386
36	12153	0.3	1	11839 314
37	12351	0.3	1	12080 271
38	10848	0.3	1	10571 277
39	14088	0.3	1	13674 414
40	11709	0.3	1	11445 264
41	12247	0.3	1	11914 333
42	12329	0.3	1	12050 279
43	14724	0.3	1	14342 382
44	9853	0.3	1	9593 260
45	19288	0.3	1	18874 414
46	4839	0.3	1	4701 138
47	7659	0.3	1	7486 173
48	8558	0.3	1	8384 174
49	10213	0.3	1	9968 245
50	10187	0.3	1	9992 195
51	9889	0.3	1	9683 206
52	8599	0.3	1	8435 164
53	9791	0.3	1	9634 157
54	9442	0.3	1	9238 204
55	10274	0.3	1	10086 188
56	7749	0.3	1	7588 161
57	9921	0.3	1	9714 207
58	8814	0.3	1	8650 164
59	9338	0.3	1	9154 184
60	8648	0.3	1	8482 166
61	9226	0.3	1	9023 203
62	7991	0.3	1	7791 200
63	11418	0.3	1	11176 242
64	9384	0.3	1	9214 170
65	8473	0.3	1	8304 169
66	11560	0.3	1	11327 233
67	9361	0.3	1	9169 192
68	8149	0.3	1	7967 182
69	11255	0.3	1	10964 291
70	11945	0.3	1	11683 262
71	15901	0.3	1	15367 534
72	94896	0.3	1	94029 867
73	6612	0.3	1	6417 195
74	836	0.3	1	762 74
75	376	0.3	1	321 55
76	300	0.3	1	266 34
77	360	0.3	1	304 56
78	319	0.3	1	275 44
79	424	0.3	1	364 60
80	392	0.3	1	346 46
81	458	0.3	1	402 56
82	385	0.3	1	340 45
83	457	0.3	1	411 46
84	347	0.3	1	296 51
85	349	0.3	1	304 45
86	271	0.3	1	242 29
87	324	0.3	1	283 41
88	242	0.3	1	211 31
89	299	0.3	1	252 47
90	229	0.3	1	192 37
91	320	0.3	1	276 44
92	190	0.3	1	155 35
93	228	0.3	1	183 45
94	210	0.3	1	182 28
95	260	0.3	1	207 53
96	183	0.3	1	143 40
97	228	0.3	1	177 51
98	171	0.3	1	135 36
99	184	0.3	1	145 39
100	133	0.3	1	100 33
101	185	0.3	1	144 41
102	157	0.3	1	122 35
103	159	0.3	1	123 36
104	116	0.3	1	87 29
105	120	0.3	1	91 29
106	95	0.3	1	64 31
107	127	0.3	1	97 30
108	79	0.3	1	55 24
109	128	0.3	1	96 32
110	93	0.3	1	56 37
111	95	0.3	1	65 30
112	60	0.3	1	37 23
113	100	0.3	1	66 34
114	48	0.3	1	25 23
115	70	0.3	1	40 30
116	39	0.3	1	16 23
117	68	0.3	1	32 36
118	40	0.3	1	21 19
119	50	0.3	1	24 26
120	38	0.3	1	10 28
121	46	0.3	1	16 30
122	39	0.3	1	10 29
123	43	0.3	1	20 23
124	39	0.3	1	3 36
125	45	0.3	1	10 35
126	34	0.3	1	4 30
127	30	0.3	1	7 23
128	35	0.3	1	1 34
129	32	0.3	1	6 26
130	28	0.3	1	1 27
131	29	0.3	1	0 29
132	29	0.3	1	1 28
133	18	0.3	1	0 18
134	25	0.3	1	0 25
135	18	0.3	1	0 18
136	31	0.3	1	0 31
137	25	0.3	1	5 20
138	35	0.3	1	0 35
139	27	0.3	1	0 27
140	40	0.3	1	0 40

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 964430 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.2%
  C: 38.5%
  G: 27.6%
  T: 20.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	70668	67249.2	0	70668
4	28774	16812.3	0	28774
5	15819	4203.1	0	15819
6	12390	1050.8	0	12390
7	12500	262.7	0	12500
8	11053	65.7	0	11053
9	11417	16.4	0	11290 127
10	10573	4.1	1	10047 526
11	12011	1.0	1	11437 574
12	12375	0.3	1	11749 626
13	12080	0.3	1	11537 543
14	11915	0.3	1	11267 648
15	13522	0.3	1	12814 708
16	13424	0.3	1	12670 754
17	12944	0.3	1	12317 627
18	12688	0.3	1	12151 537
19	15198	0.3	1	14422 776
20	12285	0.3	1	11816 469
21	10830	0.3	1	10446 384
22	12433	0.3	1	11917 516
23	10035	0.3	1	9656 379
24	12033	0.3	1	11598 435
25	11768	0.3	1	11332 436
26	11211	0.3	1	10859 352
27	11082	0.3	1	10761 321
28	11922	0.3	1	11501 421
29	11078	0.3	1	10769 309
30	10734	0.3	1	10348 386
31	12865	0.3	1	12378 487
32	12340	0.3	1	11997 343
33	11505	0.3	1	11101 404
34	8841	0.3	1	8583 258
35	10987	0.3	1	10668 319
36	10988	0.3	1	10670 318
37	10036	0.3	1	9718 318
38	12443	0.3	1	12081 362
39	9492	0.3	1	9203 289
40	10813	0.3	1	10490 323
41	10539	0.3	1	10222 317
42	10552	0.3	1	10257 295
43	10686	0.3	1	10317 369
44	10491	0.3	1	10182 309
45	12030	0.3	1	11653 377
46	12393	0.3	1	11999 394
47	11259	0.3	1	10975 284
48	9925	0.3	1	9665 260
49	10039	0.3	1	9768 271
50	10724	0.3	1	10425 299
51	10196	0.3	1	9931 265
52	11216	0.3	1	10915 301
53	10815	0.3	1	10551 264
54	12629	0.3	1	12345 284
55	8372	0.3	1	8152 220
56	9905	0.3	1	9684 221
57	11555	0.3	1	11305 250
58	6934	0.3	1	6804 130
59	8314	0.3	1	8175 139
60	8716	0.3	1	8566 150
61	8223	0.3	1	8059 164
62	7884	0.3	1	7725 159
63	13286	0.3	1	13013 273
64	5802	0.3	1	5661 141
65	7261	0.3	1	7067 194
66	5583	0.3	1	5441 142
67	8133	0.3	1	7976 157
68	7618	0.3	1	7457 161
69	8101	0.3	1	7939 162
70	6559	0.3	1	6415 144
71	7866	0.3	1	7685 181
72	7635	0.3	1	7435 200
73	8596	0.3	1	8311 285
74	9165	0.3	1	8915 250
75	13133	0.3	1	12685 448
76	92254	0.3	1	91333 921
77	5844	0.3	1	5657 187
78	735	0.3	1	684 51
79	456	0.3	1	420 36
80	391	0.3	1	360 31
81	361	0.3	1	318 43
82	337	0.3	1	307 30
83	405	0.3	1	372 33
84	725	0.3	1	695 30
85	709	0.3	1	683 26
86	861	0.3	1	828 33
87	656	0.3	1	618 38
88	485	0.3	1	450 35
89	286	0.3	1	256 30
90	161	0.3	1	134 27
91	156	0.3	1	127 29
92	99	0.3	1	70 29
93	127	0.3	1	96 31
94	98	0.3	1	73 25
95	115	0.3	1	91 24
96	86	0.3	1	62 24
97	87	0.3	1	57 30
98	100	0.3	1	60 40
99	94	0.3	1	63 31
100	85	0.3	1	52 33
101	83	0.3	1	52 31
102	75	0.3	1	48 27
103	80	0.3	1	48 32
104	57	0.3	1	24 33
105	59	0.3	1	25 34
106	57	0.3	1	28 29
107	50	0.3	1	24 26
108	46	0.3	1	16 30
109	48	0.3	1	25 23
110	37	0.3	1	17 20
111	43	0.3	1	24 19
112	28	0.3	1	12 16
113	40	0.3	1	25 15
114	33	0.3	1	10 23
115	57	0.3	1	26 31
116	28	0.3	1	4 24
117	35	0.3	1	14 21
118	30	0.3	1	5 25
119	34	0.3	1	8 26
120	35	0.3	1	4 31
121	35	0.3	1	7 28
122	31	0.3	1	4 27
123	27	0.3	1	6 21
124	33	0.3	1	1 32
125	42	0.3	1	8 34
126	40	0.3	1	3 37
127	27	0.3	1	4 23
128	25	0.3	1	1 24
129	36	0.3	1	1 35
130	18	0.3	1	0 18
131	27	0.3	1	0 27
132	33	0.3	1	0 33
133	27	0.3	1	3 24
134	26	0.3	1	1 25
135	22	0.3	1	0 22
136	19	0.3	1	0 19
137	28	0.3	1	0 28
138	16	0.3	1	0 16
139	13	0.3	1	1 12
140	30	0.3	1	0 30

[M::process] read 617280 sequences (75849013 bp)...
[M::mem_process_seqs] Processed 648448 reads in 738.104 CPU sec, 101.260 real sec
[M::process] 0 single-end sequences; 617280 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 177984, 167, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (251, 655, 2798)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7892)
[M::mem_pestat] mean and std.dev: (1623.12, 1965.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10439)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (126, 200, 303)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 657)
[M::mem_pestat] mean and std.dev: (223.99, 127.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 834)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 46, 228)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 632)
[M::mem_pestat] mean and std.dev: (101.65, 143.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 834)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (195, 317, 964)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2502)
[M::mem_pestat] mean and std.dev: (475.81, 578.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3271)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 617280 reads in 708.628 CPU sec, 158.425 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0908\tPL:Illumina\tPU:x\tLB:pherring\tSM:0908.SS06 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1971.776 sec; CPU: 8800.440 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
