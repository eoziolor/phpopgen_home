==========================================
SLURM_JOB_ID = 5436055
SLURM_NODELIST = c10-92
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1068
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 671510 sequences (80000114 bp)...
[M::process] 0 single-end sequences; 671510 paired-end sequences
[M::process] read 679178 sequences (80000146 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 179561, 170, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (216, 345, 5093)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14847)
[M::mem_pestat] mean and std.dev: (2132.28, 2739.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19724)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 187, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 661)
[M::mem_pestat] mean and std.dev: (213.82, 130.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 844)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 51, 407)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1161)
[M::mem_pestat] mean and std.dev: (172.45, 254.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1538)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (159, 373, 838)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2196)
[M::mem_pestat] mean and std.dev: (333.27, 270.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2875)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 671510 reads in 1015.496 CPU sec, 143.166 real sec
[M::process] 0 single-end sequences; 679178 paired-end sequences
[M::process] read 677512 sequences (80000101 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 181045, 170, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 244, 3880)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11402)
[M::mem_pestat] mean and std.dev: (1593.80, 2325.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15163)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 181, 283)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 631)
[M::mem_pestat] mean and std.dev: (206.10, 124.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 805)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 57, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1012)
[M::mem_pestat] mean and std.dev: (147.32, 208.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1340)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (166, 285, 1076)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2896)
[M::mem_pestat] mean and std.dev: (378.75, 465.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3806)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 679178 reads in 1025.292 CPU sec, 153.558 real sec
[M::process] 0 single-end sequences; 677512 paired-end sequences
[M::process] read 670056 sequences (80000031 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 180810, 153, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (170, 365, 1420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3920)
[M::mem_pestat] mean and std.dev: (560.96, 748.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5170)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 182, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (208.48, 128.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 825)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 72, 339)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 959)
[M::mem_pestat] mean and std.dev: (163.53, 216.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1269)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (156, 251, 1223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3357)
[M::mem_pestat] mean and std.dev: (394.38, 589.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4424)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 677512 reads in 997.920 CPU sec, 135.526 real sec
[M::process] 0 single-end sequences; 670056 paired-end sequences
[M::process] read 675448 sequences (80000110 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 178845, 172, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (123, 293, 1063)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2943)
[M::mem_pestat] mean and std.dev: (543.28, 697.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3883)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 187, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (214.97, 132.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 50, 169)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 463)
[M::mem_pestat] mean and std.dev: (82.74, 103.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 610)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (229, 284, 890)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2212)
[M::mem_pestat] mean and std.dev: (362.73, 326.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2873)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 670056 reads in 987.116 CPU sec, 135.755 real sec
[M::process] 0 single-end sequences; 675448 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 179190, 159, 26)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (122, 263, 698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1850)
[M::mem_pestat] mean and std.dev: (332.50, 377.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2426)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 183, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 641)
[M::mem_pestat] mean and std.dev: (208.64, 126.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 818)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 56, 340)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 964)
[M::mem_pestat] mean and std.dev: (136.51, 194.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1276)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 577, 1328)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3580)
[M::mem_pestat] mean and std.dev: (526.14, 662.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4706)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 675448 reads in 1001.716 CPU sec, 131.045 real sec
[M::process] read 675180 sequences (80000001 bp)...
[M::process] 0 single-end sequences; 675180 paired-end sequences
[M::process] read 691876 sequences (80000031 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 180040, 172, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 569, 1126)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2988)
[M::mem_pestat] mean and std.dev: (721.87, 793.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3919)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 183, 289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (209.34, 128.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 829)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 42, 195)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 535)
[M::mem_pestat] mean and std.dev: (73.67, 89.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 705)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (166, 354, 4059)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11845)
[M::mem_pestat] mean and std.dev: (2107.50, 2900.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15738)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 675180 reads in 984.292 CPU sec, 140.470 real sec
[M::process] 0 single-end sequences; 691876 paired-end sequences
[M::process] read 686006 sequences (80000272 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 183601, 171, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 318, 1991)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5587)
[M::mem_pestat] mean and std.dev: (1042.58, 1510.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7385)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 178, 280)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 628)
[M::mem_pestat] mean and std.dev: (203.39, 124.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 802)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 44, 194)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 532)
[M::mem_pestat] mean and std.dev: (78.62, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 701)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 207, 1316)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3742)
[M::mem_pestat] mean and std.dev: (399.74, 681.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4955)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 691876 reads in 987.380 CPU sec, 136.351 real sec
[M::process] 0 single-end sequences; 686006 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 181798, 173, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 383, 1264)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3560)
[M::mem_pestat] mean and std.dev: (339.12, 318.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4708)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 178, 279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (202.85, 122.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 52, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 830)
[M::mem_pestat] mean and std.dev: (123.22, 168.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1098)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (153, 347, 3411)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9927)
[M::mem_pestat] mean and std.dev: (1442.80, 2052.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13185)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 686006 reads in 1003.384 CPU sec, 132.904 real sec
[M::process] read 682680 sequences (80000021 bp)...
[M::process] 0 single-end sequences; 682680 paired-end sequences
[M::process] read 695166 sequences (80000154 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (22, 180956, 176, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 373, 3454)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10124)
[M::mem_pestat] mean and std.dev: (1630.27, 2516.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13459)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 180, 283)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (205.42, 125.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 64, 276)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 778)
[M::mem_pestat] mean and std.dev: (122.15, 163.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 911, 1519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4295)
[M::mem_pestat] mean and std.dev: (1017.00, 1097.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5683)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 682680 reads in 1016.608 CPU sec, 139.020 real sec
[M::process] 0 single-end sequences; 695166 paired-end sequences
[M::process] read 683464 sequences (80000084 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (41, 183334, 141, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (103, 261, 1163)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3283)
[M::mem_pestat] mean and std.dev: (570.31, 833.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4343)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 178, 280)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (203.24, 122.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 48, 330)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 940)
[M::mem_pestat] mean and std.dev: (132.00, 194.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1245)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (159, 320, 602)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1488)
[M::mem_pestat] mean and std.dev: (310.44, 194.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1931)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 695166 reads in 1024.032 CPU sec, 140.641 real sec
[M::process] 0 single-end sequences; 683464 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 181837, 155, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (113, 244, 910)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2504)
[M::mem_pestat] mean and std.dev: (411.66, 533.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3301)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 179, 280)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (203.83, 122.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 46, 175)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 475)
[M::mem_pestat] mean and std.dev: (69.10, 92.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 625)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 252, 3470)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10134)
[M::mem_pestat] mean and std.dev: (1484.62, 2111.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13466)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 681594 sequences (80000077 bp)...
[M::mem_process_seqs] Processed 683464 reads in 1023.548 CPU sec, 144.061 real sec
[M::process] 0 single-end sequences; 681594 paired-end sequences
Finished in 2016.27 s (414 us/read; 0.14 M reads/minute).

=== Summary ===

Total read pairs processed:          4,868,210
  Read 1 with adapter:               1,395,225 (28.7%)
  Read 2 with adapter:               1,318,117 (27.1%)
Pairs that were too short:             695,232 (14.3%)
Pairs written (passing filters):     4,172,978 (85.7%)

Total basepairs processed: 1,460,463,000 bp
  Read 1:   730,231,500 bp
  Read 2:   730,231,500 bp
Quality-trimmed:             373,629,920 bp (25.6%)
  Read 1:   186,814,960 bp
  Read 2:   186,814,960 bp
Total written (filtered):    980,619,076 bp (67.1%)
  Read 1:   502,443,842 bp
  Read 2:   478,175,234 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1395225 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.3%
  C: 40.9%
  G: 29.7%
  T: 18.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	79428	76065.8	0	79428
4	35176	19016.4	0	35176
5	18075	4754.1	0	18075
6	14792	1188.5	0	14792
7	15273	297.1	0	15273
8	13617	74.3	0	13617
9	13497	18.6	0	13357 140
10	13245	4.6	1	12558 687
11	14546	1.2	1	13913 633
12	15040	0.3	1	14318 722
13	14257	0.3	1	13619 638
14	15237	0.3	1	14469 768
15	16540	0.3	1	15647 893
16	17145	0.3	1	16031 1114
17	17148	0.3	1	16390 758
18	15348	0.3	1	14662 686
19	17138	0.3	1	16405 733
20	17020	0.3	1	16255 765
21	18220	0.3	1	17404 816
22	17957	0.3	1	17273 684
23	12899	0.3	1	12487 412
24	12499	0.3	1	12117 382
25	15767	0.3	1	15137 630
26	12979	0.3	1	12599 380
27	16126	0.3	1	15430 696
28	13610	0.3	1	13159 451
29	18963	0.3	1	18148 815
30	19476	0.3	1	18786 690
31	14270	0.3	1	13769 501
32	15499	0.3	1	15014 485
33	15845	0.3	1	15290 555
34	16473	0.3	1	15999 474
35	17103	0.3	1	16625 478
36	17766	0.3	1	17229 537
37	17415	0.3	1	16916 499
38	14373	0.3	1	14028 345
39	18527	0.3	1	18029 498
40	20919	0.3	1	20417 502
41	15185	0.3	1	14865 320
42	16472	0.3	1	16098 374
43	21219	0.3	1	20771 448
44	12622	0.3	1	12359 263
45	30201	0.3	1	29638 563
46	5190	0.3	1	5051 139
47	9378	0.3	1	9166 212
48	11085	0.3	1	10890 195
49	13980	0.3	1	13690 290
50	13873	0.3	1	13648 225
51	13687	0.3	1	13411 276
52	12104	0.3	1	11906 198
53	14407	0.3	1	14143 264
54	13190	0.3	1	12961 229
55	15832	0.3	1	15615 217
56	11618	0.3	1	11450 168
57	15227	0.3	1	14980 247
58	13556	0.3	1	13335 221
59	14330	0.3	1	14099 231
60	13305	0.3	1	13130 175
61	14885	0.3	1	14632 253
62	12624	0.3	1	12426 198
63	20036	0.3	1	19733 303
64	15344	0.3	1	15128 216
65	13463	0.3	1	13271 192
66	19698	0.3	1	19455 243
67	16254	0.3	1	15994 260
68	14355	0.3	1	14142 213
69	20861	0.3	1	20444 417
70	22976	0.3	1	22618 358
71	30309	0.3	1	29639 670
72	189752	0.3	1	188754 998
73	10576	0.3	1	10293 283
74	1296	0.3	1	1224 72
75	675	0.3	1	608 67
76	458	0.3	1	407 51
77	579	0.3	1	538 41
78	569	0.3	1	519 50
79	690	0.3	1	622 68
80	640	0.3	1	592 48
81	807	0.3	1	730 77
82	740	0.3	1	690 50
83	665	0.3	1	588 77
84	546	0.3	1	490 56
85	593	0.3	1	529 64
86	450	0.3	1	410 40
87	499	0.3	1	441 58
88	433	0.3	1	389 44
89	529	0.3	1	468 61
90	401	0.3	1	356 45
91	503	0.3	1	438 65
92	376	0.3	1	334 42
93	452	0.3	1	406 46
94	356	0.3	1	316 40
95	428	0.3	1	373 55
96	318	0.3	1	279 39
97	415	0.3	1	353 62
98	313	0.3	1	273 40
99	358	0.3	1	308 50
100	261	0.3	1	222 39
101	377	0.3	1	318 59
102	248	0.3	1	206 42
103	299	0.3	1	254 45
104	217	0.3	1	182 35
105	273	0.3	1	233 40
106	188	0.3	1	153 35
107	225	0.3	1	182 43
108	168	0.3	1	144 24
109	249	0.3	1	204 45
110	144	0.3	1	120 24
111	193	0.3	1	161 32
112	112	0.3	1	88 24
113	176	0.3	1	143 33
114	95	0.3	1	60 35
115	111	0.3	1	76 35
116	65	0.3	1	35 30
117	80	0.3	1	53 27
118	62	0.3	1	38 24
119	77	0.3	1	44 33
120	55	0.3	1	26 29
121	72	0.3	1	35 37
122	51	0.3	1	16 35
123	68	0.3	1	42 26
124	33	0.3	1	3 30
125	32	0.3	1	11 21
126	34	0.3	1	5 29
127	34	0.3	1	14 20
128	35	0.3	1	5 30
129	31	0.3	1	10 21
130	29	0.3	1	0 29
131	31	0.3	1	12 19
132	30	0.3	1	3 27
133	22	0.3	1	2 20
134	27	0.3	1	2 25
135	25	0.3	1	5 20
136	25	0.3	1	0 25
137	22	0.3	1	4 18
138	23	0.3	1	0 23
139	18	0.3	1	0 18
140	17	0.3	1	0 17

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1318117 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.1%
  C: 40.9%
  G: 29.4%
  T: 18.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	71804	76065.8	0	71804
4	30795	19016.4	0	30795
5	16661	4754.1	0	16661
6	13333	1188.5	0	13333
7	13169	297.1	0	13169
8	11827	74.3	0	11827
9	12462	18.6	0	12335 127
10	11249	4.6	1	10614 635
11	13111	1.2	1	12447 664
12	13836	0.3	1	13128 708
13	13000	0.3	1	12353 647
14	13504	0.3	1	12769 735
15	15493	0.3	1	14586 907
16	15650	0.3	1	14634 1016
17	14511	0.3	1	13757 754
18	14822	0.3	1	14100 722
19	18638	0.3	1	17676 962
20	14734	0.3	1	14202 532
21	12064	0.3	1	11637 427
22	14586	0.3	1	14011 575
23	10875	0.3	1	10500 375
24	13814	0.3	1	13314 500
25	13875	0.3	1	13331 544
26	12879	0.3	1	12442 437
27	12573	0.3	1	12165 408
28	14408	0.3	1	13943 465
29	13125	0.3	1	12715 410
30	12066	0.3	1	11645 421
31	15623	0.3	1	15004 619
32	14816	0.3	1	14343 473
33	13421	0.3	1	12932 489
34	10218	0.3	1	9926 292
35	13292	0.3	1	12905 387
36	14093	0.3	1	13738 355
37	12044	0.3	1	11709 335
38	15239	0.3	1	14818 421
39	11802	0.3	1	11480 322
40	13777	0.3	1	13432 345
41	13408	0.3	1	12986 422
42	12784	0.3	1	12433 351
43	14401	0.3	1	13898 503
44	13356	0.3	1	12955 401
45	16461	0.3	1	15883 578
46	17276	0.3	1	16743 533
47	14714	0.3	1	14352 362
48	12987	0.3	1	12644 343
49	13709	0.3	1	13359 350
50	14494	0.3	1	14117 377
51	14233	0.3	1	13829 404
52	17601	0.3	1	17192 409
53	15766	0.3	1	15411 355
54	17447	0.3	1	17088 359
55	12471	0.3	1	12184 287
56	14632	0.3	1	14331 301
57	17315	0.3	1	16994 321
58	10607	0.3	1	10455 152
59	12377	0.3	1	12170 207
60	12562	0.3	1	12350 212
61	13372	0.3	1	13124 248
62	12611	0.3	1	12389 222
63	20889	0.3	1	20568 321
64	10674	0.3	1	10519 155
65	11587	0.3	1	11388 199
66	8821	0.3	1	8703 118
67	13676	0.3	1	13468 208
68	12466	0.3	1	12264 202
69	13524	0.3	1	13337 187
70	11383	0.3	1	11223 160
71	14115	0.3	1	13883 232
72	13228	0.3	1	13009 219
73	16345	0.3	1	15943 402
74	17336	0.3	1	16983 353
75	23484	0.3	1	22718 766
76	197690	0.3	1	196131 1559
77	8548	0.3	1	8245 303
78	995	0.3	1	924 71
79	702	0.3	1	652 50
80	594	0.3	1	547 47
81	658	0.3	1	608 50
82	517	0.3	1	479 38
83	727	0.3	1	677 50
84	1406	0.3	1	1366 40
85	1347	0.3	1	1293 54
86	1584	0.3	1	1527 57
87	1331	0.3	1	1267 64
88	998	0.3	1	953 45
89	593	0.3	1	552 41
90	364	0.3	1	315 49
91	310	0.3	1	276 34
92	229	0.3	1	185 44
93	280	0.3	1	235 45
94	202	0.3	1	163 39
95	269	0.3	1	228 41
96	183	0.3	1	147 36
97	198	0.3	1	165 33
98	173	0.3	1	145 28
99	203	0.3	1	160 43
100	166	0.3	1	140 26
101	193	0.3	1	159 34
102	161	0.3	1	119 42
103	167	0.3	1	138 29
104	121	0.3	1	88 33
105	136	0.3	1	106 30
106	110	0.3	1	73 37
107	115	0.3	1	88 27
108	87	0.3	1	61 26
109	105	0.3	1	74 31
110	81	0.3	1	51 30
111	138	0.3	1	93 45
112	74	0.3	1	48 26
113	75	0.3	1	52 23
114	58	0.3	1	35 23
115	77	0.3	1	56 21
116	46	0.3	1	20 26
117	61	0.3	1	34 27
118	53	0.3	1	22 31
119	61	0.3	1	28 33
120	40	0.3	1	19 21
121	46	0.3	1	24 22
122	37	0.3	1	14 23
123	53	0.3	1	25 28
124	33	0.3	1	6 27
125	47	0.3	1	20 27
126	29	0.3	1	8 21
127	30	0.3	1	14 16
128	19	0.3	1	5 14
129	33	0.3	1	12 21
130	31	0.3	1	6 25
131	21	0.3	1	2 19
132	30	0.3	1	4 26
133	28	0.3	1	6 22
134	31	0.3	1	2 29
135	21	0.3	1	3 18
136	20	0.3	1	1 19
137	26	0.3	1	2 24
138	22	0.3	1	3 19
139	16	0.3	1	1 15
140	17	0.3	1	0 17

[M::process] read 176286 sequences (20617934 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 180944, 178, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (149, 544, 1674)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4724)
[M::mem_pestat] mean and std.dev: (592.42, 814.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6249)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 180, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (206.02, 125.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 812)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 49, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (88.68, 121.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 812)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 306, 920)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2368)
[M::mem_pestat] mean and std.dev: (471.10, 471.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3092)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 681594 reads in 1019.792 CPU sec, 129.984 real sec
[M::process] 0 single-end sequences; 176286 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 46855, 51, 2)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (206, 249, 3276)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9416)
[M::mem_pestat] mean and std.dev: (1478.00, 2044.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12486)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 182, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (207.42, 126.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 820)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 109, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 805)
[M::mem_pestat] mean and std.dev: (162.85, 171.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1059)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 176286 reads in 265.696 CPU sec, 33.853 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1068\tPL:Illumina\tPU:x\tLB:pherring\tSM:1068.TB17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2175.712 sec; CPU: 12364.112 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
