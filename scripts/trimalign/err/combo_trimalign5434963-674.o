==========================================
SLURM_JOB_ID = 5435661
SLURM_NODELIST = c10-76
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
674
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 646720 sequences (80000088 bp)...
[M::process] 0 single-end sequences; 646720 paired-end sequences
[M::process] read 649968 sequences (80000149 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 169564, 195, 50)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (338, 468, 2192)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5900)
[M::mem_pestat] mean and std.dev: (1050.33, 1280.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7754)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 273, 443)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1037)
[M::mem_pestat] mean and std.dev: (308.62, 194.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1334)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 60, 436)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1252)
[M::mem_pestat] mean and std.dev: (174.60, 258.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1660)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 594, 3607)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10365)
[M::mem_pestat] mean and std.dev: (1896.16, 2409.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13744)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 646720 reads in 962.912 CPU sec, 142.373 real sec
[M::process] 0 single-end sequences; 649968 paired-end sequences
[M::process] read 651612 sequences (80000141 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 169633, 175, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (262, 371, 1073)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2695)
[M::mem_pestat] mean and std.dev: (529.90, 474.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3506)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (145, 273, 444)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1042)
[M::mem_pestat] mean and std.dev: (308.96, 196.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1341)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 66, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1086)
[M::mem_pestat] mean and std.dev: (161.95, 215.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1439)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (277, 672, 1387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3607)
[M::mem_pestat] mean and std.dev: (704.53, 634.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4717)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 649968 reads in 966.276 CPU sec, 130.785 real sec
[M::process] 0 single-end sequences; 651612 paired-end sequences
[M::process] read 648132 sequences (80000045 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (47, 169466, 161, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (285, 472, 778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1764)
[M::mem_pestat] mean and std.dev: (404.82, 222.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2257)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (145, 275, 448)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1054)
[M::mem_pestat] mean and std.dev: (311.22, 198.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1357)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 70, 651)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1899)
[M::mem_pestat] mean and std.dev: (233.86, 365.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2523)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (311, 572, 946)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2216)
[M::mem_pestat] mean and std.dev: (583.74, 463.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2851)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 651612 reads in 958.224 CPU sec, 134.144 real sec
[M::process] 0 single-end sequences; 648132 paired-end sequences
[M::process] read 648886 sequences (80000054 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 169543, 163, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (173, 475, 1831)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5147)
[M::mem_pestat] mean and std.dev: (709.00, 999.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6805)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (145, 272, 441)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1033)
[M::mem_pestat] mean and std.dev: (307.35, 193.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1329)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 86, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1001)
[M::mem_pestat] mean and std.dev: (182.92, 241.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1326)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (233, 616, 1611)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4367)
[M::mem_pestat] mean and std.dev: (845.03, 954.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5745)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 648132 reads in 924.732 CPU sec, 137.351 real sec
[M::process] 0 single-end sequences; 648886 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 169708, 169, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (221, 536, 1056)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2726)
[M::mem_pestat] mean and std.dev: (513.70, 448.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3561)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (142, 268, 438)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1030)
[M::mem_pestat] mean and std.dev: (304.59, 194.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1326)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 58, 559)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1621)
[M::mem_pestat] mean and std.dev: (219.58, 356.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2152)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 729, 1509)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3989)
[M::mem_pestat] mean and std.dev: (646.95, 492.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5229)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 648886 reads in 834.920 CPU sec, 144.170 real sec
[M::process] read 650062 sequences (80000123 bp)...
[M::process] 0 single-end sequences; 650062 paired-end sequences
[M::process] read 652366 sequences (80000212 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (46, 169466, 175, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (313, 614, 3263)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9163)
[M::mem_pestat] mean and std.dev: (1702.98, 2112.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12113)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (143, 271, 444)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1046)
[M::mem_pestat] mean and std.dev: (307.97, 196.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1347)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 61, 459)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1321)
[M::mem_pestat] mean and std.dev: (186.25, 263.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1752)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (299, 904, 3611)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10235)
[M::mem_pestat] mean and std.dev: (2052.79, 2308.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13547)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 650062 reads in 882.756 CPU sec, 143.829 real sec
[M::process] 0 single-end sequences; 652366 paired-end sequences
[M::process] read 655132 sequences (80000122 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 170118, 188, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 716, 1318)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3590)
[M::mem_pestat] mean and std.dev: (600.29, 622.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4726)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (147, 273, 437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1017)
[M::mem_pestat] mean and std.dev: (305.93, 190.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1307)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 94, 613)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1783)
[M::mem_pestat] mean and std.dev: (268.92, 387.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 661, 2047)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5679)
[M::mem_pestat] mean and std.dev: (1088.84, 1371.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7495)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 652366 reads in 865.180 CPU sec, 152.929 real sec
[M::process] 0 single-end sequences; 655132 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 169530, 198, 36)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (232, 506, 2584)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7288)
[M::mem_pestat] mean and std.dev: (1080.22, 1533.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9640)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (147, 272, 433)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1005)
[M::mem_pestat] mean and std.dev: (303.67, 187.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1291)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 66, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 976)
[M::mem_pestat] mean and std.dev: (138.90, 204.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1291)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (401, 885, 4060)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11378)
[M::mem_pestat] mean and std.dev: (1994.86, 2028.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15037)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 650944 sequences (80000046 bp)...
[M::mem_process_seqs] Processed 655132 reads in 830.296 CPU sec, 156.807 real sec
[M::process] 0 single-end sequences; 650944 paired-end sequences
[M::process] read 653166 sequences (80000144 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (23, 169041, 191, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (317, 857, 3495)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9851)
[M::mem_pestat] mean and std.dev: (2144.43, 2646.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13029)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (150, 280, 446)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1038)
[M::mem_pestat] mean and std.dev: (311.84, 192.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1334)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 60, 476)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1368)
[M::mem_pestat] mean and std.dev: (185.05, 276.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1814)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (362, 618, 889)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1943)
[M::mem_pestat] mean and std.dev: (461.48, 211.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2470)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 650944 reads in 828.456 CPU sec, 190.771 real sec
[M::process] 0 single-end sequences; 653166 paired-end sequences
[M::process] read 653946 sequences (80000026 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 169862, 176, 40)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (468, 860, 3489)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9531)
[M::mem_pestat] mean and std.dev: (2076.26, 2631.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12601)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 268, 429)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 995)
[M::mem_pestat] mean and std.dev: (300.57, 185.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1278)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (21, 56, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 840)
[M::mem_pestat] mean and std.dev: (124.69, 173.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1113)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 450, 2960)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8470)
[M::mem_pestat] mean and std.dev: (1427.74, 1854.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11225)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 653166 reads in 895.540 CPU sec, 166.004 real sec
[M::process] 0 single-end sequences; 653946 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (42, 169419, 199, 55)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (226, 641, 1935)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5353)
[M::mem_pestat] mean and std.dev: (944.32, 986.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7062)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 270, 431)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1001)
[M::mem_pestat] mean and std.dev: (301.99, 186.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1286)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 67, 504)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1452)
[M::mem_pestat] mean and std.dev: (175.58, 257.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1926)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 413, 1145)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2943)
[M::mem_pestat] mean and std.dev: (388.36, 245.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3842)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
Finished in 1789.21 s (403 us/read; 0.15 M reads/minute).

=== Summary ===

Total read pairs processed:          4,444,346
  Read 1 with adapter:                 910,006 (20.5%)
  Read 2 with adapter:                 866,753 (19.5%)
Pairs that were too short:             565,492 (12.7%)
Pairs written (passing filters):     3,878,854 (87.3%)

Total basepairs processed: 1,333,303,800 bp
  Read 1:   666,651,900 bp
  Read 2:   666,651,900 bp
Quality-trimmed:             301,779,990 bp (22.6%)
  Read 1:   150,889,995 bp
  Read 2:   150,889,995 bp
Total written (filtered):    953,190,020 bp (71.5%)
  Read 1:   486,703,632 bp
  Read 2:   466,486,388 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 910006 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.4%
  C: 41.3%
  G: 31.3%
  T: 17.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	73750	69442.9	0	73750
4	31336	17360.7	0	31336
5	13416	4340.2	0	13416
6	10722	1085.0	0	10722
7	9970	271.3	0	9970
8	9098	67.8	0	9098
9	8905	17.0	0	8762 143
10	8463	4.2	1	7882 581
11	9300	1.1	1	8868 432
12	9682	0.3	1	9183 499
13	9136	0.3	1	8709 427
14	9857	0.3	1	9225 632
15	10926	0.3	1	10235 691
16	10703	0.3	1	9829 874
17	10741	0.3	1	10278 463
18	9779	0.3	1	9254 525
19	10860	0.3	1	10413 447
20	11249	0.3	1	10710 539
21	11467	0.3	1	10923 544
22	12468	0.3	1	11973 495
23	7837	0.3	1	7609 228
24	7654	0.3	1	7449 205
25	10197	0.3	1	9811 386
26	7904	0.3	1	7718 186
27	10891	0.3	1	10346 545
28	8251	0.3	1	8013 238
29	11652	0.3	1	11139 513
30	12722	0.3	1	12296 426
31	9079	0.3	1	8757 322
32	9993	0.3	1	9706 287
33	10597	0.3	1	10215 382
34	10860	0.3	1	10539 321
35	10066	0.3	1	9818 248
36	9917	0.3	1	9690 227
37	8393	0.3	1	8192 201
38	10070	0.3	1	9765 305
39	8380	0.3	1	8187 193
40	8542	0.3	1	8311 231
41	10150	0.3	1	9830 320
42	10931	0.3	1	10653 278
43	10200	0.3	1	9957 243
44	8529	0.3	1	8282 247
45	18662	0.3	1	18147 515
46	4015	0.3	1	3895 120
47	7361	0.3	1	7148 213
48	7380	0.3	1	7220 160
49	9727	0.3	1	9494 233
50	8448	0.3	1	8307 141
51	9164	0.3	1	8943 221
52	7799	0.3	1	7653 146
53	9533	0.3	1	9330 203
54	8338	0.3	1	8172 166
55	9521	0.3	1	9358 163
56	7189	0.3	1	7063 126
57	9723	0.3	1	9496 227
58	8275	0.3	1	8090 185
59	9519	0.3	1	9276 243
60	8040	0.3	1	7901 139
61	9506	0.3	1	9279 227
62	7836	0.3	1	7657 179
63	11858	0.3	1	11625 233
64	8718	0.3	1	8580 138
65	8606	0.3	1	8454 152
66	11054	0.3	1	10889 165
67	9466	0.3	1	9258 208
68	8092	0.3	1	7912 180
69	12075	0.3	1	11707 368
70	12706	0.3	1	12387 319
71	18149	0.3	1	17533 616
72	119577	0.3	1	118623 954
73	9260	0.3	1	9012 248
74	1249	0.3	1	1149 100
75	595	0.3	1	516 79
76	415	0.3	1	368 47
77	507	0.3	1	443 64
78	446	0.3	1	400 46
79	631	0.3	1	556 75
80	615	0.3	1	558 57
81	698	0.3	1	631 67
82	708	0.3	1	642 66
83	729	0.3	1	654 75
84	491	0.3	1	451 40
85	504	0.3	1	436 68
86	390	0.3	1	342 48
87	406	0.3	1	341 65
88	298	0.3	1	262 36
89	401	0.3	1	344 57
90	300	0.3	1	246 54
91	393	0.3	1	330 63
92	280	0.3	1	243 37
93	372	0.3	1	315 57
94	239	0.3	1	198 41
95	368	0.3	1	307 61
96	244	0.3	1	196 48
97	315	0.3	1	252 63
98	222	0.3	1	177 45
99	314	0.3	1	254 60
100	193	0.3	1	156 37
101	258	0.3	1	213 45
102	161	0.3	1	127 34
103	238	0.3	1	181 57
104	133	0.3	1	96 37
105	194	0.3	1	164 30
106	129	0.3	1	87 42
107	166	0.3	1	126 40
108	123	0.3	1	90 33
109	166	0.3	1	120 46
110	119	0.3	1	84 35
111	154	0.3	1	116 38
112	91	0.3	1	65 26
113	131	0.3	1	92 39
114	76	0.3	1	41 35
115	95	0.3	1	62 33
116	62	0.3	1	30 32
117	96	0.3	1	69 27
118	57	0.3	1	28 29
119	107	0.3	1	69 38
120	54	0.3	1	20 34
121	83	0.3	1	53 30
122	48	0.3	1	15 33
123	72	0.3	1	43 29
124	48	0.3	1	11 37
125	64	0.3	1	35 29
126	33	0.3	1	5 28
127	65	0.3	1	30 35
128	44	0.3	1	7 37
129	44	0.3	1	16 28
130	40	0.3	1	4 36
131	42	0.3	1	15 27
132	28	0.3	1	1 27
133	37	0.3	1	11 26
134	34	0.3	1	2 32
135	18	0.3	1	4 14
136	21	0.3	1	2 19
137	34	0.3	1	4 30
138	29	0.3	1	1 28
139	23	0.3	1	6 17
140	26	0.3	1	0 26

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 866753 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.4%
  C: 41.9%
  G: 30.5%
  T: 17.2%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	67555	69442.9	0	67555
4	27589	17360.7	0	27589
5	13012	4340.2	0	13012
6	9959	1085.0	0	9959
7	9191	271.3	0	9191
8	8288	67.8	0	8288
9	8549	17.0	0	8423 126
10	7757	4.2	1	7314 443
11	8779	1.1	1	8432 347
12	9207	0.3	1	8780 427
13	8535	0.3	1	8174 361
14	10159	0.3	1	9654 505
15	10490	0.3	1	9982 508
16	10115	0.3	1	9500 615
17	11787	0.3	1	11231 556
18	9850	0.3	1	9511 339
19	11677	0.3	1	11191 486
20	10128	0.3	1	9837 291
21	7891	0.3	1	7670 221
22	10126	0.3	1	9801 325
23	7638	0.3	1	7438 200
24	8941	0.3	1	8677 264
25	10109	0.3	1	9836 273
26	9450	0.3	1	9223 227
27	9299	0.3	1	9078 221
28	9107	0.3	1	8881 226
29	11097	0.3	1	10865 232
30	7522	0.3	1	7317 205
31	8834	0.3	1	8638 196
32	10056	0.3	1	9873 183
33	8020	0.3	1	7847 173
34	8099	0.3	1	7912 187
35	7069	0.3	1	6929 140
36	7659	0.3	1	7462 197
37	9311	0.3	1	9048 263
38	8353	0.3	1	8051 302
39	11718	0.3	1	11225 493
40	7229	0.3	1	6967 262
41	9719	0.3	1	9402 317
42	12153	0.3	1	11844 309
43	6626	0.3	1	6457 169
44	8335	0.3	1	8160 175
45	6930	0.3	1	6767 163
46	8054	0.3	1	7895 159
47	8439	0.3	1	8274 165
48	8338	0.3	1	8135 203
49	8309	0.3	1	8112 197
50	8843	0.3	1	8627 216
51	8461	0.3	1	8280 181
52	9327	0.3	1	9127 200
53	9009	0.3	1	8839 170
54	11255	0.3	1	11043 212
55	7439	0.3	1	7322 117
56	8678	0.3	1	8526 152
57	12468	0.3	1	12274 194
58	5899	0.3	1	5811 88
59	7471	0.3	1	7349 122
60	7834	0.3	1	7721 113
61	8000	0.3	1	7853 147
62	7316	0.3	1	7178 138
63	13114	0.3	1	12925 189
64	5534	0.3	1	5437 97
65	7256	0.3	1	7125 131
66	5219	0.3	1	5110 109
67	7860	0.3	1	7725 135
68	7452	0.3	1	7331 121
69	8240	0.3	1	8114 126
70	6194	0.3	1	6103 91
71	7919	0.3	1	7764 155
72	7509	0.3	1	7339 170
73	9414	0.3	1	9053 361
74	9198	0.3	1	8928 270
75	15921	0.3	1	15358 563
76	114535	0.3	1	113702 833
77	8963	0.3	1	8710 253
78	1208	0.3	1	1111 97
79	655	0.3	1	600 55
80	508	0.3	1	463 45
81	510	0.3	1	465 45
82	401	0.3	1	363 38
83	595	0.3	1	543 52
84	817	0.3	1	782 35
85	885	0.3	1	845 40
86	1077	0.3	1	1049 28
87	993	0.3	1	945 48
88	707	0.3	1	676 31
89	459	0.3	1	415 44
90	298	0.3	1	250 48
91	239	0.3	1	199 40
92	208	0.3	1	167 41
93	226	0.3	1	196 30
94	173	0.3	1	122 51
95	220	0.3	1	172 48
96	141	0.3	1	105 36
97	173	0.3	1	133 40
98	131	0.3	1	98 33
99	173	0.3	1	138 35
100	122	0.3	1	94 28
101	167	0.3	1	128 39
102	111	0.3	1	72 39
103	135	0.3	1	101 34
104	118	0.3	1	72 46
105	141	0.3	1	96 45
106	96	0.3	1	51 45
107	113	0.3	1	75 38
108	70	0.3	1	37 33
109	110	0.3	1	75 35
110	66	0.3	1	32 34
111	85	0.3	1	53 32
112	61	0.3	1	37 24
113	81	0.3	1	51 30
114	47	0.3	1	23 24
115	90	0.3	1	44 46
116	51	0.3	1	20 31
117	74	0.3	1	34 40
118	47	0.3	1	16 31
119	58	0.3	1	27 31
120	52	0.3	1	14 38
121	61	0.3	1	25 36
122	53	0.3	1	24 29
123	67	0.3	1	35 32
124	31	0.3	1	5 26
125	65	0.3	1	30 35
126	31	0.3	1	10 21
127	45	0.3	1	16 29
128	36	0.3	1	10 26
129	34	0.3	1	6 28
130	20	0.3	1	3 17
131	36	0.3	1	14 22
132	21	0.3	1	2 19
133	23	0.3	1	7 16
134	20	0.3	1	1 19
135	23	0.3	1	8 15
136	22	0.3	1	1 21
137	27	0.3	1	5 22
138	23	0.3	1	0 23
139	18	0.3	1	2 16
140	19	0.3	1	1 18

[M::process] read 596774 sequences (73188870 bp)...
[M::mem_process_seqs] Processed 653946 reads in 958.760 CPU sec, 149.784 real sec
[M::process] 0 single-end sequences; 596774 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 154744, 157, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (209, 506, 2412)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6818)
[M::mem_pestat] mean and std.dev: (1293.53, 1703.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9021)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (149, 276, 441)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1025)
[M::mem_pestat] mean and std.dev: (308.11, 190.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1317)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 55, 409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1171)
[M::mem_pestat] mean and std.dev: (146.94, 216.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1552)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (385, 863, 3756)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10498)
[M::mem_pestat] mean and std.dev: (2316.78, 2730.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13869)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 596774 reads in 845.512 CPU sec, 124.680 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0674\tPL:Illumina\tPU:x\tLB:pherring\tSM:0674.WA17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1946.364 sec; CPU: 10763.608 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
