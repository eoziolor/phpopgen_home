==========================================
SLURM_JOB_ID = 5436049
SLURM_NODELIST = c9-75
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1062
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 695326 sequences (80000101 bp)...
[M::process] 0 single-end sequences; 695326 paired-end sequences
[M::process] read 693896 sequences (80000178 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (48, 170727, 122, 50)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (92, 162, 262)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 602)
[M::mem_pestat] mean and std.dev: (171.80, 116.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 772)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (98, 154, 238)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 518)
[M::mem_pestat] mean and std.dev: (171.49, 100.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 658)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 49, 114)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 284)
[M::mem_pestat] mean and std.dev: (52.78, 40.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 369)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (126, 209, 458)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1122)
[M::mem_pestat] mean and std.dev: (252.00, 175.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1454)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 695326 reads in 1360.072 CPU sec, 198.832 real sec
[M::process] 0 single-end sequences; 693896 paired-end sequences
[M::process] read 694774 sequences (80000231 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (59, 171040, 149, 47)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 181, 321)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 723)
[M::mem_pestat] mean and std.dev: (216.98, 141.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 924)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (97, 154, 240)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 526)
[M::mem_pestat] mean and std.dev: (172.58, 103.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 669)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 48, 181)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 489)
[M::mem_pestat] mean and std.dev: (85.60, 105.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 643)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (120, 193, 661)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1743)
[M::mem_pestat] mean and std.dev: (258.27, 244.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2284)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 693896 reads in 1320.388 CPU sec, 181.054 real sec
[M::process] 0 single-end sequences; 694774 paired-end sequences
[M::process] read 706590 sequences (80000093 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (50, 170307, 139, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (108, 201, 427)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1065)
[M::mem_pestat] mean and std.dev: (246.49, 211.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1384)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (97, 153, 236)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 514)
[M::mem_pestat] mean and std.dev: (170.78, 100.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 653)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (35, 66, 333)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 929)
[M::mem_pestat] mean and std.dev: (134.34, 173.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1227)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 169, 601)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1577)
[M::mem_pestat] mean and std.dev: (248.83, 226.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2065)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 694774 reads in 1312.908 CPU sec, 184.408 real sec
[M::process] 0 single-end sequences; 706590 paired-end sequences
[M::process] read 709334 sequences (80000178 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (58, 174018, 130, 56)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (105, 267, 501)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1293)
[M::mem_pestat] mean and std.dev: (278.65, 230.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1689)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (96, 151, 231)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 501)
[M::mem_pestat] mean and std.dev: (167.94, 97.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 636)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 55, 183)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 495)
[M::mem_pestat] mean and std.dev: (85.04, 99.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 651)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 202, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 894)
[M::mem_pestat] mean and std.dev: (224.92, 167.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1155)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 706590 reads in 1336.812 CPU sec, 186.055 real sec
[M::process] 0 single-end sequences; 709334 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (54, 173578, 135, 56)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (124, 189, 482)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1198)
[M::mem_pestat] mean and std.dev: (265.26, 242.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1556)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (96, 151, 230)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 498)
[M::mem_pestat] mean and std.dev: (167.28, 97.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 632)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 52, 415)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1187)
[M::mem_pestat] mean and std.dev: (148.39, 235.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1573)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (124, 193, 981)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2695)
[M::mem_pestat] mean and std.dev: (317.48, 428.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3552)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 709334 reads in 1333.904 CPU sec, 215.214 real sec
[M::process] read 702274 sequences (80000150 bp)...
[M::process] 0 single-end sequences; 702274 paired-end sequences
Finished in 1404.06 s (543 us/read; 0.11 M reads/minute).

=== Summary ===

Total read pairs processed:          2,586,702
  Read 1 with adapter:                 854,816 (33.0%)
  Read 2 with adapter:                 800,700 (31.0%)
Pairs that were too short:             382,190 (14.8%)
Pairs written (passing filters):     2,204,512 (85.2%)

Total basepairs processed:   776,010,600 bp
  Read 1:   388,005,300 bp
  Read 2:   388,005,300 bp
Quality-trimmed:             214,484,810 bp (27.6%)
  Read 1:   107,242,405 bp
  Read 2:   107,242,405 bp
Total written (filtered):    503,568,614 bp (64.9%)
  Read 1:   258,035,714 bp
  Read 2:   245,532,900 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 854816 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.7%
  C: 41.4%
  G: 29.4%
  T: 18.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	38347	40417.2	0	38347
4	18737	10104.3	0	18737
5	10658	2526.1	0	10658
6	9015	631.5	0	9015
7	9478	157.9	0	9478
8	8505	39.5	0	8505
9	8592	9.9	0	8528 64
10	8560	2.5	1	8170 390
11	9335	0.6	1	8928 407
12	9675	0.2	1	9204 471
13	9552	0.2	1	9162 390
14	9722	0.2	1	9216 506
15	11160	0.2	1	10503 657
16	11380	0.2	1	10567 813
17	10648	0.2	1	10149 499
18	9924	0.2	1	9435 489
19	10935	0.2	1	10484 451
20	10900	0.2	1	10419 481
21	12050	0.2	1	11488 562
22	12247	0.2	1	11790 457
23	8597	0.2	1	8294 303
24	8049	0.2	1	7805 244
25	10357	0.2	1	9955 402
26	8486	0.2	1	8224 262
27	10791	0.2	1	10314 477
28	8841	0.2	1	8554 287
29	12176	0.2	1	11620 556
30	13000	0.2	1	12566 434
31	9480	0.2	1	9145 335
32	10512	0.2	1	10179 333
33	10231	0.2	1	9820 411
34	11603	0.2	1	11205 398
35	10657	0.2	1	10344 313
36	11481	0.2	1	11235 246
37	8718	0.2	1	8498 220
38	11268	0.2	1	10930 338
39	8199	0.2	1	8016 183
40	8888	0.2	1	8652 236
41	10884	0.2	1	10549 335
42	10772	0.2	1	10506 266
43	10889	0.2	1	10656 233
44	8502	0.2	1	8310 192
45	18174	0.2	1	17708 466
46	4632	0.2	1	4517 115
47	7343	0.2	1	7143 200
48	7751	0.2	1	7583 168
49	9793	0.2	1	9568 225
50	9088	0.2	1	8926 162
51	8880	0.2	1	8697 183
52	7591	0.2	1	7461 130
53	9312	0.2	1	9122 190
54	8762	0.2	1	8613 149
55	9864	0.2	1	9703 161
56	6968	0.2	1	6833 135
57	9622	0.2	1	9434 188
58	8541	0.2	1	8397 144
59	8991	0.2	1	8813 178
60	8201	0.2	1	8056 145
61	9168	0.2	1	8995 173
62	7822	0.2	1	7705 117
63	12222	0.2	1	12030 192
64	9522	0.2	1	9415 107
65	8564	0.2	1	8421 143
66	12021	0.2	1	11880 141
67	9901	0.2	1	9744 157
68	8283	0.2	1	8140 143
69	12390	0.2	1	12099 291
70	13571	0.2	1	13351 220
71	18149	0.2	1	17690 459
72	108990	0.2	1	108362 628
73	6992	0.2	1	6811 181
74	912	0.2	1	867 45
75	432	0.2	1	393 39
76	312	0.2	1	292 20
77	401	0.2	1	364 37
78	368	0.2	1	343 25
79	498	0.2	1	439 59
80	424	0.2	1	395 29
81	603	0.2	1	555 48
82	540	0.2	1	508 32
83	531	0.2	1	480 51
84	393	0.2	1	364 29
85	413	0.2	1	379 34
86	281	0.2	1	253 28
87	337	0.2	1	298 39
88	307	0.2	1	276 31
89	358	0.2	1	316 42
90	230	0.2	1	202 28
91	336	0.2	1	286 50
92	220	0.2	1	195 25
93	298	0.2	1	260 38
94	200	0.2	1	169 31
95	265	0.2	1	231 34
96	190	0.2	1	172 18
97	243	0.2	1	215 28
98	155	0.2	1	142 13
99	237	0.2	1	200 37
100	173	0.2	1	147 26
101	213	0.2	1	181 32
102	155	0.2	1	128 27
103	174	0.2	1	151 23
104	110	0.2	1	100 10
105	154	0.2	1	132 22
106	116	0.2	1	92 24
107	141	0.2	1	123 18
108	88	0.2	1	68 20
109	132	0.2	1	117 15
110	69	0.2	1	51 18
111	103	0.2	1	82 21
112	65	0.2	1	49 16
113	81	0.2	1	63 18
114	54	0.2	1	35 19
115	64	0.2	1	54 10
116	37	0.2	1	21 16
117	58	0.2	1	34 24
118	29	0.2	1	21 8
119	42	0.2	1	30 12
120	25	0.2	1	11 14
121	38	0.2	1	24 14
122	18	0.2	1	6 12
123	26	0.2	1	19 7
124	16	0.2	1	0 16
125	30	0.2	1	11 19
126	13	0.2	1	3 10
127	14	0.2	1	9 5
128	12	0.2	1	4 8
129	22	0.2	1	6 16
130	19	0.2	1	1 18
131	20	0.2	1	4 16
132	13	0.2	1	1 12
133	12	0.2	1	4 8
134	14	0.2	1	0 14
135	12	0.2	1	3 9
136	16	0.2	1	1 15
137	13	0.2	1	1 12
138	9	0.2	1	1 8
139	8	0.2	1	0 8
140	15	0.2	1	0 15

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 800700 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.6%
  C: 41.4%
  G: 29.1%
  T: 18.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	34214	40417.2	0	34214
4	16189	10104.3	0	16189
5	9892	2526.1	0	9892
6	7821	631.5	0	7821
7	8056	157.9	0	8056
8	7458	39.5	0	7458
9	8064	9.9	0	7994 70
10	7439	2.5	1	7068 371
11	8939	0.6	1	8447 492
12	8928	0.2	1	8384 544
13	8616	0.2	1	8197 419
14	9090	0.2	1	8530 560
15	10557	0.2	1	9944 613
16	10668	0.2	1	10005 663
17	9945	0.2	1	9434 511
18	9743	0.2	1	9320 423
19	11010	0.2	1	10478 532
20	9808	0.2	1	9482 326
21	8022	0.2	1	7722 300
22	9960	0.2	1	9593 367
23	7529	0.2	1	7302 227
24	9736	0.2	1	9350 386
25	9891	0.2	1	9516 375
26	8927	0.2	1	8632 295
27	9911	0.2	1	9568 343
28	9847	0.2	1	9502 345
29	10786	0.2	1	10417 369
30	7279	0.2	1	7065 214
31	9273	0.2	1	8970 303
32	10352	0.2	1	10070 282
33	9455	0.2	1	9087 368
34	7205	0.2	1	7026 179
35	8984	0.2	1	8726 258
36	7157	0.2	1	6984 173
37	7765	0.2	1	7598 167
38	8619	0.2	1	8438 181
39	7814	0.2	1	7639 175
40	9874	0.2	1	9647 227
41	6581	0.2	1	6418 163
42	7754	0.2	1	7539 215
43	8242	0.2	1	7992 250
44	8609	0.2	1	8374 235
45	9357	0.2	1	9057 300
46	10035	0.2	1	9737 298
47	8951	0.2	1	8750 201
48	8651	0.2	1	8456 195
49	8558	0.2	1	8350 208
50	9181	0.2	1	8970 211
51	8502	0.2	1	8272 230
52	10170	0.2	1	9881 289
53	9294	0.2	1	9074 220
54	11042	0.2	1	10780 262
55	7432	0.2	1	7288 144
56	8961	0.2	1	8774 187
57	11512	0.2	1	11314 198
58	6294	0.2	1	6177 117
59	7088	0.2	1	6955 133
60	7612	0.2	1	7491 121
61	7910	0.2	1	7773 137
62	7591	0.2	1	7447 144
63	13015	0.2	1	12833 182
64	6215	0.2	1	6111 104
65	7224	0.2	1	7115 109
66	5000	0.2	1	4935 65
67	7890	0.2	1	7793 97
68	7247	0.2	1	7137 110
69	7726	0.2	1	7625 101
70	6510	0.2	1	6442 68
71	8138	0.2	1	7989 149
72	7463	0.2	1	7323 140
73	9344	0.2	1	9062 282
74	10095	0.2	1	9855 240
75	13812	0.2	1	13328 484
76	111754	0.2	1	110799 955
77	5214	0.2	1	5029 185
78	712	0.2	1	661 51
79	451	0.2	1	418 33
80	367	0.2	1	345 22
81	429	0.2	1	400 29
82	376	0.2	1	349 27
83	476	0.2	1	441 35
84	803	0.2	1	772 31
85	802	0.2	1	760 42
86	978	0.2	1	947 31
87	804	0.2	1	774 30
88	540	0.2	1	520 20
89	350	0.2	1	329 21
90	199	0.2	1	181 18
91	207	0.2	1	180 27
92	129	0.2	1	115 14
93	161	0.2	1	135 26
94	116	0.2	1	101 15
95	156	0.2	1	124 32
96	97	0.2	1	87 10
97	116	0.2	1	91 25
98	95	0.2	1	77 18
99	125	0.2	1	104 21
100	95	0.2	1	80 15
101	98	0.2	1	79 19
102	87	0.2	1	69 18
103	91	0.2	1	76 15
104	65	0.2	1	46 19
105	91	0.2	1	66 25
106	66	0.2	1	43 23
107	83	0.2	1	64 19
108	49	0.2	1	38 11
109	63	0.2	1	48 15
110	42	0.2	1	33 9
111	57	0.2	1	39 18
112	26	0.2	1	14 12
113	51	0.2	1	38 13
114	30	0.2	1	19 11
115	33	0.2	1	21 12
116	19	0.2	1	8 11
117	26	0.2	1	15 11
118	19	0.2	1	6 13
119	27	0.2	1	16 11
120	21	0.2	1	8 13
121	20	0.2	1	10 10
122	13	0.2	1	3 10
123	22	0.2	1	6 16
124	11	0.2	1	3 8
125	28	0.2	1	11 17
126	13	0.2	1	1 12
127	11	0.2	1	3 8
128	15	0.2	1	2 13
129	16	0.2	1	4 12
130	13	0.2	1	0 13
131	21	0.2	1	5 16
132	15	0.2	1	0 15
133	10	0.2	1	3 7
134	8	0.2	1	0 8
135	11	0.2	1	2 9
136	13	0.2	1	0 13
137	11	0.2	1	1 10
138	5	0.2	1	0 5
139	7	0.2	1	1 6
140	12	0.2	1	1 11

[M::process] read 206830 sequences (23567683 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 172475, 183, 52)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (124, 203, 271)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 565)
[M::mem_pestat] mean and std.dev: (194.20, 98.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (96, 151, 231)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 501)
[M::mem_pestat] mean and std.dev: (168.17, 97.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 636)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 53, 232)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (106.04, 137.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 844)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (79, 169, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (158.00, 107.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 702274 reads in 1347.988 CPU sec, 183.154 real sec
[M::process] 0 single-end sequences; 206830 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 50671, 39, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (96, 153, 236)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 516)
[M::mem_pestat] mean and std.dev: (170.45, 100.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 656)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 39, 119)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 293)
[M::mem_pestat] mean and std.dev: (61.20, 59.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 380)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 206830 reads in 386.828 CPU sec, 52.106 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1062\tPL:Illumina\tPU:x\tLB:pherring\tSM:1062.TB96 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1623.804 sec; CPU: 8408.812 sec
[bam_sort_core] merging from 1 files and 1 in-memory blocks...
