==========================================
SLURM_JOB_ID = 5436032
SLURM_NODELIST = c9-89
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1045
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 653676 sequences (80000182 bp)...
[M::process] 0 single-end sequences; 653676 paired-end sequences
[M::process] read 661800 sequences (80000030 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (22, 173209, 193, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (172, 290, 3315)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9601)
[M::mem_pestat] mean and std.dev: (1508.18, 2047.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12744)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (140, 244, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 815)
[M::mem_pestat] mean and std.dev: (261.85, 148.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1040)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 62, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 860)
[M::mem_pestat] mean and std.dev: (131.83, 187.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1137)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 478, 4137)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11841)
[M::mem_pestat] mean and std.dev: (2346.75, 3069.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15693)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 653676 reads in 1032.240 CPU sec, 144.210 real sec
[M::process] 0 single-end sequences; 661800 paired-end sequences
[M::process] read 658452 sequences (80000182 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 173701, 219, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (318, 596, 2193)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5943)
[M::mem_pestat] mean and std.dev: (1062.55, 1170.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7818)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 234, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 791)
[M::mem_pestat] mean and std.dev: (252.33, 143.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1010)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 52, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 581)
[M::mem_pestat] mean and std.dev: (93.02, 111.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 766)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (181, 381, 1854)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5200)
[M::mem_pestat] mean and std.dev: (587.58, 736.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6873)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 661800 reads in 1057.968 CPU sec, 141.994 real sec
[M::process] 0 single-end sequences; 658452 paired-end sequences
[M::process] read 651600 sequences (80000145 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 173147, 208, 37)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (151, 355, 1917)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5449)
[M::mem_pestat] mean and std.dev: (836.97, 1106.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7215)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (136, 239, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)
[M::mem_pestat] mean and std.dev: (257.74, 147.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1036)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 43, 167)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 451)
[M::mem_pestat] mean and std.dev: (70.13, 87.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 593)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (306, 551, 2700)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7488)
[M::mem_pestat] mean and std.dev: (1487.24, 1788.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9882)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 658452 reads in 1053.172 CPU sec, 143.408 real sec
[M::process] 0 single-end sequences; 651600 paired-end sequences
[M::process] read 658806 sequences (80000163 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 172447, 212, 24)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (308, 509, 1908)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5108)
[M::mem_pestat] mean and std.dev: (635.96, 635.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6708)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (141, 247, 368)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 822)
[M::mem_pestat] mean and std.dev: (264.11, 150.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1049)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 49, 369)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1063)
[M::mem_pestat] mean and std.dev: (137.55, 210.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1410)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (250, 573, 878)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2134)
[M::mem_pestat] mean and std.dev: (455.65, 309.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2762)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 651600 reads in 1040.652 CPU sec, 139.961 real sec
[M::process] 0 single-end sequences; 658806 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 173758, 198, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (237, 440, 714)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1668)
[M::mem_pestat] mean and std.dev: (395.12, 230.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2145)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 236, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 798)
[M::mem_pestat] mean and std.dev: (254.51, 145.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 46, 197)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 547)
[M::mem_pestat] mean and std.dev: (74.55, 93.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 722)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 589, 1897)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5213)
[M::mem_pestat] mean and std.dev: (1024.54, 1195.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6871)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 658806 reads in 1056.996 CPU sec, 138.872 real sec
[M::process] read 655538 sequences (80000203 bp)...
[M::process] 0 single-end sequences; 655538 paired-end sequences
[M::process] read 678356 sequences (80000134 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 172863, 220, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 404, 1134)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3052)
[M::mem_pestat] mean and std.dev: (612.54, 701.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4011)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 241, 362)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 812)
[M::mem_pestat] mean and std.dev: (258.90, 148.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 49, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 628)
[M::mem_pestat] mean and std.dev: (93.92, 127.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 829)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (159, 320, 2743)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7911)
[M::mem_pestat] mean and std.dev: (1260.96, 2105.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10495)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 655538 reads in 1048.708 CPU sec, 143.069 real sec
[M::process] 0 single-end sequences; 678356 paired-end sequences
[M::process] read 666920 sequences (80000232 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 176798, 218, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (225, 405, 822)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2016)
[M::mem_pestat] mean and std.dev: (477.21, 397.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2613)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 227, 344)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 770)
[M::mem_pestat] mean and std.dev: (246.05, 139.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 983)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 50, 199)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 553)
[M::mem_pestat] mean and std.dev: (79.42, 108.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 730)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 327, 1661)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4705)
[M::mem_pestat] mean and std.dev: (722.77, 1060.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6227)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 678356 reads in 1072.356 CPU sec, 144.629 real sec
[M::process] 0 single-end sequences; 666920 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 174805, 227, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 412, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3658)
[M::mem_pestat] mean and std.dev: (611.24, 679.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4812)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 232, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 782)
[M::mem_pestat] mean and std.dev: (250.22, 141.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 998)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 52, 234)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (95.59, 137.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 855)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (309, 498, 3727)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10563)
[M::mem_pestat] mean and std.dev: (1879.77, 2562.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13981)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 666920 reads in 1063.404 CPU sec, 139.604 real sec
[M::process] read 675610 sequences (80000007 bp)...
[M::process] 0 single-end sequences; 675610 paired-end sequences
[M::process] read 668992 sequences (80000176 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (42, 176595, 205, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 665, 3089)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8917)
[M::mem_pestat] mean and std.dev: (1836.78, 2457.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11831)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 232, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 784)
[M::mem_pestat] mean and std.dev: (250.61, 143.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1001)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 50, 197)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 537)
[M::mem_pestat] mean and std.dev: (82.11, 100.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (258, 682, 4605)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13299)
[M::mem_pestat] mean and std.dev: (2431.59, 2965.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17646)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 675610 reads in 1055.192 CPU sec, 144.483 real sec
[M::process] 0 single-end sequences; 668992 paired-end sequences
[M::process] read 663976 sequences (80000209 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 175512, 205, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (212, 483, 3096)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8864)
[M::mem_pestat] mean and std.dev: (1616.32, 2119.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11748)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 232, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 784)
[M::mem_pestat] mean and std.dev: (250.13, 141.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1001)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 58, 228)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (104.53, 128.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (216, 570, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6435)
[M::mem_pestat] mean and std.dev: (1214.00, 1467.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8508)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 668992 reads in 1063.192 CPU sec, 142.890 real sec
[M::process] 0 single-end sequences; 663976 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 175217, 193, 28)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 648, 4688)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13674)
[M::mem_pestat] mean and std.dev: (2136.20, 2606.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18167)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 234, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 794)
[M::mem_pestat] mean and std.dev: (252.47, 143.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1014)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 65, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)
[M::mem_pestat] mean and std.dev: (132.65, 167.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1060)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (193, 757, 2992)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8590)
[M::mem_pestat] mean and std.dev: (1635.71, 2040.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11389)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 663976 reads in 1054.928 CPU sec, 138.102 real sec
Finished in 2198.68 s (480 us/read; 0.12 M reads/minute).

=== Summary ===

Total read pairs processed:          4,578,297
  Read 1 with adapter:                 954,768 (20.9%)
  Read 2 with adapter:                 882,742 (19.3%)
Pairs that were too short:             807,772 (17.6%)
Pairs written (passing filters):     3,770,525 (82.4%)

Total basepairs processed: 1,373,489,100 bp
  Read 1:   686,744,550 bp
  Read 2:   686,744,550 bp
Quality-trimmed:             403,313,280 bp (29.4%)
  Read 1:   201,656,640 bp
  Read 2:   201,656,640 bp
Total written (filtered):    909,754,634 bp (66.2%)
  Read 1:   468,910,717 bp
  Read 2:   440,843,917 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 954768 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.6%
  C: 39.6%
  G: 30.1%
  T: 18.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	78116	71535.9	0	78116
4	32095	17884.0	0	32095
5	14523	4471.0	0	14523
6	10970	1117.7	0	10970
7	10833	279.4	0	10833
8	9415	69.9	0	9415
9	9212	17.5	0	9057 155
10	9118	4.4	1	8591 527
11	9822	1.1	1	9354 468
12	10159	0.3	1	9669 490
13	9982	0.3	1	9529 453
14	10238	0.3	1	9694 544
15	11370	0.3	1	10701 669
16	11719	0.3	1	10889 830
17	11696	0.3	1	11145 551
18	10182	0.3	1	9706 476
19	11712	0.3	1	11191 521
20	11569	0.3	1	10999 570
21	13120	0.3	1	12542 578
22	11285	0.3	1	10863 422
23	8741	0.3	1	8457 284
24	8200	0.3	1	7949 251
25	10335	0.3	1	9917 418
26	8667	0.3	1	8374 293
27	11014	0.3	1	10507 507
28	8700	0.3	1	8385 315
29	11735	0.3	1	11192 543
30	11206	0.3	1	10849 357
31	10008	0.3	1	9634 374
32	9822	0.3	1	9487 335
33	11275	0.3	1	10708 567
34	9812	0.3	1	9494 318
35	12687	0.3	1	12147 540
36	12949	0.3	1	12540 409
37	9447	0.3	1	9179 268
38	10168	0.3	1	9930 238
39	10854	0.3	1	10532 322
40	11379	0.3	1	11085 294
41	12335	0.3	1	11867 468
42	11797	0.3	1	11433 364
43	20997	0.3	1	20361 636
44	9233	0.3	1	9031 202
45	20627	0.3	1	20251 376
46	2952	0.3	1	2871 81
47	5673	0.3	1	5531 142
48	7028	0.3	1	6872 156
49	8824	0.3	1	8629 195
50	9067	0.3	1	8914 153
51	8783	0.3	1	8596 187
52	8003	0.3	1	7849 154
53	9363	0.3	1	9174 189
54	8956	0.3	1	8787 169
55	10321	0.3	1	10158 163
56	7337	0.3	1	7207 130
57	9943	0.3	1	9749 194
58	8830	0.3	1	8665 165
59	8929	0.3	1	8753 176
60	8506	0.3	1	8383 123
61	9295	0.3	1	9115 180
62	8311	0.3	1	8139 172
63	12959	0.3	1	12722 237
64	9446	0.3	1	9305 141
65	8487	0.3	1	8345 142
66	11573	0.3	1	11434 139
67	10125	0.3	1	9899 226
68	8788	0.3	1	8622 166
69	13165	0.3	1	12862 303
70	14041	0.3	1	13792 249
71	19989	0.3	1	19490 499
72	116302	0.3	1	115623 679
73	7187	0.3	1	7011 176
74	958	0.3	1	896 62
75	503	0.3	1	444 59
76	357	0.3	1	306 51
77	435	0.3	1	389 46
78	406	0.3	1	361 45
79	548	0.3	1	483 65
80	444	0.3	1	399 45
81	600	0.3	1	546 54
82	482	0.3	1	432 50
83	504	0.3	1	450 54
84	416	0.3	1	366 50
85	418	0.3	1	369 49
86	303	0.3	1	254 49
87	368	0.3	1	312 56
88	279	0.3	1	244 35
89	347	0.3	1	304 43
90	255	0.3	1	214 41
91	335	0.3	1	290 45
92	270	0.3	1	215 55
93	320	0.3	1	264 56
94	246	0.3	1	195 51
95	310	0.3	1	255 55
96	236	0.3	1	189 47
97	264	0.3	1	234 30
98	204	0.3	1	159 45
99	278	0.3	1	223 55
100	196	0.3	1	145 51
101	235	0.3	1	198 37
102	162	0.3	1	134 28
103	206	0.3	1	168 38
104	129	0.3	1	84 45
105	179	0.3	1	138 41
106	124	0.3	1	90 34
107	192	0.3	1	148 44
108	118	0.3	1	84 34
109	159	0.3	1	119 40
110	95	0.3	1	65 30
111	123	0.3	1	88 35
112	97	0.3	1	63 34
113	120	0.3	1	93 27
114	59	0.3	1	34 25
115	96	0.3	1	66 30
116	75	0.3	1	38 37
117	73	0.3	1	52 21
118	50	0.3	1	21 29
119	77	0.3	1	44 33
120	61	0.3	1	16 45
121	75	0.3	1	30 45
122	35	0.3	1	15 20
123	55	0.3	1	27 28
124	45	0.3	1	6 39
125	59	0.3	1	19 40
126	36	0.3	1	4 32
127	37	0.3	1	12 25
128	35	0.3	1	3 32
129	47	0.3	1	11 36
130	31	0.3	1	2 29
131	41	0.3	1	12 29
132	37	0.3	1	0 37
133	31	0.3	1	6 25
134	34	0.3	1	1 33
135	20	0.3	1	2 18
136	25	0.3	1	0 25
137	24	0.3	1	1 23
138	30	0.3	1	0 30
139	15	0.3	1	0 15
140	37	0.3	1	0 37

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 882742 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.4%
  C: 40.6%
  G: 29.0%
  T: 18.9%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	68531	71535.9	0	68531
4	26845	17884.0	0	26845
5	12905	4471.0	0	12905
6	9704	1117.7	0	9704
7	9142	279.4	0	9142
8	8270	69.9	0	8270
9	8340	17.5	0	8225 115
10	7958	4.4	1	7421 537
11	8823	1.1	1	8311 512
12	9334	0.3	1	8807 527
13	9320	0.3	1	8815 505
14	10353	0.3	1	9680 673
15	11541	0.3	1	10770 771
16	12084	0.3	1	11220 864
17	10405	0.3	1	9816 589
18	10178	0.3	1	9695 483
19	12001	0.3	1	11346 655
20	9745	0.3	1	9420 325
21	7906	0.3	1	7613 293
22	10434	0.3	1	10042 392
23	7636	0.3	1	7341 295
24	9469	0.3	1	9070 399
25	9849	0.3	1	9431 418
26	9123	0.3	1	8811 312
27	9090	0.3	1	8746 344
28	9667	0.3	1	9295 372
29	11021	0.3	1	10663 358
30	6637	0.3	1	6419 218
31	9117	0.3	1	8788 329
32	8489	0.3	1	8193 296
33	7521	0.3	1	7220 301
34	9373	0.3	1	9005 368
35	8522	0.3	1	8288 234
36	8808	0.3	1	8505 303
37	10342	0.3	1	10016 326
38	8768	0.3	1	8559 209
39	8660	0.3	1	8481 179
40	7386	0.3	1	7205 181
41	9032	0.3	1	8782 250
42	9090	0.3	1	8868 222
43	8649	0.3	1	8409 240
44	8398	0.3	1	8180 218
45	9421	0.3	1	9139 282
46	10025	0.3	1	9736 289
47	9449	0.3	1	9237 212
48	8501	0.3	1	8284 217
49	8822	0.3	1	8550 272
50	9447	0.3	1	9162 285
51	9074	0.3	1	8786 288
52	10889	0.3	1	10591 298
53	10280	0.3	1	9992 288
54	11979	0.3	1	11725 254
55	7611	0.3	1	7431 180
56	9400	0.3	1	9181 219
57	11281	0.3	1	11057 224
58	6567	0.3	1	6444 123
59	7556	0.3	1	7411 145
60	8061	0.3	1	7932 129
61	8297	0.3	1	8083 214
62	7988	0.3	1	7833 155
63	13731	0.3	1	13494 237
64	6473	0.3	1	6378 95
65	7611	0.3	1	7475 136
66	5274	0.3	1	5177 97
67	8443	0.3	1	8312 131
68	7646	0.3	1	7487 159
69	8485	0.3	1	8346 139
70	7004	0.3	1	6911 93
71	8684	0.3	1	8544 140
72	8199	0.3	1	8060 139
73	9745	0.3	1	9451 294
74	11083	0.3	1	10847 236
75	15477	0.3	1	14965 512
76	115193	0.3	1	114171 1022
77	5564	0.3	1	5373 191
78	717	0.3	1	658 59
79	477	0.3	1	437 40
80	380	0.3	1	347 33
81	434	0.3	1	385 49
82	349	0.3	1	305 44
83	513	0.3	1	456 57
84	864	0.3	1	815 49
85	843	0.3	1	786 57
86	926	0.3	1	882 44
87	831	0.3	1	792 39
88	552	0.3	1	527 25
89	443	0.3	1	408 35
90	195	0.3	1	161 34
91	198	0.3	1	160 38
92	162	0.3	1	118 44
93	183	0.3	1	153 30
94	138	0.3	1	97 41
95	178	0.3	1	145 33
96	131	0.3	1	91 40
97	136	0.3	1	102 34
98	103	0.3	1	77 26
99	151	0.3	1	114 37
100	104	0.3	1	63 41
101	140	0.3	1	106 34
102	109	0.3	1	75 34
103	131	0.3	1	94 37
104	83	0.3	1	55 28
105	101	0.3	1	75 26
106	74	0.3	1	52 22
107	83	0.3	1	54 29
108	75	0.3	1	46 29
109	85	0.3	1	51 34
110	81	0.3	1	41 40
111	60	0.3	1	44 16
112	56	0.3	1	34 22
113	79	0.3	1	50 29
114	50	0.3	1	19 31
115	69	0.3	1	33 36
116	47	0.3	1	13 34
117	46	0.3	1	25 21
118	35	0.3	1	10 25
119	45	0.3	1	21 24
120	44	0.3	1	14 30
121	54	0.3	1	18 36
122	24	0.3	1	6 18
123	47	0.3	1	18 29
124	30	0.3	1	6 24
125	29	0.3	1	10 19
126	27	0.3	1	4 23
127	37	0.3	1	12 25
128	17	0.3	1	1 16
129	25	0.3	1	3 22
130	24	0.3	1	1 23
131	24	0.3	1	6 18
132	28	0.3	1	2 26
133	20	0.3	1	3 17
134	17	0.3	1	0 17
135	24	0.3	1	4 20
136	14	0.3	1	0 14
137	16	0.3	1	2 14
138	17	0.3	1	2 15
139	23	0.3	1	1 22
140	18	0.3	1	0 18

[M::process] read 247324 sequences (29752971 bp)...
[M::process] 0 single-end sequences; 247324 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (16, 64995, 86, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (243, 656, 1158)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2988)
[M::mem_pestat] mean and std.dev: (683.31, 516.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3903)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 237, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 798)
[M::mem_pestat] mean and std.dev: (255.20, 145.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 51, 397)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1137)
[M::mem_pestat] mean and std.dev: (134.72, 183.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1507)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 561, 729)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1975)
[M::mem_pestat] mean and std.dev: (402.64, 292.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2598)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 247324 reads in 373.696 CPU sec, 101.874 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1045\tPL:Illumina\tPU:x\tLB:pherring\tSM:1045.TB17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2302.877 sec; CPU: 11985.984 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
