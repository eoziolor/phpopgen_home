==========================================
SLURM_JOB_ID = 5436251
SLURM_NODELIST = c10-76
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1264
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 651660 sequences (80000084 bp)...
[M::process] 0 single-end sequences; 651660 paired-end sequences
[M::process] read 653566 sequences (80000236 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 166619, 166, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (203, 543, 2672)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7610)
[M::mem_pestat] mean and std.dev: (1250.70, 1709.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10079)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 274, 401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 895)
[M::mem_pestat] mean and std.dev: (290.04, 165.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1142)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 173, 724)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2088)
[M::mem_pestat] mean and std.dev: (330.81, 407.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2770)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (180, 456, 1415)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3885)
[M::mem_pestat] mean and std.dev: (484.85, 438.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5120)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 651660 reads in 938.160 CPU sec, 128.340 real sec
[M::process] 0 single-end sequences; 653566 paired-end sequences
[M::process] read 655964 sequences (80000145 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 167007, 149, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (202, 436, 2364)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6688)
[M::mem_pestat] mean and std.dev: (1108.47, 1616.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8850)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (150, 269, 398)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 894)
[M::mem_pestat] mean and std.dev: (286.46, 165.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1142)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 122, 633)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1831)
[M::mem_pestat] mean and std.dev: (251.20, 361.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2430)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 425, 1047)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2687)
[M::mem_pestat] mean and std.dev: (517.66, 428.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3507)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 653566 reads in 963.588 CPU sec, 126.552 real sec
[M::process] 0 single-end sequences; 655964 paired-end sequences
[M::process] read 648890 sequences (80000031 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (53, 168625, 164, 44)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (203, 398, 2993)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8573)
[M::mem_pestat] mean and std.dev: (1120.43, 1616.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11363)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (151, 273, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 904)
[M::mem_pestat] mean and std.dev: (289.58, 167.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1155)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 119, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1168)
[M::mem_pestat] mean and std.dev: (183.55, 229.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1547)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 326, 3286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9476)
[M::mem_pestat] mean and std.dev: (1388.73, 1851.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12571)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 655964 reads in 941.132 CPU sec, 124.515 real sec
[M::process] 0 single-end sequences; 648890 paired-end sequences
[M::process] read 651968 sequences (80000069 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 166740, 148, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 743, 3777)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10957)
[M::mem_pestat] mean and std.dev: (2058.46, 2458.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14547)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 273, 401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 895)
[M::mem_pestat] mean and std.dev: (289.63, 164.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1142)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (55, 199, 982)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2836)
[M::mem_pestat] mean and std.dev: (370.24, 531.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3763)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (354, 537, 2914)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8034)
[M::mem_pestat] mean and std.dev: (1741.29, 2265.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10802)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 648890 reads in 951.960 CPU sec, 124.996 real sec
[M::process] 0 single-end sequences; 651968 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 167501, 150, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 454, 3255)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9405)
[M::mem_pestat] mean and std.dev: (1767.71, 2355.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12480)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (149, 268, 398)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 896)
[M::mem_pestat] mean and std.dev: (285.95, 165.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1145)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 161, 624)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1814)
[M::mem_pestat] mean and std.dev: (303.45, 417.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2409)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 951, 4620)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13216)
[M::mem_pestat] mean and std.dev: (2232.58, 2762.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17514)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 651968 reads in 957.744 CPU sec, 129.759 real sec
[M::process] read 654948 sequences (80000145 bp)...
[M::process] 0 single-end sequences; 654948 paired-end sequences
[M::process] read 656900 sequences (80000223 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (48, 167607, 166, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (252, 435, 846)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2034)
[M::mem_pestat] mean and std.dev: (352.49, 206.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2628)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (152, 273, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 902)
[M::mem_pestat] mean and std.dev: (289.43, 166.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1152)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 80, 336)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 948)
[M::mem_pestat] mean and std.dev: (141.21, 198.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1254)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 657, 2488)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6960)
[M::mem_pestat] mean and std.dev: (1211.28, 1339.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9196)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 654948 reads in 958.816 CPU sec, 128.106 real sec
[M::process] 0 single-end sequences; 656900 paired-end sequences
[M::process] read 656840 sequences (80000014 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 167785, 154, 36)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 375, 1254)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3376)
[M::mem_pestat] mean and std.dev: (409.78, 365.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4437)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 270, 393)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 871)
[M::mem_pestat] mean and std.dev: (285.05, 159.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1110)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 135, 614)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1778)
[M::mem_pestat] mean and std.dev: (260.31, 370.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2360)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (186, 326, 1818)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5082)
[M::mem_pestat] mean and std.dev: (717.85, 999.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6714)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656900 reads in 962.544 CPU sec, 127.944 real sec
[M::process] 0 single-end sequences; 656840 paired-end sequences
[M::process] read 657206 sequences (80000157 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 167276, 185, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 304, 920)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2388)
[M::mem_pestat] mean and std.dev: (402.26, 352.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3122)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (155, 271, 394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 872)
[M::mem_pestat] mean and std.dev: (286.26, 159.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1111)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (37, 98, 603)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1735)
[M::mem_pestat] mean and std.dev: (251.15, 347.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2301)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (243, 448, 1118)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2868)
[M::mem_pestat] mean and std.dev: (530.93, 480.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3743)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656840 reads in 973.232 CPU sec, 130.746 real sec
[M::process] 0 single-end sequences; 657206 paired-end sequences
[M::process] read 656126 sequences (80000066 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 167486, 151, 51)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (234, 440, 1491)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4005)
[M::mem_pestat] mean and std.dev: (1009.59, 1200.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5811)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 270, 394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 874)
[M::mem_pestat] mean and std.dev: (285.36, 160.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1114)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 98, 472)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1360)
[M::mem_pestat] mean and std.dev: (210.98, 297.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1804)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 485, 1146)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3036)
[M::mem_pestat] mean and std.dev: (613.23, 681.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3981)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 657206 reads in 932.836 CPU sec, 123.171 real sec
[M::process] 0 single-end sequences; 656126 paired-end sequences
[M::process] read 661942 sequences (80000111 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 167801, 156, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (236, 372, 1124)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2900)
[M::mem_pestat] mean and std.dev: (465.15, 427.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3788)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (153, 268, 390)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 864)
[M::mem_pestat] mean and std.dev: (282.95, 157.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1101)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 140, 563)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1599)
[M::mem_pestat] mean and std.dev: (252.94, 330.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2117)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 290, 1446)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3934)
[M::mem_pestat] mean and std.dev: (915.66, 1191.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5683)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656126 reads in 918.724 CPU sec, 120.465 real sec
[M::process] 0 single-end sequences; 661942 paired-end sequences
Finished in 1473.77 s (339 us/read; 0.18 M reads/minute).

=== Summary ===

Total read pairs processed:          4,349,585
  Read 1 with adapter:                 837,181 (19.2%)
  Read 2 with adapter:                 749,946 (17.2%)
Pairs that were too short:             634,385 (14.6%)
Pairs written (passing filters):     3,715,200 (85.4%)

Total basepairs processed: 1,304,875,500 bp
  Read 1:   652,437,750 bp
  Read 2:   652,437,750 bp
Quality-trimmed:             341,178,836 bp (26.1%)
  Read 1:   170,589,418 bp
  Read 2:   170,589,418 bp
Total written (filtered):    907,216,319 bp (69.5%)
  Read 1:   465,994,517 bp
  Read 2:   441,221,802 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 837181 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.9%
  C: 39.5%
  G: 31.5%
  T: 18.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	68200	67962.3	0	68200
4	28470	16990.6	0	28470
5	12370	4247.6	0	12370
6	9476	1061.9	0	9476
7	9240	265.5	0	9240
8	8045	66.4	0	8045
9	7797	16.6	0	7677 120
10	7846	4.1	1	7277 569
11	8545	1.0	1	8072 473
12	8863	0.3	1	8321 542
13	8568	0.3	1	8109 459
14	9255	0.3	1	8626 629
15	10153	0.3	1	9404 749
16	10098	0.3	1	9136 962
17	10209	0.3	1	9655 554
18	8908	0.3	1	8354 554
19	10450	0.3	1	9887 563
20	10629	0.3	1	9934 695
21	11772	0.3	1	11073 699
22	11604	0.3	1	11058 546
23	6668	0.3	1	6451 217
24	6647	0.3	1	6410 237
25	9043	0.3	1	8567 476
26	7621	0.3	1	7288 333
27	10418	0.3	1	9798 620
28	7106	0.3	1	6853 253
29	10162	0.3	1	9620 542
30	10025	0.3	1	9568 457
31	8089	0.3	1	7675 414
32	7819	0.3	1	7483 336
33	11620	0.3	1	11001 619
34	9955	0.3	1	9544 411
35	9208	0.3	1	8803 405
36	11396	0.3	1	10946 450
37	8823	0.3	1	8427 396
38	10785	0.3	1	10347 438
39	10709	0.3	1	10366 343
40	10561	0.3	1	10241 320
41	7031	0.3	1	6806 225
42	10319	0.3	1	10055 264
43	10218	0.3	1	9902 316
44	6393	0.3	1	6220 173
45	15322	0.3	1	14950 372
46	2931	0.3	1	2828 103
47	5722	0.3	1	5566 156
48	6464	0.3	1	6329 135
49	8450	0.3	1	8173 277
50	7438	0.3	1	7267 171
51	7675	0.3	1	7449 226
52	6910	0.3	1	6732 178
53	8577	0.3	1	8342 235
54	7419	0.3	1	7224 195
55	8869	0.3	1	8680 189
56	6446	0.3	1	6293 153
57	8817	0.3	1	8577 240
58	7461	0.3	1	7264 197
59	8399	0.3	1	8161 238
60	7147	0.3	1	6972 175
61	8903	0.3	1	8656 247
62	7250	0.3	1	7059 191
63	11666	0.3	1	11407 259
64	8002	0.3	1	7886 116
65	7532	0.3	1	7388 144
66	10202	0.3	1	10019 183
67	8933	0.3	1	8697 236
68	7359	0.3	1	7182 177
69	11277	0.3	1	10874 403
70	11811	0.3	1	11530 281
71	16917	0.3	1	16307 610
72	107812	0.3	1	106977 835
73	9391	0.3	1	9128 263
74	1334	0.3	1	1222 112
75	621	0.3	1	555 66
76	444	0.3	1	375 69
77	504	0.3	1	417 87
78	412	0.3	1	360 52
79	568	0.3	1	494 74
80	503	0.3	1	459 44
81	709	0.3	1	648 61
82	638	0.3	1	584 54
83	712	0.3	1	646 66
84	506	0.3	1	454 52
85	471	0.3	1	419 52
86	318	0.3	1	268 50
87	409	0.3	1	345 64
88	249	0.3	1	216 33
89	407	0.3	1	339 68
90	299	0.3	1	245 54
91	362	0.3	1	297 65
92	232	0.3	1	190 42
93	305	0.3	1	244 61
94	216	0.3	1	184 32
95	300	0.3	1	240 60
96	201	0.3	1	163 38
97	321	0.3	1	259 62
98	173	0.3	1	144 29
99	304	0.3	1	244 60
100	193	0.3	1	143 50
101	253	0.3	1	196 57
102	182	0.3	1	145 37
103	205	0.3	1	154 51
104	130	0.3	1	98 32
105	221	0.3	1	173 48
106	117	0.3	1	84 33
107	172	0.3	1	130 42
108	106	0.3	1	79 27
109	170	0.3	1	122 48
110	93	0.3	1	61 32
111	142	0.3	1	112 30
112	90	0.3	1	56 34
113	121	0.3	1	88 33
114	71	0.3	1	35 36
115	118	0.3	1	80 38
116	45	0.3	1	28 17
117	101	0.3	1	66 35
118	55	0.3	1	19 36
119	96	0.3	1	60 36
120	46	0.3	1	16 30
121	71	0.3	1	33 38
122	32	0.3	1	6 26
123	49	0.3	1	15 34
124	30	0.3	1	4 26
125	68	0.3	1	28 40
126	36	0.3	1	5 31
127	42	0.3	1	16 26
128	29	0.3	1	6 23
129	27	0.3	1	10 17
130	41	0.3	1	3 38
131	42	0.3	1	11 31
132	27	0.3	1	2 25
133	29	0.3	1	6 23
134	27	0.3	1	3 24
135	23	0.3	1	4 19
136	27	0.3	1	2 25
137	27	0.3	1	6 21
138	29	0.3	1	0 29
139	33	0.3	1	4 29
140	31	0.3	1	1 30

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 749946 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.9%
  C: 39.8%
  G: 30.6%
  T: 18.6%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	64001	67962.3	0	64001
4	23337	16990.6	0	23337
5	11495	4247.6	0	11495
6	7887	1061.9	0	7887
7	8035	265.5	0	8035
8	6625	66.4	0	6625
9	6497	16.6	0	6396 101
10	6718	4.1	1	6259 459
11	7157	1.0	1	6744 413
12	8076	0.3	1	7585 491
13	7683	0.3	1	7226 457
14	8994	0.3	1	8341 653
15	10086	0.3	1	9308 778
16	10695	0.3	1	9856 839
17	10032	0.3	1	9433 599
18	8848	0.3	1	8358 490
19	9884	0.3	1	9345 539
20	9150	0.3	1	8781 369
21	7034	0.3	1	6712 322
22	8950	0.3	1	8529 421
23	6941	0.3	1	6591 350
24	8752	0.3	1	8360 392
25	8438	0.3	1	8135 303
26	8467	0.3	1	8146 321
27	8347	0.3	1	8043 304
28	8000	0.3	1	7720 280
29	9576	0.3	1	9251 325
30	6838	0.3	1	6574 264
31	8450	0.3	1	8116 334
32	9151	0.3	1	8859 292
33	8503	0.3	1	8167 336
34	6657	0.3	1	6352 305
35	8127	0.3	1	7821 306
36	7927	0.3	1	7613 314
37	12206	0.3	1	11793 413
38	5769	0.3	1	5600 169
39	4026	0.3	1	3904 122
40	5344	0.3	1	5194 150
41	6235	0.3	1	6033 202
42	7600	0.3	1	7384 216
43	5722	0.3	1	5502 220
44	7355	0.3	1	7071 284
45	5820	0.3	1	5637 183
46	6992	0.3	1	6752 240
47	7699	0.3	1	7438 261
48	7754	0.3	1	7467 287
49	7024	0.3	1	6792 232
50	7879	0.3	1	7622 257
51	6941	0.3	1	6726 215
52	7867	0.3	1	7611 256
53	8131	0.3	1	7873 258
54	11877	0.3	1	11595 282
55	5352	0.3	1	5199 153
56	7412	0.3	1	7198 214
57	11989	0.3	1	11692 297
58	4503	0.3	1	4395 108
59	5695	0.3	1	5559 136
60	6850	0.3	1	6691 159
61	6732	0.3	1	6553 179
62	6033	0.3	1	5886 147
63	12949	0.3	1	12655 294
64	3933	0.3	1	3833 100
65	6109	0.3	1	5923 186
66	3866	0.3	1	3764 102
67	6502	0.3	1	6334 168
68	7113	0.3	1	6941 172
69	6739	0.3	1	6576 163
70	4498	0.3	1	4404 94
71	6622	0.3	1	6437 185
72	6449	0.3	1	6234 215
73	8381	0.3	1	7884 497
74	8573	0.3	1	8213 360
75	14419	0.3	1	13776 643
76	88600	0.3	1	87234 1366
77	8153	0.3	1	7873 280
78	1349	0.3	1	1270 79
79	930	0.3	1	854 76
80	695	0.3	1	635 60
81	671	0.3	1	619 52
82	454	0.3	1	433 21
83	652	0.3	1	594 58
84	987	0.3	1	942 45
85	1236	0.3	1	1166 70
86	1331	0.3	1	1280 51
87	1153	0.3	1	1097 56
88	831	0.3	1	784 47
89	515	0.3	1	456 59
90	300	0.3	1	271 29
91	282	0.3	1	231 51
92	181	0.3	1	151 30
93	201	0.3	1	162 39
94	167	0.3	1	125 42
95	217	0.3	1	167 50
96	152	0.3	1	120 32
97	169	0.3	1	133 36
98	110	0.3	1	82 28
99	134	0.3	1	89 45
100	122	0.3	1	86 36
101	137	0.3	1	97 40
102	143	0.3	1	98 45
103	105	0.3	1	79 26
104	66	0.3	1	40 26
105	102	0.3	1	68 34
106	76	0.3	1	44 32
107	102	0.3	1	73 29
108	63	0.3	1	30 33
109	83	0.3	1	56 27
110	48	0.3	1	28 20
111	84	0.3	1	54 30
112	51	0.3	1	27 24
113	73	0.3	1	50 23
114	52	0.3	1	21 31
115	70	0.3	1	51 19
116	45	0.3	1	20 25
117	56	0.3	1	27 29
118	34	0.3	1	14 20
119	44	0.3	1	27 17
120	29	0.3	1	6 23
121	47	0.3	1	18 29
122	25	0.3	1	6 19
123	51	0.3	1	23 28
124	33	0.3	1	8 25
125	43	0.3	1	21 22
126	39	0.3	1	7 32
127	42	0.3	1	13 29
128	30	0.3	1	3 27
129	17	0.3	1	5 12
130	28	0.3	1	2 26
131	17	0.3	1	7 10
132	28	0.3	1	2 26
133	22	0.3	1	1 21
134	22	0.3	1	1 21
135	23	0.3	1	0 23
136	25	0.3	1	3 22
137	25	0.3	1	3 22
138	24	0.3	1	1 23
139	15	0.3	1	0 15
140	17	0.3	1	1 16

[M::process] read 224390 sequences (27215038 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 167613, 149, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (225, 401, 3138)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8964)
[M::mem_pestat] mean and std.dev: (1439.92, 2123.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11877)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (151, 265, 388)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 862)
[M::mem_pestat] mean and std.dev: (280.60, 157.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1099)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (35, 87, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1076)
[M::mem_pestat] mean and std.dev: (179.81, 223.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1423)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (176, 413, 3338)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9662)
[M::mem_pestat] mean and std.dev: (1699.39, 2163.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12824)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 661942 reads in 927.112 CPU sec, 120.137 real sec
[M::process] 0 single-end sequences; 224390 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 56975, 55, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (111, 355, 1137)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3189)
[M::mem_pestat] mean and std.dev: (571.38, 638.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4215)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (151, 267, 390)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 868)
[M::mem_pestat] mean and std.dev: (282.08, 158.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1107)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 121, 476)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1370)
[M::mem_pestat] mean and std.dev: (206.87, 255.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1817)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (181, 366, 1822)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5104)
[M::mem_pestat] mean and std.dev: (483.22, 511.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6745)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 224390 reads in 313.708 CPU sec, 39.636 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1264\tPL:Illumina\tPU:x\tLB:pherring\tSM:1264.PWS91 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1614.791 sec; CPU: 10747.412 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
