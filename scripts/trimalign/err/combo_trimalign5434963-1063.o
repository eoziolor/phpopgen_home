==========================================
SLURM_JOB_ID = 5436050
SLURM_NODELIST = c10-68
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1063
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 695976 sequences (80000176 bp)...
[M::process] 0 single-end sequences; 695976 paired-end sequences
[M::process] read 702738 sequences (80000082 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 173765, 181, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (160, 224, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 736)
[M::mem_pestat] mean and std.dev: (212.68, 142.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 928)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (97, 159, 257)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 577)
[M::mem_pestat] mean and std.dev: (185.74, 115.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 737)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 55, 275)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 771)
[M::mem_pestat] mean and std.dev: (113.89, 155.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (194, 329, 598)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1406)
[M::mem_pestat] mean and std.dev: (281.00, 186.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1810)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 695976 reads in 922.108 CPU sec, 182.785 real sec
[M::process] 0 single-end sequences; 702738 paired-end sequences
[M::process] read 696482 sequences (80000086 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 175145, 155, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (159, 291, 1476)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4110)
[M::mem_pestat] mean and std.dev: (412.56, 422.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5427)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (95, 155, 249)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 557)
[M::mem_pestat] mean and std.dev: (180.74, 111.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 711)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 55, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 607)
[M::mem_pestat] mean and std.dev: (102.59, 118.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 800)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (178, 313, 2461)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7027)
[M::mem_pestat] mean and std.dev: (925.72, 1471.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9310)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 702738 reads in 905.584 CPU sec, 166.655 real sec
[M::process] 0 single-end sequences; 696482 paired-end sequences
[M::process] read 698644 sequences (80000276 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 175146, 141, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 183, 812)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2204)
[M::mem_pestat] mean and std.dev: (299.12, 288.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2900)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (96, 157, 256)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 576)
[M::mem_pestat] mean and std.dev: (184.67, 115.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 736)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 52, 240)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 666)
[M::mem_pestat] mean and std.dev: (104.01, 135.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 879)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 260, 593)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1569)
[M::mem_pestat] mean and std.dev: (263.64, 209.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2057)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 696482 reads in 867.004 CPU sec, 185.057 real sec
[M::process] 0 single-end sequences; 698644 paired-end sequences
[M::process] read 699054 sequences (80000194 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (42, 174539, 145, 24)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (115, 174, 689)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (276.00, 269.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2411)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (96, 157, 254)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 570)
[M::mem_pestat] mean and std.dev: (183.65, 114.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 728)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 44, 150)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 396)
[M::mem_pestat] mean and std.dev: (72.26, 77.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (159, 241, 898)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2376)
[M::mem_pestat] mean and std.dev: (434.57, 451.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3115)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 698644 reads in 907.924 CPU sec, 177.964 real sec
[M::process] 0 single-end sequences; 699054 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (26, 174846, 145, 20)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (93, 230, 558)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1488)
[M::mem_pestat] mean and std.dev: (283.32, 259.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1953)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (95, 156, 252)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 566)
[M::mem_pestat] mean and std.dev: (182.13, 113.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 60, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 566)
[M::mem_pestat] mean and std.dev: (86.63, 98.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 277, 630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1488)
[M::mem_pestat] mean and std.dev: (293.47, 251.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1917)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 699054 reads in 855.460 CPU sec, 157.618 real sec
[M::process] read 715438 sequences (80000173 bp)...
[M::process] 0 single-end sequences; 715438 paired-end sequences
[M::process] read 707430 sequences (80000017 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 178121, 136, 24)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (133, 241, 3688)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10798)
[M::mem_pestat] mean and std.dev: (1907.29, 2870.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14353)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (94, 153, 244)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 544)
[M::mem_pestat] mean and std.dev: (177.47, 108.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 694)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (23, 41, 159)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (76.46, 92.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 567)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (141, 214, 507)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1239)
[M::mem_pestat] mean and std.dev: (282.74, 226.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1605)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 715438 reads in 912.212 CPU sec, 194.008 real sec
[M::process] 0 single-end sequences; 707430 paired-end sequences
[M::process] read 715978 sequences (80000175 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 176063, 170, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 241, 937)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2561)
[M::mem_pestat] mean and std.dev: (240.71, 213.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3373)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (95, 154, 247)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 551)
[M::mem_pestat] mean and std.dev: (179.36, 110.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 52, 242)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 668)
[M::mem_pestat] mean and std.dev: (110.13, 153.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 881)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 269, 982)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2552)
[M::mem_pestat] mean and std.dev: (463.83, 508.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3337)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 707430 reads in 938.892 CPU sec, 156.769 real sec
[M::process] 0 single-end sequences; 715978 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 178228, 151, 24)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (149, 196, 338)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 716)
[M::mem_pestat] mean and std.dev: (227.35, 156.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 905)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (95, 154, 246)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (178.52, 109.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 699)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 44, 169)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 453)
[M::mem_pestat] mean and std.dev: (75.42, 91.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 595)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 240, 504)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1204)
[M::mem_pestat] mean and std.dev: (279.50, 199.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1554)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 706744 sequences (80000151 bp)...
[M::mem_process_seqs] Processed 715978 reads in 910.520 CPU sec, 190.827 real sec
[M::process] 0 single-end sequences; 706744 paired-end sequences
Finished in 1856.63 s (460 us/read; 0.13 M reads/minute).

=== Summary ===

Total read pairs processed:          4,033,751
  Read 1 with adapter:               1,372,326 (34.0%)
  Read 2 with adapter:               1,276,398 (31.6%)
Pairs that were too short:             555,168 (13.8%)
Pairs written (passing filters):     3,478,583 (86.2%)

Total basepairs processed: 1,210,125,300 bp
  Read 1:   605,062,650 bp
  Read 2:   605,062,650 bp
Quality-trimmed:             324,308,342 bp (26.8%)
  Read 1:   162,154,171 bp
  Read 2:   162,154,171 bp
Total written (filtered):    790,137,011 bp (65.3%)
  Read 1:   404,740,305 bp
  Read 2:   385,396,706 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1372326 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 9.7%
  C: 42.4%
  G: 31.1%
  T: 16.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	58394	63027.4	0	58394
4	28009	15756.8	0	28009
5	15888	3939.2	0	15888
6	13370	984.8	0	13370
7	14538	246.2	0	14538
8	12963	61.6	0	12963
9	12702	15.4	0	12613 89
10	12640	3.8	1	12047 593
11	13835	1.0	1	13252 583
12	14545	0.2	1	13832 713
13	14346	0.2	1	13693 653
14	15044	0.2	1	14244 800
15	17280	0.2	1	16209 1071
16	17436	0.2	1	16104 1332
17	16617	0.2	1	15916 701
18	15207	0.2	1	14375 832
19	17083	0.2	1	16364 719
20	17084	0.2	1	16253 831
21	18565	0.2	1	17685 880
22	19118	0.2	1	18327 791
23	12969	0.2	1	12555 414
24	12454	0.2	1	12083 371
25	16134	0.2	1	15441 693
26	13215	0.2	1	12806 409
27	16648	0.2	1	15872 776
28	13414	0.2	1	12959 455
29	19259	0.2	1	18323 936
30	20419	0.2	1	19738 681
31	14777	0.2	1	14209 568
32	16631	0.2	1	16131 500
33	16305	0.2	1	15644 661
34	18189	0.2	1	17590 599
35	16298	0.2	1	15873 425
36	17436	0.2	1	17072 364
37	13677	0.2	1	13307 370
38	17779	0.2	1	17310 469
39	13235	0.2	1	12967 268
40	14304	0.2	1	13976 328
41	16956	0.2	1	16480 476
42	17743	0.2	1	17303 440
43	18245	0.2	1	17813 432
44	13849	0.2	1	13521 328
45	33051	0.2	1	32311 740
46	6384	0.2	1	6208 176
47	11170	0.2	1	10895 275
48	11947	0.2	1	11712 235
49	15572	0.2	1	15257 315
50	14426	0.2	1	14162 264
51	14506	0.2	1	14236 270
52	12770	0.2	1	12568 202
53	15038	0.2	1	14748 290
54	14053	0.2	1	13793 260
55	16446	0.2	1	16184 262
56	11711	0.2	1	11530 181
57	15903	0.2	1	15581 322
58	13985	0.2	1	13751 234
59	15071	0.2	1	14787 284
60	13569	0.2	1	13371 198
61	15646	0.2	1	15352 294
62	12917	0.2	1	12691 226
63	20458	0.2	1	20101 357
64	15487	0.2	1	15264 223
65	14115	0.2	1	13933 182
66	20095	0.2	1	19856 239
67	16592	0.2	1	16284 308
68	14159	0.2	1	13928 231
69	20919	0.2	1	20462 457
70	22575	0.2	1	22172 403
71	31169	0.2	1	30413 756
72	185989	0.2	1	184956 1033
73	12048	0.2	1	11745 303
74	1586	0.2	1	1497 89
75	740	0.2	1	663 77
76	559	0.2	1	485 74
77	702	0.2	1	614 88
78	603	0.2	1	540 63
79	804	0.2	1	736 68
80	713	0.2	1	663 50
81	975	0.2	1	906 69
82	853	0.2	1	799 54
83	900	0.2	1	815 85
84	667	0.2	1	606 61
85	692	0.2	1	619 73
86	501	0.2	1	458 43
87	561	0.2	1	489 72
88	450	0.2	1	406 44
89	578	0.2	1	526 52
90	410	0.2	1	371 39
91	513	0.2	1	458 55
92	361	0.2	1	330 31
93	496	0.2	1	428 68
94	379	0.2	1	333 46
95	453	0.2	1	403 50
96	350	0.2	1	316 34
97	449	0.2	1	396 53
98	261	0.2	1	236 25
99	389	0.2	1	340 49
100	271	0.2	1	237 34
101	365	0.2	1	298 67
102	225	0.2	1	196 29
103	310	0.2	1	273 37
104	198	0.2	1	153 45
105	277	0.2	1	237 40
106	151	0.2	1	126 25
107	219	0.2	1	187 32
108	121	0.2	1	104 17
109	223	0.2	1	182 41
110	124	0.2	1	100 24
111	173	0.2	1	137 36
112	114	0.2	1	87 27
113	154	0.2	1	126 28
114	73	0.2	1	52 21
115	117	0.2	1	84 33
116	62	0.2	1	35 27
117	95	0.2	1	67 28
118	58	0.2	1	38 20
119	67	0.2	1	49 18
120	47	0.2	1	25 22
121	65	0.2	1	38 27
122	39	0.2	1	16 23
123	55	0.2	1	33 22
124	28	0.2	1	8 20
125	40	0.2	1	20 20
126	30	0.2	1	7 23
127	35	0.2	1	14 21
128	17	0.2	1	4 13
129	29	0.2	1	3 26
130	23	0.2	1	6 17
131	36	0.2	1	12 24
132	26	0.2	1	2 24
133	14	0.2	1	5 9
134	23	0.2	1	1 22
135	8	0.2	1	4 4
136	14	0.2	1	2 12
137	27	0.2	1	1 26
138	19	0.2	1	1 18
139	16	0.2	1	2 14
140	22	0.2	1	2 20

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1276398 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 9.6%
  C: 42.6%
  G: 30.5%
  T: 17.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	52288	63027.4	0	52288
4	23973	15756.8	0	23973
5	14331	3939.2	0	14331
6	11643	984.8	0	11643
7	12287	246.2	0	12287
8	11068	61.6	0	11068
9	11381	15.4	0	11299 82
10	10664	3.8	1	10097 567
11	12434	1.0	1	11854 580
12	13246	0.2	1	12487 759
13	12812	0.2	1	12190 622
14	13656	0.2	1	12843 813
15	15786	0.2	1	14753 1033
16	15481	0.2	1	14451 1030
17	14916	0.2	1	14109 807
18	14415	0.2	1	13687 728
19	19180	0.2	1	18124 1056
20	15051	0.2	1	14509 542
21	11865	0.2	1	11388 477
22	15149	0.2	1	14583 566
23	10932	0.2	1	10591 341
24	13989	0.2	1	13457 532
25	14156	0.2	1	13650 506
26	13492	0.2	1	13066 426
27	13297	0.2	1	12866 431
28	13922	0.2	1	13401 521
29	13901	0.2	1	13444 457
30	11504	0.2	1	11117 387
31	14815	0.2	1	14244 571
32	14270	0.2	1	13843 427
33	12980	0.2	1	12414 566
34	13173	0.2	1	12790 383
35	13112	0.2	1	12661 451
36	17094	0.2	1	16558 536
37	10650	0.2	1	10401 249
38	12745	0.2	1	12425 320
39	15364	0.2	1	14971 393
40	12392	0.2	1	12137 255
41	11881	0.2	1	11609 272
42	12040	0.2	1	11787 253
43	14245	0.2	1	13746 499
44	13093	0.2	1	12718 375
45	16398	0.2	1	15805 593
46	17554	0.2	1	17014 540
47	14349	0.2	1	14023 326
48	12956	0.2	1	12611 345
49	13862	0.2	1	13473 389
50	14722	0.2	1	14313 409
51	14215	0.2	1	13832 383
52	18144	0.2	1	17654 490
53	15568	0.2	1	15205 363
54	17654	0.2	1	17264 390
55	12632	0.2	1	12373 259
56	14903	0.2	1	14587 316
57	18137	0.2	1	17774 363
58	10528	0.2	1	10365 163
59	12324	0.2	1	12105 219
60	12640	0.2	1	12422 218
61	13402	0.2	1	13165 237
62	12457	0.2	1	12228 229
63	21767	0.2	1	21454 313
64	10974	0.2	1	10812 162
65	11982	0.2	1	11794 188
66	8593	0.2	1	8451 142
67	13716	0.2	1	13488 228
68	12450	0.2	1	12227 223
69	13435	0.2	1	13258 177
70	10687	0.2	1	10565 122
71	13961	0.2	1	13735 226
72	13191	0.2	1	12948 243
73	15804	0.2	1	15369 435
74	17195	0.2	1	16784 411
75	24131	0.2	1	23291 840
76	185714	0.2	1	184096 1618
77	8688	0.2	1	8365 323
78	1159	0.2	1	1089 70
79	734	0.2	1	686 48
80	647	0.2	1	607 40
81	716	0.2	1	668 48
82	610	0.2	1	576 34
83	854	0.2	1	807 47
84	1480	0.2	1	1429 51
85	1407	0.2	1	1354 53
86	1706	0.2	1	1658 48
87	1331	0.2	1	1280 51
88	979	0.2	1	944 35
89	625	0.2	1	579 46
90	345	0.2	1	312 33
91	317	0.2	1	286 31
92	242	0.2	1	209 33
93	281	0.2	1	245 36
94	194	0.2	1	175 19
95	262	0.2	1	218 44
96	183	0.2	1	149 34
97	227	0.2	1	191 36
98	177	0.2	1	148 29
99	198	0.2	1	163 35
100	151	0.2	1	111 40
101	183	0.2	1	147 36
102	140	0.2	1	124 16
103	173	0.2	1	141 32
104	93	0.2	1	86 7
105	160	0.2	1	126 34
106	69	0.2	1	52 17
107	112	0.2	1	84 28
108	75	0.2	1	50 25
109	117	0.2	1	92 25
110	72	0.2	1	46 26
111	99	0.2	1	76 23
112	59	0.2	1	34 25
113	78	0.2	1	57 21
114	47	0.2	1	25 22
115	71	0.2	1	42 29
116	40	0.2	1	20 20
117	53	0.2	1	34 19
118	31	0.2	1	11 20
119	49	0.2	1	27 22
120	24	0.2	1	13 11
121	39	0.2	1	21 18
122	34	0.2	1	13 21
123	29	0.2	1	13 16
124	22	0.2	1	4 18
125	29	0.2	1	14 15
126	16	0.2	1	6 10
127	30	0.2	1	18 12
128	19	0.2	1	6 13
129	16	0.2	1	3 13
130	11	0.2	1	3 8
131	31	0.2	1	10 21
132	20	0.2	1	3 17
133	29	0.2	1	6 23
134	14	0.2	1	0 14
135	17	0.2	1	2 15
136	14	0.2	1	0 14
137	17	0.2	1	4 13
138	16	0.2	1	1 15
139	10	0.2	1	2 8
140	9	0.2	1	0 9

[M::process] read 618682 sequences (70135681 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 176738, 145, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (199, 239, 817)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2053)
[M::mem_pestat] mean and std.dev: (350.05, 319.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2671)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (96, 155, 247)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 549)
[M::mem_pestat] mean and std.dev: (179.60, 109.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 700)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 67, 232)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (113.87, 140.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 841)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 277, 595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1525)
[M::mem_pestat] mean and std.dev: (328.15, 311.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1990)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 706744 reads in 846.504 CPU sec, 209.279 real sec
[M::process] 0 single-end sequences; 618682 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 154385, 124, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (105, 222, 340)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 810)
[M::mem_pestat] mean and std.dev: (217.59, 155.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1045)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (95, 154, 248)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 554)
[M::mem_pestat] mean and std.dev: (180.03, 111.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 49, 325)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 921)
[M::mem_pestat] mean and std.dev: (113.30, 169.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1219)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 258, 851)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2287)
[M::mem_pestat] mean and std.dev: (395.44, 512.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3005)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 618682 reads in 763.968 CPU sec, 189.684 real sec
[main] Version: 0.7.17-r1188
[main] CMD:[bam_sort_core] merging from 3 files and 1 in-memory blocks...
 /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1063\tPL:Illumina\tPU:x\tLB:pherring\tSM:1063.TB96 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2306.969 sec; CPU: 8840.040 sec
