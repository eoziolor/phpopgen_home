==========================================
SLURM_JOB_ID = 5435466
SLURM_NODELIST = c9-90
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
479
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 623874 sequences (80000097 bp)...
[M::process] 0 single-end sequences; 623874 paired-end sequences
[M::process] read 627076 sequences (80000009 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (27, 183010, 169, 40)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (292, 537, 2539)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7033)
[M::mem_pestat] mean and std.dev: (1508.81, 1871.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9280)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (184, 297, 437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 943)
[M::mem_pestat] mean and std.dev: (320.81, 173.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1196)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 84, 605)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1759)
[M::mem_pestat] mean and std.dev: (249.80, 357.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2336)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (353, 860, 3663)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10283)
[M::mem_pestat] mean and std.dev: (2045.97, 2391.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13593)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 623874 reads in 760.240 CPU sec, 190.310 real sec
[M::process] 0 single-end sequences; 627076 paired-end sequences
[M::process] read 623252 sequences (80000253 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 182979, 165, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (327, 933, 3731)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10539)
[M::mem_pestat] mean and std.dev: (2343.86, 2553.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13943)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (184, 297, 437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 943)
[M::mem_pestat] mean and std.dev: (320.50, 174.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1196)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (22, 51, 442)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1282)
[M::mem_pestat] mean and std.dev: (180.58, 277.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1702)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 550, 3321)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9391)
[M::mem_pestat] mean and std.dev: (1924.86, 2512.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12426)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 627076 reads in 886.800 CPU sec, 124.985 real sec
[M::process] 0 single-end sequences; 623252 paired-end sequences
[M::process] read 623720 sequences (80000015 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (59, 182998, 175, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (469, 903, 3741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10285)
[M::mem_pestat] mean and std.dev: (2256.24, 2418.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13557)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (184, 299, 440)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 952)
[M::mem_pestat] mean and std.dev: (322.36, 175.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1208)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 129, 669)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1939)
[M::mem_pestat] mean and std.dev: (279.63, 398.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2574)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (179, 546, 934)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2444)
[M::mem_pestat] mean and std.dev: (524.68, 456.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3199)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 623252 reads in 861.580 CPU sec, 122.854 real sec
[M::process] 0 single-end sequences; 623720 paired-end sequences
[M::process] read 628936 sequences (80000024 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 182420, 168, 51)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (244, 574, 3205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9127)
[M::mem_pestat] mean and std.dev: (1739.52, 2240.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12088)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (183, 298, 439)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 951)
[M::mem_pestat] mean and std.dev: (321.38, 175.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1207)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 93, 477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1379)
[M::mem_pestat] mean and std.dev: (214.38, 303.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1830)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 637, 3112)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8848)
[M::mem_pestat] mean and std.dev: (1661.76, 2001.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11716)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 623720 reads in 868.612 CPU sec, 120.986 real sec
[M::process] 0 single-end sequences; 628936 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 183231, 163, 44)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (400, 973, 2243)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5929)
[M::mem_pestat] mean and std.dev: (1284.12, 1478.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7772)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (183, 296, 435)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 939)
[M::mem_pestat] mean and std.dev: (319.35, 174.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1191)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 100, 966)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2830)
[M::mem_pestat] mean and std.dev: (333.14, 503.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3762)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (354, 1437, 5271)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15105)
[M::mem_pestat] mean and std.dev: (2697.80, 3006.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20022)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 628936 reads in 863.936 CPU sec, 143.816 real sec
[M::process] read 656410 sequences (80000055 bp)...
[M::process] 0 single-end sequences; 656410 paired-end sequences
[M::process] read 654402 sequences (80000092 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 189416, 181, 58)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (259, 1377, 4671)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13495)
[M::mem_pestat] mean and std.dev: (2201.27, 2327.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17907)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (177, 283, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 876)
[M::mem_pestat] mean and std.dev: (303.56, 161.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1109)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 92, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1368)
[M::mem_pestat] mean and std.dev: (196.94, 281.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1815)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 493, 2614)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7386)
[M::mem_pestat] mean and std.dev: (1337.29, 1721.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9772)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656410 reads in 903.708 CPU sec, 129.374 real sec
[M::process] 0 single-end sequences; 654402 paired-end sequences
[M::process] read 656278 sequences (80000126 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (53, 189079, 164, 57)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (213, 477, 3134)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8976)
[M::mem_pestat] mean and std.dev: (1536.62, 1981.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11897)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (178, 283, 409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 871)
[M::mem_pestat] mean and std.dev: (303.08, 160.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1102)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (37, 94, 489)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1393)
[M::mem_pestat] mean and std.dev: (172.78, 231.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1845)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (402, 875, 4326)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12174)
[M::mem_pestat] mean and std.dev: (2047.95, 2342.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16098)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 654402 reads in 902.600 CPU sec, 130.633 real sec
[M::process] 0 single-end sequences; 656278 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 189252, 145, 55)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (373, 606, 1253)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3013)
[M::mem_pestat] mean and std.dev: (649.77, 545.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3893)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (176, 281, 406)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 866)
[M::mem_pestat] mean and std.dev: (300.48, 159.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1096)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 72, 436)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1250)
[M::mem_pestat] mean and std.dev: (157.91, 200.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1657)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 494, 2639)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7539)
[M::mem_pestat] mean and std.dev: (1459.68, 1836.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9989)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656278 reads in 903.352 CPU sec, 137.858 real sec
Finished in 1786.17 s (598 us/read; 0.10 M reads/minute).

=== Summary ===

Total read pairs processed:          2,987,834
  Read 1 with adapter:                 362,404 (12.1%)
  Read 2 with adapter:                 402,495 (13.5%)
Pairs that were too short:             384,004 (12.9%)
Pairs written (passing filters):     2,603,830 (87.1%)

Total basepairs processed:   896,350,200 bp
  Read 1:   448,175,100 bp
  Read 2:   448,175,100 bp
Quality-trimmed:             223,620,502 bp (24.9%)
  Read 1:   111,810,251 bp
  Read 2:   111,810,251 bp
Total written (filtered):    653,778,787 bp (72.9%)
  Read 1:   329,195,562 bp
  Read 2:   324,583,225 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 362404 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 15.4%
  C: 35.1%
  G: 26.2%
  T: 22.6%
  none/other: 0.6%

Overview of removed sequences
length	count	expect	max.err	error counts
3	51812	46684.9	0	51812
4	17934	11671.2	0	17934
5	6492	2917.8	0	6492
6	4376	729.5	0	4376
7	4023	182.4	0	4023
8	3442	45.6	0	3442
9	3149	11.4	0	3053 96
10	3938	2.8	1	3208 730
11	4066	0.7	1	3440 626
12	4665	0.2	1	3994 671
13	3909	0.2	1	3391 518
14	4465	0.2	1	3817 648
15	4497	0.2	1	3880 617
16	5316	0.2	1	4723 593
17	5435	0.2	1	4885 550
18	4266	0.2	1	3840 426
19	5021	0.2	1	4564 457
20	4681	0.2	1	4287 394
21	5816	0.2	1	5314 502
22	4133	0.2	1	3843 290
23	3810	0.2	1	3484 326
24	3292	0.2	1	3037 255
25	3907	0.2	1	3581 326
26	3484	0.2	1	3216 268
27	3872	0.2	1	3522 350
28	3891	0.2	1	3532 359
29	5397	0.2	1	4917 480
30	4928	0.2	1	4577 351
31	4151	0.2	1	3809 342
32	4049	0.2	1	3757 292
33	4078	0.2	1	3714 364
34	4977	0.2	1	4609 368
35	3254	0.2	1	3025 229
36	3972	0.2	1	3691 281
37	4033	0.2	1	3727 306
38	4360	0.2	1	4093 267
39	4353	0.2	1	4078 275
40	3821	0.2	1	3591 230
41	3786	0.2	1	3549 237
42	4484	0.2	1	4228 256
43	7262	0.2	1	6790 472
44	3442	0.2	1	3223 219
45	8660	0.2	1	8235 425
46	1054	0.2	1	998 56
47	1665	0.2	1	1576 89
48	2199	0.2	1	2071 128
49	2891	0.2	1	2730 161
50	3276	0.2	1	3115 161
51	2880	0.2	1	2737 143
52	2634	0.2	1	2507 127
53	2956	0.2	1	2812 144
54	3170	0.2	1	3005 165
55	3424	0.2	1	3293 131
56	2337	0.2	1	2230 107
57	3406	0.2	1	3256 150
58	2905	0.2	1	2771 134
59	3025	0.2	1	2895 130
60	2915	0.2	1	2786 129
61	2951	0.2	1	2841 110
62	2528	0.2	1	2408 120
63	4902	0.2	1	4702 200
64	3372	0.2	1	3255 117
65	2727	0.2	1	2616 111
66	4461	0.2	1	4319 142
67	3610	0.2	1	3478 132
68	2962	0.2	1	2817 145
69	4694	0.2	1	4513 181
70	4568	0.2	1	4392 176
71	5938	0.2	1	5685 253
72	20734	0.2	1	20374 360
73	1827	0.2	1	1739 88
74	305	0.2	1	269 36
75	156	0.2	1	129 27
76	114	0.2	1	78 36
77	144	0.2	1	108 36
78	105	0.2	1	79 26
79	123	0.2	1	103 20
80	86	0.2	1	57 29
81	105	0.2	1	80 25
82	99	0.2	1	70 29
83	100	0.2	1	67 33
84	85	0.2	1	63 22
85	86	0.2	1	58 28
86	70	0.2	1	45 25
87	78	0.2	1	54 24
88	66	0.2	1	45 21
89	64	0.2	1	37 27
90	54	0.2	1	30 24
91	84	0.2	1	52 32
92	49	0.2	1	27 22
93	76	0.2	1	52 24
94	63	0.2	1	39 24
95	71	0.2	1	47 24
96	56	0.2	1	22 34
97	85	0.2	1	49 36
98	33	0.2	1	22 11
99	64	0.2	1	31 33
100	45	0.2	1	20 25
101	60	0.2	1	36 24
102	35	0.2	1	18 17
103	49	0.2	1	21 28
104	39	0.2	1	10 29
105	43	0.2	1	18 25
106	29	0.2	1	10 19
107	32	0.2	1	15 17
108	28	0.2	1	8 20
109	26	0.2	1	14 12
110	32	0.2	1	8 24
111	32	0.2	1	9 23
112	31	0.2	1	11 20
113	39	0.2	1	15 24
114	30	0.2	1	3 27
115	40	0.2	1	10 30
116	33	0.2	1	2 31
117	34	0.2	1	8 26
118	27	0.2	1	2 25
119	30	0.2	1	4 26
120	34	0.2	1	1 33
121	41	0.2	1	3 38
122	25	0.2	1	2 23
123	21	0.2	1	2 19
124	34	0.2	1	0 34
125	26	0.2	1	0 26
126	32	0.2	1	1 31
127	26	0.2	1	0 26
128	22	0.2	1	1 21
129	41	0.2	1	3 38
130	16	0.2	1	0 16
131	39	0.2	1	1 38
132	37	0.2	1	0 37
133	16	0.2	1	0 16
134	22	0.2	1	0 22
135	13	0.2	1	2 11
136	22	0.2	1	0 22
137	12	0.2	1	0 12
138	24	0.2	1	1 23
139	15	0.2	1	0 15
140	41	0.2	1	0 41

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 402495 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 14.4%
  C: 35.4%
  G: 27.3%
  T: 22.9%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	49798	46684.9	0	49798
4	18661	11671.2	0	18661
5	7888	2917.8	0	7888
6	5817	729.5	0	5817
7	4968	182.4	0	4968
8	4471	45.6	0	4471
9	4538	11.4	0	4436 102
10	4297	2.8	1	3963 334
11	4585	0.7	1	4363 222
12	4723	0.2	1	4507 216
13	4323	0.2	1	4141 182
14	4483	0.2	1	4265 218
15	5152	0.2	1	4849 303
16	4953	0.2	1	4649 304
17	4854	0.2	1	4640 214
18	4648	0.2	1	4434 214
19	5791	0.2	1	5526 265
20	4806	0.2	1	4631 175
21	3797	0.2	1	3655 142
22	4543	0.2	1	4378 165
23	3664	0.2	1	3533 131
24	4405	0.2	1	4223 182
25	4496	0.2	1	4321 175
26	4150	0.2	1	4012 138
27	3971	0.2	1	3833 138
28	4221	0.2	1	4071 150
29	4061	0.2	1	3926 135
30	3644	0.2	1	3515 129
31	4125	0.2	1	3992 133
32	3988	0.2	1	3860 128
33	3723	0.2	1	3581 142
34	3899	0.2	1	3778 121
35	3731	0.2	1	3597 134
36	4574	0.2	1	4449 125
37	3277	0.2	1	3187 90
38	3583	0.2	1	3481 102
39	4172	0.2	1	4060 112
40	3582	0.2	1	3477 105
41	3569	0.2	1	3472 97
42	3552	0.2	1	3451 101
43	4010	0.2	1	3849 161
44	3486	0.2	1	3361 125
45	4375	0.2	1	4225 150
46	4434	0.2	1	4266 168
47	3780	0.2	1	3675 105
48	3452	0.2	1	3324 128
49	3745	0.2	1	3608 137
50	3689	0.2	1	3544 145
51	3685	0.2	1	3563 122
52	4575	0.2	1	4408 167
53	3833	0.2	1	3703 130
54	4319	0.2	1	4193 126
55	3126	0.2	1	3029 97
56	3599	0.2	1	3484 115
57	4044	0.2	1	3947 97
58	2706	0.2	1	2645 61
59	3022	0.2	1	2956 66
60	3246	0.2	1	3148 98
61	3041	0.2	1	2965 76
62	3106	0.2	1	3032 74
63	5139	0.2	1	5058 81
64	2442	0.2	1	2389 53
65	2773	0.2	1	2706 67
66	2283	0.2	1	2224 59
67	3280	0.2	1	3216 64
68	3041	0.2	1	2975 66
69	3088	0.2	1	3022 66
70	2714	0.2	1	2658 56
71	3221	0.2	1	3137 84
72	3134	0.2	1	3050 84
73	3359	0.2	1	3243 116
74	3650	0.2	1	3535 115
75	5232	0.2	1	5023 209
76	43141	0.2	1	42708 433
77	1983	0.2	1	1889 94
78	255	0.2	1	216 39
79	215	0.2	1	179 36
80	184	0.2	1	158 26
81	191	0.2	1	157 34
82	161	0.2	1	138 23
83	224	0.2	1	200 24
84	437	0.2	1	407 30
85	363	0.2	1	343 20
86	456	0.2	1	420 36
87	354	0.2	1	327 27
88	249	0.2	1	221 28
89	161	0.2	1	140 21
90	99	0.2	1	79 20
91	71	0.2	1	50 21
92	74	0.2	1	53 21
93	77	0.2	1	52 25
94	64	0.2	1	33 31
95	86	0.2	1	56 30
96	66	0.2	1	41 25
97	57	0.2	1	34 23
98	45	0.2	1	22 23
99	57	0.2	1	34 23
100	49	0.2	1	30 19
101	62	0.2	1	27 35
102	45	0.2	1	28 17
103	62	0.2	1	38 24
104	44	0.2	1	19 25
105	57	0.2	1	29 28
106	37	0.2	1	14 23
107	45	0.2	1	20 25
108	27	0.2	1	9 18
109	36	0.2	1	10 26
110	44	0.2	1	15 29
111	41	0.2	1	8 33
112	27	0.2	1	9 18
113	31	0.2	1	10 21
114	24	0.2	1	5 19
115	40	0.2	1	16 24
116	32	0.2	1	4 28
117	37	0.2	1	10 27
118	18	0.2	1	1 17
119	28	0.2	1	8 20
120	26	0.2	1	3 23
121	46	0.2	1	11 35
122	24	0.2	1	4 20
123	38	0.2	1	7 31
124	33	0.2	1	5 28
125	39	0.2	1	9 30
126	29	0.2	1	3 26
127	21	0.2	1	4 17
128	23	0.2	1	2 21
129	28	0.2	1	0 28
130	26	0.2	1	4 22
131	30	0.2	1	2 28
132	23	0.2	1	1 22
133	23	0.2	1	4 19
134	26	0.2	1	3 23
135	7	0.2	1	0 7
136	19	0.2	1	0 19
137	27	0.2	1	1 26
138	17	0.2	1	1 16
139	4	0.2	1	1 3
140	18	0.2	1	0 18

[M::process] read 113712 sequences (13778116 bp)...
[M::process] 0 single-end sequences; 113712 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 32493, 21, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (365, 721, 4227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11951)
[M::mem_pestat] mean and std.dev: (2018.69, 2385.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15813)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (173, 277, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 860)
[M::mem_pestat] mean and std.dev: (298.00, 159.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1089)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (19, 53, 273)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 781)
[M::mem_pestat] mean and std.dev: (57.76, 65.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (304, 689, 2997)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8383)
[M::mem_pestat] mean and std.dev: (1553.20, 1688.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11076)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 113712 reads in 155.680 CPU sec, 22.249 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0479\tPL:Illumina\tPU:x\tLB:pherring\tSM:0479.PWS17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1810.624 sec; CPU: 7116.612 sec
[bam_sort_core] merging from 2 files and 1 in-memory blocks...
