==========================================
SLURM_JOB_ID = 5435887
SLURM_NODELIST = c10-76
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
900
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 616618 sequences (80000099 bp)...
[M::process] 0 single-end sequences; 616618 paired-end sequences
[M::process] read 618094 sequences (80000014 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (48, 178498, 151, 44)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (219, 372, 1975)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5487)
[M::mem_pestat] mean and std.dev: (1197.65, 1592.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7566)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (195, 312, 437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 921)
[M::mem_pestat] mean and std.dev: (325.44, 167.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1163)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (38, 93, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1061)
[M::mem_pestat] mean and std.dev: (175.74, 216.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1402)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (259, 364, 3156)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8950)
[M::mem_pestat] mean and std.dev: (1455.42, 2051.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11847)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 616618 reads in 592.092 CPU sec, 125.024 real sec
[M::process] 0 single-end sequences; 618094 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (30, 177917, 175, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 365, 810)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2028)
[M::mem_pestat] mean and std.dev: (379.88, 295.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2637)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (194, 312, 439)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 929)
[M::mem_pestat] mean and std.dev: (325.32, 167.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1174)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (37, 162, 790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2296)
[M::mem_pestat] mean and std.dev: (302.83, 428.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3049)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (383, 596, 4272)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12050)
[M::mem_pestat] mean and std.dev: (2098.87, 2675.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15939)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 619220 sequences (80000045 bp)...
[M::mem_process_seqs] Processed 618094 reads in 589.292 CPU sec, 81.239 real sec
[M::process] 0 single-end sequences; 619220 paired-end sequences
[M::process] read 616446 sequences (80000263 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 179375, 159, 52)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (300, 655, 2415)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6645)
[M::mem_pestat] mean and std.dev: (1551.80, 1783.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8760)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (193, 310, 436)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 922)
[M::mem_pestat] mean and std.dev: (323.54, 166.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1165)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (46, 202, 789)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2275)
[M::mem_pestat] mean and std.dev: (306.32, 410.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3018)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (310, 458, 3793)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10759)
[M::mem_pestat] mean and std.dev: (1759.81, 2378.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14242)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 619220 reads in 576.132 CPU sec, 80.479 real sec
[M::process] 0 single-end sequences; 616446 paired-end sequences
[M::process] read 618956 sequences (80000195 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 177905, 164, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (316, 823, 4585)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13123)
[M::mem_pestat] mean and std.dev: (2095.16, 2527.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17392)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (194, 310, 437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 923)
[M::mem_pestat] mean and std.dev: (324.21, 167.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1166)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 200, 838)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2428)
[M::mem_pestat] mean and std.dev: (301.51, 417.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3223)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (245, 389, 1015)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2555)
[M::mem_pestat] mean and std.dev: (527.54, 521.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3325)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 616446 reads in 567.544 CPU sec, 76.083 real sec
[M::process] 0 single-end sequences; 618956 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (49, 178627, 145, 42)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (220, 461, 1917)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5311)
[M::mem_pestat] mean and std.dev: (1072.59, 1392.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7008)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (192, 310, 436)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 924)
[M::mem_pestat] mean and std.dev: (323.12, 166.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1168)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 237, 765)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2211)
[M::mem_pestat] mean and std.dev: (316.56, 410.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2934)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 769, 1666)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4424)
[M::mem_pestat] mean and std.dev: (1071.69, 1126.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5803)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 618956 reads in 575.184 CPU sec, 76.954 real sec
[M::process] read 631050 sequences (80000144 bp)...
[M::process] 0 single-end sequences; 631050 paired-end sequences
[M::process] read 630434 sequences (80000098 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (43, 180956, 166, 42)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (272, 479, 1829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4943)
[M::mem_pestat] mean and std.dev: (949.77, 1296.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6500)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (186, 294, 412)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 864)
[M::mem_pestat] mean and std.dev: (307.11, 155.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1090)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 150, 683)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1977)
[M::mem_pestat] mean and std.dev: (283.11, 392.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2624)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (241, 669, 3901)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11221)
[M::mem_pestat] mean and std.dev: (2124.29, 2600.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14881)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 631050 reads in 571.500 CPU sec, 78.219 real sec
[M::process] 0 single-end sequences; 630434 paired-end sequences
[M::process] read 631486 sequences (80000181 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 180673, 157, 54)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (308, 462, 933)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2183)
[M::mem_pestat] mean and std.dev: (497.67, 368.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2808)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (186, 295, 412)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 864)
[M::mem_pestat] mean and std.dev: (307.09, 155.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1090)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 215, 1206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3546)
[M::mem_pestat] mean and std.dev: (485.21, 769.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4716)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 572, 1317)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3499)
[M::mem_pestat] mean and std.dev: (553.29, 533.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4590)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 630434 reads in 584.484 CPU sec, 78.795 real sec
[M::process] 0 single-end sequences; 631486 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 180765, 164, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (284, 595, 2657)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7403)
[M::mem_pestat] mean and std.dev: (1255.48, 1707.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9776)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (185, 292, 409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 857)
[M::mem_pestat] mean and std.dev: (304.76, 154.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1081)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 132, 777)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2265)
[M::mem_pestat] mean and std.dev: (307.83, 444.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3009)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (245, 372, 3792)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10886)
[M::mem_pestat] mean and std.dev: (1673.24, 2186.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14433)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 631486 reads in 576.104 CPU sec, 77.139 real sec
[M::process] read 631080 sequences (80000083 bp)...
[M::process] 0 single-end sequences; 631080 paired-end sequences
Finished in 1013.05 s (311 us/read; 0.19 M reads/minute).

=== Summary ===

Total read pairs processed:          3,261,702
  Read 1 with adapter:                 420,406 (12.9%)
  Read 2 with adapter:                 403,851 (12.4%)
Pairs that were too short:             449,085 (13.8%)
Pairs written (passing filters):     2,812,617 (86.2%)

Total basepairs processed:   978,510,600 bp
  Read 1:   489,255,300 bp
  Read 2:   489,255,300 bp
Quality-trimmed:             212,779,700 bp (21.7%)
  Read 1:   106,389,850 bp
  Read 2:   106,389,850 bp
Total written (filtered):    721,449,087 bp (73.7%)
  Read 1:   368,940,378 bp
  Read 2:   352,508,709 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 420406 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 15.1%
  C: 35.5%
  G: 26.6%
  T: 22.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	60108	50964.1	0	60108
4	22326	12741.0	0	22326
5	8308	3185.3	0	8308
6	5847	796.3	0	5847
7	5101	199.1	0	5101
8	4625	49.8	0	4625
9	4385	12.4	0	4259 126
10	4614	3.1	1	4229 385
11	4643	0.8	1	4347 296
12	4754	0.2	1	4480 274
13	4683	0.2	1	4438 245
14	4629	0.2	1	4381 248
15	5095	0.2	1	4808 287
16	4915	0.2	1	4620 295
17	5169	0.2	1	4940 229
18	4625	0.2	1	4394 231
19	5157	0.2	1	4926 231
20	4978	0.2	1	4727 251
21	5680	0.2	1	5396 284
22	4994	0.2	1	4800 194
23	3818	0.2	1	3674 144
24	3652	0.2	1	3510 142
25	4547	0.2	1	4363 184
26	3983	0.2	1	3815 168
27	4831	0.2	1	4611 220
28	3864	0.2	1	3694 170
29	4807	0.2	1	4625 182
30	4680	0.2	1	4510 170
31	4029	0.2	1	3870 159
32	3691	0.2	1	3561 130
33	4783	0.2	1	4578 205
34	4941	0.2	1	4760 181
35	4886	0.2	1	4742 144
36	4652	0.2	1	4527 125
37	4910	0.2	1	4702 208
38	4545	0.2	1	4392 153
39	4468	0.2	1	4303 165
40	4847	0.2	1	4699 148
41	6363	0.2	1	6163 200
42	4827	0.2	1	4651 176
43	6001	0.2	1	5806 195
44	3512	0.2	1	3387 125
45	8320	0.2	1	8156 164
46	1280	0.2	1	1234 46
47	2578	0.2	1	2506 72
48	3058	0.2	1	2999 59
49	3563	0.2	1	3463 100
50	3817	0.2	1	3759 58
51	3403	0.2	1	3311 92
52	3066	0.2	1	3000 66
53	3552	0.2	1	3455 97
54	3450	0.2	1	3381 69
55	4108	0.2	1	4014 94
56	2779	0.2	1	2716 63
57	3800	0.2	1	3697 103
58	3174	0.2	1	3107 67
59	3338	0.2	1	3241 97
60	3304	0.2	1	3239 65
61	3419	0.2	1	3327 92
62	2866	0.2	1	2796 70
63	4438	0.2	1	4319 119
64	3570	0.2	1	3483 87
65	3064	0.2	1	2989 75
66	4200	0.2	1	4111 89
67	3425	0.2	1	3321 104
68	3099	0.2	1	2999 100
69	4114	0.2	1	3989 125
70	4517	0.2	1	4401 116
71	5976	0.2	1	5754 222
72	37148	0.2	1	36842 306
73	3184	0.2	1	3088 96
74	432	0.2	1	399 33
75	226	0.2	1	191 35
76	142	0.2	1	109 33
77	174	0.2	1	141 33
78	165	0.2	1	134 31
79	162	0.2	1	129 33
80	160	0.2	1	130 30
81	227	0.2	1	187 40
82	173	0.2	1	142 31
83	185	0.2	1	148 37
84	125	0.2	1	106 19
85	156	0.2	1	127 29
86	131	0.2	1	98 33
87	127	0.2	1	100 27
88	102	0.2	1	78 24
89	148	0.2	1	112 36
90	111	0.2	1	84 27
91	119	0.2	1	92 27
92	132	0.2	1	93 39
93	121	0.2	1	97 24
94	98	0.2	1	74 24
95	129	0.2	1	100 29
96	84	0.2	1	61 23
97	105	0.2	1	76 29
98	83	0.2	1	59 24
99	98	0.2	1	71 27
100	88	0.2	1	61 27
101	82	0.2	1	55 27
102	74	0.2	1	45 29
103	86	0.2	1	62 24
104	50	0.2	1	30 20
105	68	0.2	1	46 22
106	45	0.2	1	27 18
107	58	0.2	1	42 16
108	36	0.2	1	19 17
109	57	0.2	1	35 22
110	49	0.2	1	28 21
111	55	0.2	1	32 23
112	50	0.2	1	26 24
113	38	0.2	1	22 16
114	43	0.2	1	17 26
115	45	0.2	1	18 27
116	25	0.2	1	7 18
117	35	0.2	1	10 25
118	22	0.2	1	6 16
119	34	0.2	1	12 22
120	48	0.2	1	11 37
121	49	0.2	1	6 43
122	26	0.2	1	2 24
123	34	0.2	1	10 24
124	23	0.2	1	1 22
125	20	0.2	1	4 16
126	27	0.2	1	2 25
127	19	0.2	1	3 16
128	28	0.2	1	1 27
129	20	0.2	1	6 14
130	26	0.2	1	2 24
131	37	0.2	1	3 34
132	31	0.2	1	1 30
133	18	0.2	1	3 15
134	30	0.2	1	1 29
135	22	0.2	1	1 21
136	22	0.2	1	0 22
137	21	0.2	1	0 21
138	24	0.2	1	0 24
139	15	0.2	1	0 15
140	28	0.2	1	0 28

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 403851 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 14.8%
  C: 35.8%
  G: 26.1%
  T: 23.2%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	55178	50964.1	0	55178
4	19630	12741.0	0	19630
5	8052	3185.3	0	8052
6	5548	796.3	0	5548
7	4849	199.1	0	4849
8	4496	49.8	0	4496
9	4363	12.4	0	4281 82
10	4091	3.1	1	3791 300
11	4472	0.8	1	4259 213
12	4431	0.2	1	4216 215
13	4428	0.2	1	4251 177
14	4314	0.2	1	4076 238
15	5083	0.2	1	4834 249
16	4688	0.2	1	4397 291
17	4681	0.2	1	4470 211
18	4713	0.2	1	4475 238
19	5662	0.2	1	5360 302
20	4620	0.2	1	4443 177
21	3793	0.2	1	3636 157
22	4498	0.2	1	4316 182
23	3645	0.2	1	3532 113
24	4367	0.2	1	4184 183
25	4329	0.2	1	4161 168
26	4002	0.2	1	3878 124
27	4063	0.2	1	3934 129
28	4165	0.2	1	4003 162
29	4012	0.2	1	3867 145
30	3807	0.2	1	3664 143
31	4403	0.2	1	4248 155
32	4570	0.2	1	4415 155
33	3946	0.2	1	3780 166
34	3103	0.2	1	3010 93
35	4055	0.2	1	3901 154
36	4084	0.2	1	3968 116
37	3537	0.2	1	3420 117
38	4267	0.2	1	4135 132
39	3494	0.2	1	3393 101
40	3991	0.2	1	3886 105
41	3775	0.2	1	3657 118
42	3633	0.2	1	3505 128
43	3962	0.2	1	3817 145
44	3699	0.2	1	3572 127
45	4327	0.2	1	4153 174
46	4439	0.2	1	4290 149
47	3991	0.2	1	3866 125
48	3646	0.2	1	3538 108
49	3567	0.2	1	3454 113
50	3820	0.2	1	3720 100
51	3666	0.2	1	3544 122
52	4207	0.2	1	4044 163
53	3867	0.2	1	3752 115
54	4827	0.2	1	4711 116
55	3078	0.2	1	3003 75
56	3633	0.2	1	3534 99
57	4293	0.2	1	4181 112
58	2624	0.2	1	2564 60
59	2989	0.2	1	2925 64
60	3404	0.2	1	3337 67
61	3131	0.2	1	3053 78
62	3038	0.2	1	2966 72
63	5349	0.2	1	5230 119
64	2419	0.2	1	2361 58
65	2670	0.2	1	2607 63
66	2131	0.2	1	2078 53
67	3163	0.2	1	3075 88
68	2920	0.2	1	2844 76
69	3002	0.2	1	2916 86
70	2612	0.2	1	2549 63
71	3071	0.2	1	2999 72
72	2971	0.2	1	2880 91
73	3498	0.2	1	3375 123
74	3640	0.2	1	3512 128
75	5138	0.2	1	4930 208
76	39107	0.2	1	38693 414
77	2251	0.2	1	2169 82
78	284	0.2	1	251 33
79	173	0.2	1	153 20
80	162	0.2	1	134 28
81	162	0.2	1	133 29
82	148	0.2	1	121 27
83	195	0.2	1	163 32
84	294	0.2	1	269 25
85	321	0.2	1	292 29
86	378	0.2	1	349 29
87	340	0.2	1	309 31
88	237	0.2	1	212 25
89	156	0.2	1	129 27
90	94	0.2	1	71 23
91	101	0.2	1	66 35
92	76	0.2	1	51 25
93	89	0.2	1	61 28
94	57	0.2	1	42 15
95	78	0.2	1	42 36
96	51	0.2	1	28 23
97	69	0.2	1	42 27
98	47	0.2	1	35 12
99	57	0.2	1	32 25
100	77	0.2	1	56 21
101	61	0.2	1	38 23
102	56	0.2	1	31 25
103	52	0.2	1	32 20
104	44	0.2	1	18 26
105	45	0.2	1	28 17
106	37	0.2	1	15 22
107	36	0.2	1	18 18
108	46	0.2	1	14 32
109	47	0.2	1	23 24
110	36	0.2	1	11 25
111	32	0.2	1	16 16
112	42	0.2	1	18 24
113	32	0.2	1	18 14
114	36	0.2	1	12 24
115	35	0.2	1	13 22
116	26	0.2	1	13 13
117	34	0.2	1	10 24
118	26	0.2	1	6 20
119	33	0.2	1	13 20
120	33	0.2	1	3 30
121	37	0.2	1	10 27
122	26	0.2	1	9 17
123	30	0.2	1	9 21
124	10	0.2	1	0 10
125	24	0.2	1	5 19
126	26	0.2	1	6 20
127	22	0.2	1	5 17
128	15	0.2	1	4 11
129	22	0.2	1	4 18
130	26	0.2	1	1 25
131	22	0.2	1	4 18
132	19	0.2	1	2 17
133	22	0.2	1	3 19
134	21	0.2	1	2 19
135	19	0.2	1	1 18
136	25	0.2	1	1 24
137	15	0.2	1	2 13
138	20	0.2	1	0 20
139	12	0.2	1	0 12
140	15	0.2	1	0 15

[M::process] read 11850 sequences (1447965 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 180292, 170, 47)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 754, 4707)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13555)
[M::mem_pestat] mean and std.dev: (2295.03, 2675.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17979)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (184, 292, 409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 859)
[M::mem_pestat] mean and std.dev: (304.44, 155.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1084)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (38, 150, 682)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1970)
[M::mem_pestat] mean and std.dev: (298.88, 394.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2614)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 402, 758)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1824)
[M::mem_pestat] mean and std.dev: (364.41, 191.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2357)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 631080 reads in 595.348 CPU sec, 74.889 real sec
[M::process] 0 single-end sequences; 11850 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 3358, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (174, 279, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 837)
[M::mem_pestat] mean and std.dev: (290.45, 151.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1058)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 11850 reads in 11.780 CPU sec, 1.650 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0900\tPL:Illumina\tPU:x\tLB:pherring\tSM:0900.TB91 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1091.970 sec; CPU: 5249.340 sec
[bam_sort_core] merging from 2 files and 1 in-memory blocks...
