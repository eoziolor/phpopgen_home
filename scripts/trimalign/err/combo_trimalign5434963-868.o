==========================================
SLURM_JOB_ID = 5435855
SLURM_NODELIST = c11-71
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
868
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 689358 sequences (80000199 bp)...
[M::process] 0 single-end sequences; 689358 paired-end sequences
[M::process] read 691338 sequences (80000007 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 159569, 176, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (334, 562, 2162)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5818)
[M::mem_pestat] mean and std.dev: (1260.21, 1414.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7646)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 210, 421)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1053)
[M::mem_pestat] mean and std.dev: (284.22, 224.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1369)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 73, 394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1128)
[M::mem_pestat] mean and std.dev: (150.30, 223.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1495)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (219, 437, 1939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5379)
[M::mem_pestat] mean and std.dev: (977.54, 1351.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7099)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 689358 reads in 1141.344 CPU sec, 223.631 real sec
[M::process] 0 single-end sequences; 691338 paired-end sequences
[M::process] read 693410 sequences (80000113 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 159389, 170, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (221, 406, 2110)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5888)
[M::mem_pestat] mean and std.dev: (1016.91, 1420.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7777)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 208, 429)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1081)
[M::mem_pestat] mean and std.dev: (287.36, 230.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1407)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 80, 257)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 703)
[M::mem_pestat] mean and std.dev: (125.20, 157.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 926)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (221, 387, 945)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2393)
[M::mem_pestat] mean and std.dev: (405.11, 293.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3117)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 691338 reads in 1132.728 CPU sec, 200.242 real sec
[M::process] 0 single-end sequences; 693410 paired-end sequences
[M::process] read 691192 sequences (80000057 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (46, 160113, 164, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (169, 360, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3010)
[M::mem_pestat] mean and std.dev: (367.11, 342.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3957)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 209, 422)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1060)
[M::mem_pestat] mean and std.dev: (283.62, 224.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1379)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 97, 684)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1996)
[M::mem_pestat] mean and std.dev: (268.70, 435.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2652)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (263, 630, 3757)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10745)
[M::mem_pestat] mean and std.dev: (1909.79, 2654.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14239)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 693410 reads in 1237.604 CPU sec, 187.002 real sec
[M::process] 0 single-end sequences; 691192 paired-end sequences
[M::process] read 693592 sequences (80000178 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 159967, 151, 41)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (262, 404, 943)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2305)
[M::mem_pestat] mean and std.dev: (459.36, 353.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2986)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 211, 427)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1071)
[M::mem_pestat] mean and std.dev: (286.41, 227.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1393)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 87, 481)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1379)
[M::mem_pestat] mean and std.dev: (215.28, 324.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1828)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (248, 379, 1463)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3893)
[M::mem_pestat] mean and std.dev: (787.82, 966.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5108)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 691192 reads in 1265.252 CPU sec, 179.534 real sec
[M::process] 0 single-end sequences; 693592 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (53, 159961, 162, 53)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (281, 611, 2785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7793)
[M::mem_pestat] mean and std.dev: (1435.98, 1773.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10297)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 209, 430)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1084)
[M::mem_pestat] mean and std.dev: (288.08, 231.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1411)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 76, 604)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1754)
[M::mem_pestat] mean and std.dev: (236.38, 364.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2329)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (234, 445, 1719)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4689)
[M::mem_pestat] mean and std.dev: (809.36, 1116.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6174)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 694908 sequences (80000145 bp)...
[M::mem_process_seqs] Processed 693592 reads in 1222.060 CPU sec, 252.599 real sec
[M::process] 0 single-end sequences; 694908 paired-end sequences
[M::process] read 690244 sequences (80000021 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (49, 160558, 141, 39)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (227, 425, 2084)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5798)
[M::mem_pestat] mean and std.dev: (992.89, 1419.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7655)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 211, 425)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1065)
[M::mem_pestat] mean and std.dev: (285.75, 225.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1385)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 83, 309)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 859)
[M::mem_pestat] mean and std.dev: (166.20, 212.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1134)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (160, 276, 1170)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3190)
[M::mem_pestat] mean and std.dev: (356.42, 332.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4200)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 694908 reads in 1281.060 CPU sec, 171.445 real sec
[M::process] 0 single-end sequences; 690244 paired-end sequences
[M::process] read 693432 sequences (80000109 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (62, 158499, 157, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (219, 530, 1861)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5145)
[M::mem_pestat] mean and std.dev: (941.48, 1260.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6787)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 213, 428)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1074)
[M::mem_pestat] mean and std.dev: (287.47, 226.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 88, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1119)
[M::mem_pestat] mean and std.dev: (193.63, 257.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1481)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (301, 636, 1633)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4297)
[M::mem_pestat] mean and std.dev: (890.90, 967.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5629)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 690244 reads in 1280.404 CPU sec, 186.608 real sec
[M::process] 0 single-end sequences; 693432 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (47, 159466, 146, 51)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 567, 1230)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3288)
[M::mem_pestat] mean and std.dev: (608.65, 665.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4317)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 209, 423)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1061)
[M::mem_pestat] mean and std.dev: (284.23, 225.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1380)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (39, 139, 400)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1122)
[M::mem_pestat] mean and std.dev: (174.48, 224.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1483)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (164, 350, 3061)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8855)
[M::mem_pestat] mean and std.dev: (1569.47, 2193.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11752)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 692148 sequences (80000019 bp)...
[M::mem_process_seqs] Processed 693432 reads in 1241.856 CPU sec, 188.848 real sec
[M::process] 0 single-end sequences; 692148 paired-end sequences
[M::process] read 691450 sequences (80000063 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 159965, 163, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (255, 372, 747)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1731)
[M::mem_pestat] mean and std.dev: (355.73, 205.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2223)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 217, 431)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1079)
[M::mem_pestat] mean and std.dev: (290.11, 227.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1403)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 52, 363)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1035)
[M::mem_pestat] mean and std.dev: (175.23, 261.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1371)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (179, 441, 3162)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9128)
[M::mem_pestat] mean and std.dev: (1784.83, 2195.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12111)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 692148 reads in 1235.200 CPU sec, 181.297 real sec
[M::process] 0 single-end sequences; 691450 paired-end sequences
Finished in 2130.29 s (500 us/read; 0.12 M reads/minute).

=== Summary ===

Total read pairs processed:          4,257,347
  Read 1 with adapter:               1,287,464 (30.2%)
  Read 2 with adapter:               1,250,457 (29.4%)
Pairs that were too short:             482,810 (11.3%)
Pairs written (passing filters):     3,774,537 (88.7%)

Total basepairs processed: 1,277,204,100 bp
  Read 1:   638,602,050 bp
  Read 2:   638,602,050 bp
Quality-trimmed:             290,531,304 bp (22.7%)
  Read 1:   145,265,652 bp
  Read 2:   145,265,652 bp
Total written (filtered):    872,310,383 bp (68.3%)
  Read 1:   444,263,511 bp
  Read 2:   428,046,872 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1287464 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 7.9%
  C: 44.5%
  G: 32.3%
  T: 15.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	60797	66521.0	0	60797
4	27865	16630.3	0	27865
5	13383	4157.6	0	13383
6	11067	1039.4	0	11067
7	11078	259.8	0	11078
8	10612	65.0	0	10612
9	9861	16.2	0	9769 92
10	9280	4.1	1	8825 455
11	10639	1.0	1	10234 405
12	11790	0.3	1	11232 558
13	10658	0.3	1	10157 501
14	12550	0.3	1	11700 850
15	13531	0.3	1	12572 959
16	15664	0.3	1	14051 1613
17	12644	0.3	1	12170 474
18	12194	0.3	1	11569 625
19	13472	0.3	1	13029 443
20	13872	0.3	1	13242 630
21	13374	0.3	1	12836 538
22	16251	0.3	1	15594 657
23	8906	0.3	1	8720 186
24	9854	0.3	1	9637 217
25	12165	0.3	1	11769 396
26	9267	0.3	1	9033 234
27	12843	0.3	1	12258 585
28	9968	0.3	1	9746 222
29	13189	0.3	1	12685 504
30	16335	0.3	1	15844 491
31	11488	0.3	1	11192 296
32	13294	0.3	1	12990 304
33	13440	0.3	1	13022 418
34	12532	0.3	1	12267 265
35	13661	0.3	1	13376 285
36	14551	0.3	1	14307 244
37	11246	0.3	1	11051 195
38	13089	0.3	1	12832 257
39	11143	0.3	1	10976 167
40	11131	0.3	1	10902 229
41	14338	0.3	1	13983 355
42	15145	0.3	1	14868 277
43	13065	0.3	1	12868 197
44	11007	0.3	1	10818 189
45	25766	0.3	1	25252 514
46	5728	0.3	1	5596 132
47	9593	0.3	1	9341 252
48	10954	0.3	1	10763 191
49	14278	0.3	1	14003 275
50	11900	0.3	1	11717 183
51	12111	0.3	1	11866 245
52	11921	0.3	1	11738 183
53	13979	0.3	1	13714 265
54	12355	0.3	1	12131 224
55	14761	0.3	1	14560 201
56	10879	0.3	1	10723 156
57	14159	0.3	1	13922 237
58	12764	0.3	1	12549 215
59	14430	0.3	1	14164 266
60	11737	0.3	1	11584 153
61	14172	0.3	1	13922 250
62	12085	0.3	1	11898 187
63	18244	0.3	1	17991 253
64	14201	0.3	1	14056 145
65	13421	0.3	1	13257 164
66	20253	0.3	1	20032 221
67	14343	0.3	1	14119 224
68	11691	0.3	1	11510 181
69	17773	0.3	1	17282 491
70	19411	0.3	1	19023 388
71	29520	0.3	1	28582 938
72	274852	0.3	1	273389 1463
73	6853	0.3	1	6594 259
74	664	0.3	1	599 65
75	449	0.3	1	390 59
76	444	0.3	1	388 56
77	734	0.3	1	661 73
78	720	0.3	1	653 67
79	1028	0.3	1	936 92
80	985	0.3	1	920 65
81	1314	0.3	1	1227 87
82	1214	0.3	1	1134 80
83	1433	0.3	1	1301 132
84	1111	0.3	1	1037 74
85	1213	0.3	1	1109 104
86	934	0.3	1	860 74
87	1067	0.3	1	948 119
88	764	0.3	1	700 64
89	1039	0.3	1	943 96
90	793	0.3	1	718 75
91	1006	0.3	1	902 104
92	719	0.3	1	659 60
93	945	0.3	1	866 79
94	682	0.3	1	636 46
95	936	0.3	1	841 95
96	657	0.3	1	601 56
97	800	0.3	1	706 94
98	616	0.3	1	575 41
99	765	0.3	1	690 75
100	514	0.3	1	455 59
101	719	0.3	1	640 79
102	455	0.3	1	396 59
103	673	0.3	1	590 83
104	416	0.3	1	367 49
105	575	0.3	1	511 64
106	325	0.3	1	298 27
107	535	0.3	1	468 67
108	308	0.3	1	273 35
109	461	0.3	1	415 46
110	248	0.3	1	214 34
111	402	0.3	1	344 58
112	220	0.3	1	183 37
113	299	0.3	1	268 31
114	173	0.3	1	135 38
115	223	0.3	1	190 33
116	127	0.3	1	97 30
117	177	0.3	1	140 37
118	100	0.3	1	67 33
119	156	0.3	1	129 27
120	83	0.3	1	62 21
121	137	0.3	1	100 37
122	53	0.3	1	32 21
123	117	0.3	1	83 34
124	43	0.3	1	21 22
125	70	0.3	1	37 33
126	32	0.3	1	14 18
127	63	0.3	1	36 27
128	28	0.3	1	11 17
129	40	0.3	1	15 25
130	33	0.3	1	6 27
131	39	0.3	1	13 26
132	29	0.3	1	4 25
133	30	0.3	1	11 19
134	23	0.3	1	1 22
135	31	0.3	1	8 23
136	18	0.3	1	1 17
137	21	0.3	1	3 18
138	26	0.3	1	0 26
139	16	0.3	1	2 14
140	21	0.3	1	0 21

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1250457 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 7.9%
  C: 45.2%
  G: 31.4%
  T: 15.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	55074	66521.0	0	55074
4	25529	16630.3	0	25529
5	12457	4157.6	0	12457
6	10468	1039.4	0	10468
7	9883	259.8	0	9883
8	9001	65.0	0	9001
9	9081	16.2	0	9002 79
10	8589	4.1	1	8172 417
11	9649	1.0	1	9296 353
12	11087	0.3	1	10585 502
13	9402	0.3	1	8956 446
14	11078	0.3	1	10398 680
15	11867	0.3	1	11102 765
16	11881	0.3	1	11048 833
17	11908	0.3	1	11355 553
18	9949	0.3	1	9520 429
19	17709	0.3	1	16629 1080
20	11857	0.3	1	11470 387
21	9097	0.3	1	8884 213
22	10388	0.3	1	10030 358
23	9340	0.3	1	9090 250
24	11200	0.3	1	10814 386
25	11344	0.3	1	10970 374
26	10413	0.3	1	10197 216
27	9619	0.3	1	9422 197
28	10452	0.3	1	10206 246
29	9487	0.3	1	9292 195
30	9468	0.3	1	9248 220
31	10855	0.3	1	10613 242
32	11012	0.3	1	10766 246
33	9496	0.3	1	9275 221
34	9099	0.3	1	8900 199
35	10721	0.3	1	10455 266
36	10685	0.3	1	10458 227
37	10256	0.3	1	9984 272
38	10882	0.3	1	10594 288
39	11056	0.3	1	10685 371
40	10599	0.3	1	10298 301
41	12304	0.3	1	11725 579
42	10945	0.3	1	10556 389
43	13467	0.3	1	12715 752
44	11864	0.3	1	11379 485
45	14766	0.3	1	14041 725
46	17003	0.3	1	16288 715
47	12579	0.3	1	12258 321
48	10396	0.3	1	10118 278
49	12872	0.3	1	12465 407
50	12106	0.3	1	11726 380
51	13812	0.3	1	13279 533
52	15783	0.3	1	15197 586
53	13854	0.3	1	13459 395
54	16717	0.3	1	16205 512
55	12261	0.3	1	11938 323
56	14096	0.3	1	13723 373
57	17174	0.3	1	16804 370
58	10578	0.3	1	10376 202
59	12126	0.3	1	11852 274
60	12948	0.3	1	12688 260
61	12463	0.3	1	12205 258
62	10880	0.3	1	10635 245
63	18900	0.3	1	18548 352
64	8348	0.3	1	8191 157
65	11579	0.3	1	11345 234
66	10078	0.3	1	9879 199
67	13983	0.3	1	13644 339
68	11687	0.3	1	11454 233
69	13753	0.3	1	13498 255
70	11356	0.3	1	11190 166
71	14551	0.3	1	14166 385
72	12461	0.3	1	12112 349
73	16383	0.3	1	15674 709
74	16276	0.3	1	15666 610
75	32583	0.3	1	31168 1415
76	281618	0.3	1	277892 3726
77	5790	0.3	1	5427 363
78	609	0.3	1	554 55
79	542	0.3	1	493 49
80	504	0.3	1	473 31
81	619	0.3	1	563 56
82	515	0.3	1	466 49
83	774	0.3	1	713 61
84	1304	0.3	1	1259 45
85	1368	0.3	1	1287 81
86	1629	0.3	1	1566 63
87	1486	0.3	1	1410 76
88	1040	0.3	1	977 63
89	669	0.3	1	611 58
90	406	0.3	1	365 41
91	415	0.3	1	355 60
92	284	0.3	1	246 38
93	385	0.3	1	339 46
94	301	0.3	1	253 48
95	395	0.3	1	336 59
96	250	0.3	1	207 43
97	335	0.3	1	277 58
98	258	0.3	1	207 51
99	311	0.3	1	256 55
100	230	0.3	1	192 38
101	287	0.3	1	239 48
102	185	0.3	1	140 45
103	243	0.3	1	194 49
104	185	0.3	1	148 37
105	216	0.3	1	167 49
106	135	0.3	1	109 26
107	165	0.3	1	128 37
108	118	0.3	1	81 37
109	175	0.3	1	143 32
110	135	0.3	1	96 39
111	162	0.3	1	122 40
112	118	0.3	1	77 41
113	145	0.3	1	108 37
114	92	0.3	1	56 36
115	127	0.3	1	91 36
116	69	0.3	1	46 23
117	99	0.3	1	55 44
118	62	0.3	1	37 25
119	73	0.3	1	44 29
120	55	0.3	1	27 28
121	84	0.3	1	54 30
122	56	0.3	1	26 30
123	77	0.3	1	52 25
124	29	0.3	1	10 19
125	58	0.3	1	29 29
126	38	0.3	1	14 24
127	41	0.3	1	22 19
128	26	0.3	1	7 19
129	37	0.3	1	19 18
130	29	0.3	1	3 26
131	41	0.3	1	15 26
132	30	0.3	1	4 26
133	25	0.3	1	7 18
134	17	0.3	1	1 16
135	25	0.3	1	4 21
136	24	0.3	1	3 21
137	15	0.3	1	5 10
138	22	0.3	1	0 22
139	14	0.3	1	3 11
140	16	0.3	1	2 14

[M::process] read 628002 sequences (72309472 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (43, 158746, 157, 40)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 496, 924)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2406)
[M::mem_pestat] mean and std.dev: (420.14, 313.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3147)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 215, 433)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1087)
[M::mem_pestat] mean and std.dev: (291.30, 230.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1414)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 72, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1021)
[M::mem_pestat] mean and std.dev: (140.35, 199.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1351)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 520, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6653)
[M::mem_pestat] mean and std.dev: (1154.42, 1430.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8775)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 691450 reads in 1252.888 CPU sec, 176.580 real sec
[M::process] 0 single-end sequences; 628002 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (58, 144515, 172, 29)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 574, 2731)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7807)
[M::mem_pestat] mean and std.dev: (1415.23, 1843.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10345)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 213, 430)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1082)
[M::mem_pestat] mean and std.dev: (288.00, 228.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1408)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 83, 426)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1212)
[M::mem_pestat] mean and std.dev: (191.46, 265.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1605)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (198, 446, 1810)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5034)
[M::mem_pestat] mean and std.dev: (723.31, 843.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6646)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 628002 reads in 1088.024 CPU sec, 167.378 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0868\tPL:Illumina\tPU:x\tLB:pherring\tSM:0868.TB96 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2499.386 sec; CPU: 13387.836 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
