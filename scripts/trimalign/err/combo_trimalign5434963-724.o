==========================================
SLURM_JOB_ID = 5435711
SLURM_NODELIST = c11-86
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
724
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 636622 sequences (80000202 bp)...
[M::process] 0 single-end sequences; 636622 paired-end sequences
[M::process] read 639406 sequences (80000060 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 185276, 145, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 317, 1983)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5547)
[M::mem_pestat] mean and std.dev: (1029.69, 1474.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7329)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 234, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 774)
[M::mem_pestat] mean and std.dev: (256.17, 149.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 986)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 72, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1016)
[M::mem_pestat] mean and std.dev: (132.53, 176.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1344)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 367, 713)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1733)
[M::mem_pestat] mean and std.dev: (324.83, 210.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2243)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 636622 reads in 606.832 CPU sec, 108.701 real sec
[M::process] 0 single-end sequences; 639406 paired-end sequences
[M::process] read 641874 sequences (80000050 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 186246, 124, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 373, 3614)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10474)
[M::mem_pestat] mean and std.dev: (1712.00, 2378.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13904)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 234, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 779)
[M::mem_pestat] mean and std.dev: (256.36, 150.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 993)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (35, 130, 485)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1385)
[M::mem_pestat] mean and std.dev: (199.14, 248.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1835)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 489, 1901)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5291)
[M::mem_pestat] mean and std.dev: (1010.67, 1337.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6986)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 639406 reads in 587.468 CPU sec, 110.037 real sec
[M::process] 0 single-end sequences; 641874 paired-end sequences
[M::process] read 637352 sequences (80000050 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 186702, 160, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (152, 339, 882)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2342)
[M::mem_pestat] mean and std.dev: (440.87, 446.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3072)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 236, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 789)
[M::mem_pestat] mean and std.dev: (258.70, 152.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1006)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 104, 828)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2424)
[M::mem_pestat] mean and std.dev: (311.51, 477.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3222)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 455, 1653)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4547)
[M::mem_pestat] mean and std.dev: (719.41, 947.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5994)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 641874 reads in 605.524 CPU sec, 110.042 real sec
[M::process] 0 single-end sequences; 637352 paired-end sequences
[M::process] read 639728 sequences (80000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (43, 186212, 156, 44)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (232, 339, 1486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3994)
[M::mem_pestat] mean and std.dev: (763.95, 896.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5248)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 235, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 775)
[M::mem_pestat] mean and std.dev: (256.43, 149.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 987)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 103, 462)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1322)
[M::mem_pestat] mean and std.dev: (204.01, 252.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1752)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 396, 1399)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3705)
[M::mem_pestat] mean and std.dev: (642.87, 718.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4858)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 637352 reads in 566.768 CPU sec, 121.826 real sec
[M::process] 0 single-end sequences; 639728 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (41, 186272, 147, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (162, 295, 1893)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5355)
[M::mem_pestat] mean and std.dev: (861.29, 1315.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7086)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 230, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 771)
[M::mem_pestat] mean and std.dev: (252.79, 149.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 983)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (38, 157, 556)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1592)
[M::mem_pestat] mean and std.dev: (219.52, 287.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2110)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (234, 467, 1385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3687)
[M::mem_pestat] mean and std.dev: (794.96, 1030.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4916)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 640914 sequences (80000087 bp)...
[M::mem_process_seqs] Processed 639728 reads in 670.084 CPU sec, 174.430 real sec
[M::process] 0 single-end sequences; 640914 paired-end sequences
[M::process] read 644920 sequences (80000188 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 186068, 138, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 421, 3332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9636)
[M::mem_pestat] mean and std.dev: (1821.64, 2574.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12788)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 233, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 776)
[M::mem_pestat] mean and std.dev: (255.75, 150.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 989)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 56, 252)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (110.86, 136.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 927)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (141, 444, 2333)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6717)
[M::mem_pestat] mean and std.dev: (1204.61, 1615.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8909)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 640914 reads in 669.116 CPU sec, 93.008 real sec
[M::process] 0 single-end sequences; 644920 paired-end sequences
[M::process] read 643804 sequences (80000067 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 187512, 122, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (123, 243, 617)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1605)
[M::mem_pestat] mean and std.dev: (296.33, 254.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2099)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 234, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 763)
[M::mem_pestat] mean and std.dev: (254.55, 146.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 971)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 66, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1345)
[M::mem_pestat] mean and std.dev: (170.68, 243.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1784)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 400, 4829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14031)
[M::mem_pestat] mean and std.dev: (2132.61, 2931.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18632)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 644920 reads in 666.616 CPU sec, 94.345 real sec
[M::process] 0 single-end sequences; 643804 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 186919, 139, 39)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 214, 522)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1328)
[M::mem_pestat] mean and std.dev: (227.03, 161.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1731)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (141, 236, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 759)
[M::mem_pestat] mean and std.dev: (255.47, 145.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 965)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 114, 912)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2674)
[M::mem_pestat] mean and std.dev: (330.66, 481.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3555)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (190, 312, 1346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3658)
[M::mem_pestat] mean and std.dev: (435.48, 448.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4814)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 643804 reads in 677.048 CPU sec, 96.940 real sec
[M::process] read 644192 sequences (80000033 bp)...
[M::process] 0 single-end sequences; 644192 paired-end sequences
[M::process] read 642674 sequences (80000028 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 186480, 130, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (124, 286, 624)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1624)
[M::mem_pestat] mean and std.dev: (318.05, 257.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2124)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (142, 238, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 769)
[M::mem_pestat] mean and std.dev: (257.76, 147.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 978)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 177, 683)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1991)
[M::mem_pestat] mean and std.dev: (293.90, 394.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2645)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (199, 399, 1017)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2653)
[M::mem_pestat] mean and std.dev: (473.50, 503.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3471)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 644192 reads in 639.144 CPU sec, 125.506 real sec
[M::process] 0 single-end sequences; 642674 paired-end sequences
[M::process] read 644462 sequences (80000032 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (29, 186773, 137, 45)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (108, 202, 578)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1518)
[M::mem_pestat] mean and std.dev: (264.73, 203.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1988)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 232, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 748)
[M::mem_pestat] mean and std.dev: (252.05, 142.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 951)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 185, 626)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1796)
[M::mem_pestat] mean and std.dev: (226.79, 311.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 342, 959)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2475)
[M::mem_pestat] mean and std.dev: (338.24, 255.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3233)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 642674 reads in 673.516 CPU sec, 92.684 real sec
[M::process] 0 single-end sequences; 644462 paired-end sequences
Finished in 1667.25 s (389 us/read; 0.15 M reads/minute).

=== Summary ===

Total read pairs processed:          4,285,819
  Read 1 with adapter:                 922,662 (21.5%)
  Read 2 with adapter:                 866,843 (20.2%)
Pairs that were too short:             475,009 (11.1%)
Pairs written (passing filters):     3,810,810 (88.9%)

Total basepairs processed: 1,285,745,700 bp
  Read 1:   642,872,850 bp
  Read 2:   642,872,850 bp
Quality-trimmed:             238,787,766 bp (18.6%)
  Read 1:   119,393,883 bp
  Read 2:   119,393,883 bp
Total written (filtered):    950,050,041 bp (73.9%)
  Read 1:   484,393,156 bp
  Read 2:   465,656,885 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 922662 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 14.4%
  C: 37.0%
  G: 27.1%
  T: 21.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	74442	66965.9	0	74442
4	30363	16741.5	0	30363
5	14195	4185.4	0	14195
6	11339	1046.3	0	11339
7	10674	261.6	0	10674
8	9800	65.4	0	9800
9	9620	16.3	0	9484 136
10	9511	4.1	1	9029 482
11	9959	1.0	1	9563 396
12	10293	0.3	1	9864 429
13	10006	0.3	1	9694 312
14	10206	0.3	1	9752 454
15	10883	0.3	1	10400 483
16	11088	0.3	1	10437 651
17	11038	0.3	1	10618 420
18	10018	0.3	1	9639 379
19	11085	0.3	1	10728 357
20	10997	0.3	1	10579 418
21	11842	0.3	1	11487 355
22	11105	0.3	1	10793 312
23	8753	0.3	1	8581 172
24	8705	0.3	1	8536 169
25	10088	0.3	1	9798 290
26	9084	0.3	1	8920 164
27	10322	0.3	1	9989 333
28	8789	0.3	1	8586 203
29	10745	0.3	1	10444 301
30	10773	0.3	1	10531 242
31	9420	0.3	1	9173 247
32	9500	0.3	1	9295 205
33	10623	0.3	1	10264 359
34	9305	0.3	1	9103 202
35	11294	0.3	1	10946 348
36	11612	0.3	1	11293 319
37	9182	0.3	1	9024 158
38	9667	0.3	1	9492 175
39	10040	0.3	1	9802 238
40	10186	0.3	1	9981 205
41	10727	0.3	1	10442 285
42	10513	0.3	1	10294 219
43	17905	0.3	1	17488 417
44	8930	0.3	1	8763 167
45	18850	0.3	1	18560 290
46	2832	0.3	1	2756 76
47	5686	0.3	1	5588 98
48	7516	0.3	1	7388 128
49	8481	0.3	1	8316 165
50	8865	0.3	1	8711 154
51	8132	0.3	1	7960 172
52	7757	0.3	1	7609 148
53	8703	0.3	1	8561 142
54	8197	0.3	1	8058 139
55	9523	0.3	1	9355 168
56	7294	0.3	1	7190 104
57	9406	0.3	1	9224 182
58	8203	0.3	1	8077 126
59	8490	0.3	1	8344 146
60	8106	0.3	1	7987 119
61	8546	0.3	1	8389 157
62	7663	0.3	1	7559 104
63	10544	0.3	1	10388 156
64	8599	0.3	1	8481 118
65	7801	0.3	1	7689 112
66	10170	0.3	1	10047 123
67	8750	0.3	1	8609 141
68	8170	0.3	1	8035 135
69	11004	0.3	1	10771 233
70	12191	0.3	1	12002 189
71	17592	0.3	1	17151 441
72	127149	0.3	1	126372 777
73	9960	0.3	1	9767 193
74	1259	0.3	1	1194 65
75	555	0.3	1	504 51
76	393	0.3	1	348 45
77	416	0.3	1	386 30
78	411	0.3	1	370 41
79	472	0.3	1	431 41
80	490	0.3	1	438 52
81	587	0.3	1	544 43
82	570	0.3	1	535 35
83	559	0.3	1	513 46
84	451	0.3	1	400 51
85	420	0.3	1	384 36
86	338	0.3	1	310 28
87	374	0.3	1	333 41
88	286	0.3	1	244 42
89	330	0.3	1	285 45
90	277	0.3	1	252 25
91	284	0.3	1	246 38
92	252	0.3	1	217 35
93	296	0.3	1	248 48
94	226	0.3	1	202 24
95	270	0.3	1	227 43
96	211	0.3	1	184 27
97	272	0.3	1	236 36
98	213	0.3	1	173 40
99	246	0.3	1	203 43
100	221	0.3	1	180 41
101	219	0.3	1	187 32
102	181	0.3	1	151 30
103	231	0.3	1	192 39
104	173	0.3	1	137 36
105	208	0.3	1	166 42
106	126	0.3	1	96 30
107	164	0.3	1	122 42
108	141	0.3	1	114 27
109	148	0.3	1	122 26
110	134	0.3	1	99 35
111	139	0.3	1	120 19
112	93	0.3	1	68 25
113	133	0.3	1	102 31
114	103	0.3	1	66 37
115	106	0.3	1	72 34
116	63	0.3	1	24 39
117	70	0.3	1	42 28
118	48	0.3	1	24 24
119	48	0.3	1	33 15
120	58	0.3	1	21 37
121	54	0.3	1	16 38
122	36	0.3	1	12 24
123	36	0.3	1	12 24
124	35	0.3	1	1 34
125	43	0.3	1	14 29
126	21	0.3	1	1 20
127	31	0.3	1	7 24
128	16	0.3	1	0 16
129	30	0.3	1	11 19
130	22	0.3	1	0 22
131	29	0.3	1	3 26
132	42	0.3	1	1 41
133	26	0.3	1	2 24
134	26	0.3	1	0 26
135	29	0.3	1	4 25
136	20	0.3	1	0 20
137	23	0.3	1	1 22
138	17	0.3	1	0 17
139	22	0.3	1	0 22
140	32	0.3	1	1 31

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 866843 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 14.3%
  C: 37.4%
  G: 26.6%
  T: 21.6%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	68716	66965.9	0	68716
4	25303	16741.5	0	25303
5	13091	4185.4	0	13091
6	9632	1046.3	0	9632
7	9638	261.6	0	9638
8	8413	65.4	0	8413
9	8192	16.3	0	8080 112
10	8435	4.1	1	7925 510
11	8991	1.0	1	8550 441
12	10086	0.3	1	9598 488
13	9130	0.3	1	8730 400
14	9836	0.3	1	9234 602
15	10322	0.3	1	9749 573
16	11245	0.3	1	10572 673
17	9978	0.3	1	9481 497
18	10010	0.3	1	9593 417
19	11055	0.3	1	10514 541
20	9260	0.3	1	8969 291
21	9022	0.3	1	8676 346
22	10105	0.3	1	9711 394
23	8319	0.3	1	8044 275
24	9787	0.3	1	9433 354
25	9122	0.3	1	8851 271
26	9216	0.3	1	8915 301
27	8450	0.3	1	8211 239
28	8935	0.3	1	8690 245
29	8636	0.3	1	8426 210
30	8964	0.3	1	8655 309
31	9932	0.3	1	9581 351
32	9720	0.3	1	9431 289
33	10054	0.3	1	9694 360
34	7110	0.3	1	6899 211
35	9120	0.3	1	8872 248
36	8472	0.3	1	8266 206
37	8646	0.3	1	8350 296
38	10621	0.3	1	10260 361
39	7600	0.3	1	7381 219
40	8920	0.3	1	8661 259
41	8276	0.3	1	7989 287
42	8658	0.3	1	8394 264
43	8769	0.3	1	8470 299
44	9087	0.3	1	8798 289
45	9348	0.3	1	9041 307
46	10492	0.3	1	10131 361
47	9345	0.3	1	9116 229
48	9581	0.3	1	9284 297
49	8934	0.3	1	8657 277
50	9516	0.3	1	9231 285
51	8536	0.3	1	8276 260
52	9892	0.3	1	9540 352
53	9246	0.3	1	8993 253
54	11798	0.3	1	11484 314
55	7019	0.3	1	6887 132
56	8869	0.3	1	8647 222
57	12184	0.3	1	11870 314
58	6020	0.3	1	5901 119
59	6973	0.3	1	6819 154
60	8058	0.3	1	7880 178
61	7538	0.3	1	7369 169
62	7206	0.3	1	7058 148
63	13023	0.3	1	12799 224
64	4480	0.3	1	4372 108
65	7033	0.3	1	6907 126
66	5003	0.3	1	4903 100
67	7097	0.3	1	6957 140
68	7820	0.3	1	7656 164
69	7455	0.3	1	7309 146
70	5941	0.3	1	5816 125
71	7433	0.3	1	7287 146
72	7152	0.3	1	6996 156
73	8337	0.3	1	8047 290
74	8842	0.3	1	8588 254
75	14076	0.3	1	13578 498
76	109243	0.3	1	108060 1183
77	10431	0.3	1	10163 268
78	1533	0.3	1	1452 81
79	870	0.3	1	806 64
80	679	0.3	1	630 49
81	672	0.3	1	618 54
82	510	0.3	1	472 38
83	563	0.3	1	524 39
84	1054	0.3	1	1012 42
85	1192	0.3	1	1144 48
86	1542	0.3	1	1508 34
87	1206	0.3	1	1159 47
88	998	0.3	1	945 53
89	626	0.3	1	591 35
90	354	0.3	1	322 32
91	260	0.3	1	229 31
92	209	0.3	1	179 30
93	250	0.3	1	207 43
94	190	0.3	1	146 44
95	201	0.3	1	172 29
96	167	0.3	1	144 23
97	171	0.3	1	139 32
98	143	0.3	1	115 28
99	165	0.3	1	129 36
100	168	0.3	1	129 39
101	163	0.3	1	138 25
102	136	0.3	1	104 32
103	135	0.3	1	103 32
104	96	0.3	1	68 28
105	109	0.3	1	86 23
106	89	0.3	1	62 27
107	118	0.3	1	79 39
108	89	0.3	1	61 28
109	112	0.3	1	82 30
110	81	0.3	1	49 32
111	101	0.3	1	73 28
112	86	0.3	1	64 22
113	76	0.3	1	55 21
114	68	0.3	1	43 25
115	67	0.3	1	43 24
116	50	0.3	1	26 24
117	70	0.3	1	42 28
118	52	0.3	1	31 21
119	44	0.3	1	22 22
120	53	0.3	1	19 34
121	44	0.3	1	16 28
122	30	0.3	1	10 20
123	32	0.3	1	8 24
124	24	0.3	1	5 19
125	32	0.3	1	11 21
126	26	0.3	1	4 22
127	33	0.3	1	9 24
128	28	0.3	1	1 27
129	32	0.3	1	3 29
130	23	0.3	1	1 22
131	23	0.3	1	3 20
132	37	0.3	1	4 33
133	16	0.3	1	1 15
134	18	0.3	1	0 18
135	23	0.3	1	3 20
136	21	0.3	1	1 20
137	23	0.3	1	1 22
138	26	0.3	1	1 25
139	16	0.3	1	0 16
140	23	0.3	1	0 23

[M::process] read 565672 sequences (70049192 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 186587, 151, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (215, 503, 1083)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2819)
[M::mem_pestat] mean and std.dev: (609.90, 608.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3687)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 232, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (251.65, 143.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 954)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 145, 542)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1564)
[M::mem_pestat] mean and std.dev: (232.06, 309.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2075)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 343, 2228)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6280)
[M::mem_pestat] mean and std.dev: (816.62, 1171.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8306)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 644462 reads in 666.640 CPU sec, 91.882 real sec
[M::process] 0 single-end sequences; 565672 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (43, 163873, 114, 26)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 354, 868)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2242)
[M::mem_pestat] mean and std.dev: (401.17, 436.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2929)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 233, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 757)
[M::mem_pestat] mean and std.dev: (252.99, 144.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 963)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 68, 424)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1210)
[M::mem_pestat] mean and std.dev: (167.15, 217.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1603)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (151, 465, 772)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2014)
[M::mem_pestat] mean and std.dev: (331.50, 221.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2635)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 565672 reads in 588.960 CPU sec, 83.120 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R[bam_sort_core] merging from 3 files and 1 in-memory blocks...
 @RG\tID:0724\tPL:Illumina\tPU:x\tLB:pherring\tSM:0724.SS96 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 1932.304 sec; CPU: 7628.944 sec
