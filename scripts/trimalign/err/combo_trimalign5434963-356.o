==========================================
SLURM_JOB_ID = 5435343
SLURM_NODELIST = c9-72
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
356
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 659990 sequences (80000017 bp)...
[M::process] 0 single-end sequences; 659990 paired-end sequences
[M::process] read 653628 sequences (80000048 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 173119, 167, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (315, 771, 3974)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11292)
[M::mem_pestat] mean and std.dev: (2289.96, 2662.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14951)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 233, 344)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 758)
[M::mem_pestat] mean and std.dev: (249.29, 137.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 965)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 57, 283)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 793)
[M::mem_pestat] mean and std.dev: (123.22, 162.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1048)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (219, 410, 3475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9987)
[M::mem_pestat] mean and std.dev: (1632.11, 2033.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13243)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 659990 reads in 1250.576 CPU sec, 202.774 real sec
[M::process] 0 single-end sequences; 653628 paired-end sequences
[M::process] read 654444 sequences (80000182 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (30, 171721, 175, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (173, 354, 2150)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6104)
[M::mem_pestat] mean and std.dev: (764.15, 1062.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8081)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 236, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 768)
[M::mem_pestat] mean and std.dev: (252.16, 140.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 978)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 69, 457)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1315)
[M::mem_pestat] mean and std.dev: (204.50, 290.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1744)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (367, 828, 3286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9124)
[M::mem_pestat] mean and std.dev: (2032.91, 2379.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12043)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 653628 reads in 1229.804 CPU sec, 170.683 real sec
[M::process] 0 single-end sequences; 654444 paired-end sequences
[M::process] read 658680 sequences (80000061 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (42, 172186, 184, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (301, 927, 3534)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10000)
[M::mem_pestat] mean and std.dev: (2134.33, 2515.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13233)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 237, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 772)
[M::mem_pestat] mean and std.dev: (253.21, 140.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 983)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 65, 400)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1142)
[M::mem_pestat] mean and std.dev: (190.52, 260.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1513)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (320, 544, 3614)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10202)
[M::mem_pestat] mean and std.dev: (2313.22, 2869.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13790)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 654444 reads in 1192.612 CPU sec, 167.885 real sec
[M::process] 0 single-end sequences; 658680 paired-end sequences
[M::process] read 655694 sequences (80000037 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (28, 172922, 168, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (280, 598, 2132)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5836)
[M::mem_pestat] mean and std.dev: (963.62, 1062.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7688)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 234, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 759)
[M::mem_pestat] mean and std.dev: (250.11, 138.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 966)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 65, 321)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 913)
[M::mem_pestat] mean and std.dev: (146.45, 196.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1209)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 516, 2522)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7156)
[M::mem_pestat] mean and std.dev: (1401.88, 1898.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9473)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 658680 reads in 1211.480 CPU sec, 171.216 real sec
[M::process] 0 single-end sequences; 655694 paired-end sequences
[M::process] read 659532 sequences (80000077 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 172249, 187, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (289, 716, 3784)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10774)
[M::mem_pestat] mean and std.dev: (2283.08, 2795.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14269)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 235, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 767)
[M::mem_pestat] mean and std.dev: (251.13, 139.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 977)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 66, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1103)
[M::mem_pestat] mean and std.dev: (188.28, 260.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1461)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (278, 711, 2580)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7184)
[M::mem_pestat] mean and std.dev: (1116.04, 1493.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9486)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 655694 reads in 1224.400 CPU sec, 175.334 real sec
[M::process] 0 single-end sequences; 659532 paired-end sequences
[M::process] read 665204 sequences (80000063 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 173835, 186, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (179, 807, 3526)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10220)
[M::mem_pestat] mean and std.dev: (2400.82, 2805.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13623)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 235, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 770)
[M::mem_pestat] mean and std.dev: (251.63, 140.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 981)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 60, 369)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1055)
[M::mem_pestat] mean and std.dev: (155.69, 216.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1398)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (493, 1035, 3680)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10054)
[M::mem_pestat] mean and std.dev: (2038.47, 2190.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13241)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 659532 reads in 1216.632 CPU sec, 182.112 real sec
[M::process] 0 single-end sequences; 665204 paired-end sequences
[M::process] read 659542 sequences (80000029 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (23, 174787, 202, 23)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (319, 521, 3516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9910)
[M::mem_pestat] mean and std.dev: (2052.39, 2410.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 236, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 773)
[M::mem_pestat] mean and std.dev: (252.14, 140.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 985)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 67, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1201)
[M::mem_pestat] mean and std.dev: (178.84, 259.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1592)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (230, 451, 1849)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5087)
[M::mem_pestat] mean and std.dev: (750.50, 803.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6706)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 665204 reads in 1125.452 CPU sec, 224.598 real sec
[M::process] 0 single-end sequences; 659542 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (26, 172520, 193, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (173, 591, 2978)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8588)
[M::mem_pestat] mean and std.dev: (1248.46, 1768.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11393)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 236, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 776)
[M::mem_pestat] mean and std.dev: (252.87, 141.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 989)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 71, 333)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 941)
[M::mem_pestat] mean and std.dev: (142.65, 183.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1245)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 557, 1986)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5634)
[M::mem_pestat] mean and std.dev: (809.86, 1095.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7458)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 660698 sequences (80000009 bp)...
[M::mem_process_seqs] Processed 659542 reads in 1103.236 CPU sec, 165.543 real sec
[M::process] 0 single-end sequences; 660698 paired-end sequences
[M::process] read 663500 sequences (80000226 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (26, 172885, 180, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (243, 834, 3655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10479)
[M::mem_pestat] mean and std.dev: (1890.46, 2087.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13891)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 237, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 775)
[M::mem_pestat] mean and std.dev: (253.90, 141.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 987)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 87, 363)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1027)
[M::mem_pestat] mean and std.dev: (160.22, 211.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1359)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 526, 2433)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6723)
[M::mem_pestat] mean and std.dev: (1070.41, 1239.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8868)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 660698 reads in 1086.080 CPU sec, 156.675 real sec
[M::process] 0 single-end sequences; 663500 paired-end sequences
[M::process] read 660996 sequences (80000020 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 174724, 174, 31)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (240, 455, 1833)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5019)
[M::mem_pestat] mean and std.dev: (977.38, 1169.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6612)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 236, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 773)
[M::mem_pestat] mean and std.dev: (252.45, 140.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 985)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 66, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 991)
[M::mem_pestat] mean and std.dev: (155.26, 202.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1312)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (195, 539, 3496)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10098)
[M::mem_pestat] mean and std.dev: (1991.90, 2608.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13399)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 663500 reads in 1111.868 CPU sec, 160.315 real sec
[M::process] 0 single-end sequences; 660996 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (31, 173037, 184, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (152, 236, 776)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2024)
[M::mem_pestat] mean and std.dev: (377.81, 400.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2648)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 234, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 773)
[M::mem_pestat] mean and std.dev: (251.57, 140.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 985)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 51, 227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (100.91, 135.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 824)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (341, 744, 4599)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13115)
[M::mem_pestat] mean and std.dev: (2205.90, 2294.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17373)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
Finished in 2300.05 s (510 us/read; 0.12 M reads/minute).

=== Summary ===

Total read pairs processed:          4,509,525
  Read 1 with adapter:                 944,025 (20.9%)
  Read 2 with adapter:                 865,401 (19.2%)
Pairs that were too short:             670,140 (14.9%)
Pairs written (passing filters):     3,839,385 (85.1%)

Total basepairs processed: 1,352,857,500 bp
  Read 1:   676,428,750 bp
  Read 2:   676,428,750 bp
Quality-trimmed:             357,311,026 bp (26.4%)
  Read 1:   178,655,513 bp
  Read 2:   178,655,513 bp
Total written (filtered):    931,356,644 bp (68.8%)
  Read 1:   480,398,005 bp
  Read 2:   450,958,639 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 944025 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.0%
  C: 38.5%
  G: 30.6%
  T: 19.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	77794	70461.3	0	77794
4	33294	17615.3	0	33294
5	14227	4403.8	0	14227
6	11888	1101.0	0	11888
7	10766	275.2	0	10766
8	10277	68.8	0	10277
9	9274	17.2	0	9147 127
10	9240	4.3	1	8728 512
11	10137	1.1	1	9733 404
12	10870	0.3	1	10381 489
13	10324	0.3	1	9865 459
14	11072	0.3	1	10502 570
15	11801	0.3	1	11136 665
16	12563	0.3	1	11618 945
17	12188	0.3	1	11703 485
18	10646	0.3	1	10180 466
19	12046	0.3	1	11580 466
20	11739	0.3	1	11249 490
21	12301	0.3	1	11785 516
22	13193	0.3	1	12711 482
23	8677	0.3	1	8453 224
24	8899	0.3	1	8668 231
25	11107	0.3	1	10744 363
26	8549	0.3	1	8282 267
27	10685	0.3	1	10215 470
28	9030	0.3	1	8811 219
29	11665	0.3	1	11213 452
30	13257	0.3	1	12802 455
31	9513	0.3	1	9202 311
32	11235	0.3	1	10872 363
33	10675	0.3	1	10306 369
34	10268	0.3	1	10000 268
35	10889	0.3	1	10621 268
36	11456	0.3	1	11193 263
37	8879	0.3	1	8703 176
38	10209	0.3	1	9969 240
39	9015	0.3	1	8825 190
40	9035	0.3	1	8847 188
41	10629	0.3	1	10323 306
42	10834	0.3	1	10561 273
43	10365	0.3	1	10177 188
44	8816	0.3	1	8603 213
45	19353	0.3	1	18937 416
46	4036	0.3	1	3921 115
47	6665	0.3	1	6480 185
48	7720	0.3	1	7551 169
49	9806	0.3	1	9572 234
50	8609	0.3	1	8449 160
51	9020	0.3	1	8818 202
52	8736	0.3	1	8586 150
53	9790	0.3	1	9579 211
54	8559	0.3	1	8416 143
55	10370	0.3	1	10205 165
56	7746	0.3	1	7614 132
57	9544	0.3	1	9354 190
58	9037	0.3	1	8896 141
59	9220	0.3	1	9058 162
60	8170	0.3	1	8034 136
61	9088	0.3	1	8891 197
62	7877	0.3	1	7756 121
63	11836	0.3	1	11611 225
64	9744	0.3	1	9607 137
65	7824	0.3	1	7678 146
66	11622	0.3	1	11468 154
67	9201	0.3	1	9026 175
68	7656	0.3	1	7533 123
69	11576	0.3	1	11294 282
70	12049	0.3	1	11816 233
71	16846	0.3	1	16330 516
72	127455	0.3	1	126628 827
73	3276	0.3	1	3133 143
74	369	0.3	1	312 57
75	256	0.3	1	215 41
76	195	0.3	1	163 32
77	298	0.3	1	241 57
78	307	0.3	1	265 42
79	437	0.3	1	391 46
80	438	0.3	1	390 48
81	569	0.3	1	521 48
82	511	0.3	1	464 47
83	564	0.3	1	493 71
84	415	0.3	1	363 52
85	495	0.3	1	434 61
86	349	0.3	1	305 44
87	386	0.3	1	325 61
88	297	0.3	1	246 51
89	367	0.3	1	310 57
90	283	0.3	1	235 48
91	371	0.3	1	310 61
92	231	0.3	1	194 37
93	344	0.3	1	292 52
94	265	0.3	1	221 44
95	347	0.3	1	289 58
96	218	0.3	1	182 36
97	282	0.3	1	237 45
98	172	0.3	1	146 26
99	291	0.3	1	237 54
100	200	0.3	1	148 52
101	222	0.3	1	191 31
102	153	0.3	1	125 28
103	239	0.3	1	191 48
104	141	0.3	1	106 35
105	198	0.3	1	157 41
106	107	0.3	1	80 27
107	167	0.3	1	128 39
108	108	0.3	1	82 26
109	143	0.3	1	108 35
110	105	0.3	1	75 30
111	149	0.3	1	115 34
112	76	0.3	1	49 27
113	106	0.3	1	75 31
114	67	0.3	1	34 33
115	87	0.3	1	56 31
116	63	0.3	1	27 36
117	70	0.3	1	46 24
118	52	0.3	1	22 30
119	73	0.3	1	44 29
120	50	0.3	1	20 30
121	55	0.3	1	29 26
122	38	0.3	1	10 28
123	56	0.3	1	24 32
124	35	0.3	1	5 30
125	37	0.3	1	13 24
126	39	0.3	1	6 33
127	34	0.3	1	6 28
128	29	0.3	1	2 27
129	38	0.3	1	7 31
130	28	0.3	1	3 25
131	27	0.3	1	5 22
132	23	0.3	1	0 23
133	22	0.3	1	2 20
134	26	0.3	1	1 25
135	34	0.3	1	6 28
136	18	0.3	1	0 18
137	31	0.3	1	1 30
138	29	0.3	1	1 28
139	14	0.3	1	1 13
140	21	0.3	1	0 21

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 865401 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.1%
  C: 38.5%
  G: 29.7%
  T: 19.6%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	74378	70461.3	0	74378
4	28164	17615.3	0	28164
5	13199	4403.8	0	13199
6	9579	1101.0	0	9579
7	9214	275.2	0	9214
8	8348	68.8	0	8348
9	7796	17.2	0	7687 109
10	7690	4.3	1	7209 481
11	8659	1.1	1	8225 434
12	9494	0.3	1	8979 515
13	9052	0.3	1	8545 507
14	9191	0.3	1	8678 513
15	10774	0.3	1	10049 725
16	10951	0.3	1	10245 706
17	10024	0.3	1	9532 492
18	9670	0.3	1	9260 410
19	12580	0.3	1	11882 698
20	10678	0.3	1	10229 449
21	8394	0.3	1	8046 348
22	9110	0.3	1	8756 354
23	8276	0.3	1	7961 315
24	9818	0.3	1	9405 413
25	9162	0.3	1	8834 328
26	9546	0.3	1	9153 393
27	8328	0.3	1	8039 289
28	8633	0.3	1	8357 276
29	8148	0.3	1	7894 254
30	8336	0.3	1	8069 267
31	9113	0.3	1	8818 295
32	9834	0.3	1	9535 299
33	8795	0.3	1	8558 237
34	6685	0.3	1	6497 188
35	8356	0.3	1	8096 260
36	8561	0.3	1	8316 245
37	7325	0.3	1	7130 195
38	9684	0.3	1	9395 289
39	7258	0.3	1	7035 223
40	8673	0.3	1	8390 283
41	8109	0.3	1	7760 349
42	8500	0.3	1	8162 338
43	8649	0.3	1	8259 390
44	9059	0.3	1	8663 396
45	10386	0.3	1	9910 476
46	10674	0.3	1	10247 427
47	10156	0.3	1	9813 343
48	7954	0.3	1	7716 238
49	8770	0.3	1	8482 288
50	9400	0.3	1	9117 283
51	9104	0.3	1	8816 288
52	10177	0.3	1	9848 329
53	10122	0.3	1	9784 338
54	12842	0.3	1	12451 391
55	7214	0.3	1	7006 208
56	10195	0.3	1	9883 312
57	12804	0.3	1	12494 310
58	7129	0.3	1	6962 167
59	6991	0.3	1	6842 149
60	8924	0.3	1	8692 232
61	7866	0.3	1	7669 197
62	6627	0.3	1	6482 145
63	14914	0.3	1	14670 244
64	4265	0.3	1	4139 126
65	5935	0.3	1	5824 111
66	4779	0.3	1	4676 103
67	7422	0.3	1	7250 172
68	7387	0.3	1	7255 132
69	7718	0.3	1	7571 147
70	5809	0.3	1	5686 123
71	7776	0.3	1	7577 199
72	7144	0.3	1	6958 186
73	8793	0.3	1	8474 319
74	9052	0.3	1	8799 253
75	12153	0.3	1	11659 494
76	115208	0.3	1	114221 987
77	2830	0.3	1	2678 152
78	487	0.3	1	443 44
79	427	0.3	1	382 45
80	393	0.3	1	357 36
81	431	0.3	1	376 55
82	374	0.3	1	342 32
83	566	0.3	1	521 45
84	926	0.3	1	887 39
85	931	0.3	1	891 40
86	1019	0.3	1	977 42
87	901	0.3	1	847 54
88	665	0.3	1	621 44
89	419	0.3	1	384 35
90	254	0.3	1	220 34
91	201	0.3	1	170 31
92	149	0.3	1	120 29
93	196	0.3	1	154 42
94	153	0.3	1	120 33
95	192	0.3	1	153 39
96	107	0.3	1	83 24
97	125	0.3	1	94 31
98	112	0.3	1	87 25
99	139	0.3	1	94 45
100	117	0.3	1	90 27
101	124	0.3	1	88 36
102	93	0.3	1	71 22
103	113	0.3	1	84 29
104	76	0.3	1	47 29
105	82	0.3	1	52 30
106	71	0.3	1	32 39
107	75	0.3	1	51 24
108	68	0.3	1	42 26
109	80	0.3	1	50 30
110	54	0.3	1	30 24
111	62	0.3	1	39 23
112	47	0.3	1	22 25
113	69	0.3	1	44 25
114	41	0.3	1	15 26
115	49	0.3	1	20 29
116	30	0.3	1	11 19
117	40	0.3	1	17 23
118	29	0.3	1	6 23
119	41	0.3	1	16 25
120	24	0.3	1	11 13
121	43	0.3	1	15 28
122	33	0.3	1	12 21
123	39	0.3	1	11 28
124	36	0.3	1	9 27
125	34	0.3	1	12 22
126	27	0.3	1	5 22
127	33	0.3	1	10 23
128	33	0.3	1	0 33
129	28	0.3	1	5 23
130	22	0.3	1	0 22
131	27	0.3	1	3 24
132	27	0.3	1	2 25
133	24	0.3	1	2 22
134	15	0.3	1	0 15
135	26	0.3	1	4 22
136	18	0.3	1	0 18
137	23	0.3	1	3 20
138	15	0.3	1	1 14
139	19	0.3	1	0 19
140	14	0.3	1	0 14

[M::process] read 426862 sequences (51355875 bp)...
[M::mem_process_seqs] Processed 660996 reads in 1095.612 CPU sec, 159.962 real sec
[M::process] 0 single-end sequences; 426862 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (22, 111647, 102, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (136, 279, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2938)
[M::mem_pestat] mean and std.dev: (338.33, 387.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3872)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 237, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 777)
[M::mem_pestat] mean and std.dev: (253.70, 141.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 990)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 111, 628)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1798)
[M::mem_pestat] mean and std.dev: (273.93, 384.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2383)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (379, 905, 5245)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14977)
[M::mem_pestat] mean and std.dev: (2412.00, 2707.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19843)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 426862 reads in 687.064 CPU sec, 98.025 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:0356\tPL:Illumina\tPU:x\tLB:pherring\tSM:0356.PWS07 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2415.142 sec; CPU: 13544.984 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
