==========================================
SLURM_JOB_ID = 5436201
SLURM_NODELIST = c8-70
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1214
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 686302 sequences (80000061 bp)...
[M::process] 0 single-end sequences; 686302 paired-end sequences
[M::process] read 689062 sequences (80000140 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 171057, 190, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (107, 320, 2913)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8525)
[M::mem_pestat] mean and std.dev: (1597.35, 2370.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11331)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 175, 289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 659)
[M::mem_pestat] mean and std.dev: (207.18, 133.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 844)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 53, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 600)
[M::mem_pestat] mean and std.dev: (98.40, 116.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (136, 237, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 844)
[M::mem_pestat] mean and std.dev: (229.80, 135.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1080)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 686302 reads in 1185.804 CPU sec, 165.486 real sec
[M::process] 0 single-end sequences; 689062 paired-end sequences
[M::process] read 688576 sequences (80000162 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 171480, 179, 40)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 303, 610)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1580)
[M::mem_pestat] mean and std.dev: (285.61, 196.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2065)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 173, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 654)
[M::mem_pestat] mean and std.dev: (205.17, 132.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 838)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 63, 203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 551)
[M::mem_pestat] mean and std.dev: (89.14, 102.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 220, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 913)
[M::mem_pestat] mean and std.dev: (211.31, 140.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1181)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 689062 reads in 1187.980 CPU sec, 157.835 real sec
[M::process] 0 single-end sequences; 688576 paired-end sequences
[M::process] read 688026 sequences (80000266 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (46, 171676, 192, 38)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (153, 274, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1116)
[M::mem_pestat] mean and std.dev: (283.02, 215.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1437)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 174, 289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 663)
[M::mem_pestat] mean and std.dev: (206.56, 133.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 850)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 67, 269)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (130.41, 165.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 992)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (166, 294, 375)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 793)
[M::mem_pestat] mean and std.dev: (249.44, 138.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1002)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 688576 reads in 1208.180 CPU sec, 161.203 real sec
[M::process] 0 single-end sequences; 688026 paired-end sequences
[M::process] read 685066 sequences (80000081 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (45, 171827, 146, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (225, 369, 2084)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5802)
[M::mem_pestat] mean and std.dev: (742.83, 1074.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7661)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 175, 289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 659)
[M::mem_pestat] mean and std.dev: (206.97, 133.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 844)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 61, 197)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 539)
[M::mem_pestat] mean and std.dev: (94.45, 114.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 710)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (214, 340, 2304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6484)
[M::mem_pestat] mean and std.dev: (1155.53, 1784.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8574)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 688026 reads in 1222.824 CPU sec, 162.593 real sec
[M::process] 0 single-end sequences; 685066 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 171369, 172, 29)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (76, 210, 449)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1195)
[M::mem_pestat] mean and std.dev: (208.22, 181.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1568)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 175, 290)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 664)
[M::mem_pestat] mean and std.dev: (207.58, 134.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 851)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 63, 186)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 504)
[M::mem_pestat] mean and std.dev: (85.44, 90.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 663)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (157, 201, 611)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1519)
[M::mem_pestat] mean and std.dev: (282.15, 232.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1973)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 687130 sequences (80000019 bp)...
[M::mem_process_seqs] Processed 685066 reads in 1228.816 CPU sec, 167.753 real sec
[M::process] 0 single-end sequences; 687130 paired-end sequences
[M::process] read 693554 sequences (80000116 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 172417, 158, 46)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (134, 235, 1078)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2966)
[M::mem_pestat] mean and std.dev: (398.06, 591.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3910)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 173, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 657)
[M::mem_pestat] mean and std.dev: (205.59, 133.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 842)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 66, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (103.62, 121.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 814)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (166, 293, 602)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1474)
[M::mem_pestat] mean and std.dev: (289.38, 196.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1910)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 687130 reads in 1228.664 CPU sec, 163.760 real sec
[M::process] 0 single-end sequences; 693554 paired-end sequences
[M::process] read 703188 sequences (80000190 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 173172, 182, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (140, 293, 635)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1625)
[M::mem_pestat] mean and std.dev: (307.77, 240.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2120)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 173, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (204.57, 131.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 831)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 77, 273)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 757)
[M::mem_pestat] mean and std.dev: (139.74, 173.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 999)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (124, 235, 819)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2209)
[M::mem_pestat] mean and std.dev: (347.11, 425.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2904)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 693554 reads in 1207.148 CPU sec, 164.638 real sec
[M::process] 0 single-end sequences; 703188 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (42, 173540, 181, 36)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (97, 221, 481)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1249)
[M::mem_pestat] mean and std.dev: (293.41, 264.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1633)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 173, 277)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (200.74, 124.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 58, 235)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 653)
[M::mem_pestat] mean and std.dev: (116.87, 145.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 862)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 186, 425)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1051)
[M::mem_pestat] mean and std.dev: (226.97, 195.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1364)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 706308 sequences (80000097 bp)...
[M::mem_process_seqs] Processed 703188 reads in 1235.212 CPU sec, 169.625 real sec
[M::process] 0 single-end sequences; 706308 paired-end sequences
[M::process] read 706762 sequences (80000172 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (58, 173747, 187, 43)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (124, 263, 468)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1156)
[M::mem_pestat] mean and std.dev: (260.24, 184.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1500)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 171, 275)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (198.79, 123.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 56, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 567)
[M::mem_pestat] mean and std.dev: (88.87, 106.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 747)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (172, 277, 494)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1138)
[M::mem_pestat] mean and std.dev: (293.55, 205.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1460)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 706308 reads in 1244.400 CPU sec, 168.127 real sec
[M::process] 0 single-end sequences; 706762 paired-end sequences
[M::process] read 704042 sequences (80000075 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (38, 174425, 202, 42)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (114, 192, 298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 666)
[M::mem_pestat] mean and std.dev: (198.55, 117.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 850)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 172, 276)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (199.89, 124.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 63, 264)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 730)
[M::mem_pestat] mean and std.dev: (109.54, 146.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 963)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (147, 281, 687)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1767)
[M::mem_pestat] mean and std.dev: (274.27, 202.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2307)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 706762 reads in 1231.440 CPU sec, 164.820 real sec
[M::process] 0 single-end sequences; 704042 paired-end sequences
[M::process] read 710164 sequences (80000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 173733, 185, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (128, 295, 671)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1757)
[M::mem_pestat] mean and std.dev: (259.53, 204.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2300)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 171, 274)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (198.49, 122.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 74, 274)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 770)
[M::mem_pestat] mean and std.dev: (132.81, 158.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1018)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (96, 201, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 588)
[M::mem_pestat] mean and std.dev: (172.55, 91.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 752)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 704042 reads in 1229.660 CPU sec, 167.802 real sec
[M::process] 0 single-end sequences; 710164 paired-end sequences
Finished in 2252.89 s (461 us/read; 0.13 M reads/minute).

=== Summary ===

Total read pairs processed:          4,888,135
  Read 1 with adapter:               1,526,645 (31.2%)
  Read 2 with adapter:               1,438,848 (29.4%)
Pairs that were too short:             652,650 (13.4%)
Pairs written (passing filters):     4,235,485 (86.6%)

Total basepairs processed: 1,466,440,500 bp
  Read 1:   733,220,250 bp
  Read 2:   733,220,250 bp
Quality-trimmed:             391,450,512 bp (26.7%)
  Read 1:   195,725,256 bp
  Read 2:   195,725,256 bp
Total written (filtered):    973,871,675 bp (66.4%)
  Read 1:   498,557,442 bp
  Read 2:   475,314,233 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1526645 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 8.7%
  C: 43.7%
  G: 31.6%
  T: 15.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	74382	76377.1	0	74382
4	32456	19094.3	0	32456
5	18187	4773.6	0	18187
6	14247	1193.4	0	14247
7	15800	298.3	0	15800
8	13716	74.6	0	13716
9	13442	18.6	0	13324 118
10	13635	4.7	1	12821 814
11	15377	1.2	1	14551 826
12	15886	0.3	1	14919 967
13	15847	0.3	1	14950 897
14	16518	0.3	1	15399 1119
15	18237	0.3	1	16996 1241
16	18379	0.3	1	16939 1440
17	19098	0.3	1	17919 1179
18	16448	0.3	1	15426 1022
19	18945	0.3	1	17919 1026
20	19153	0.3	1	18103 1050
21	23052	0.3	1	21830 1222
22	20886	0.3	1	19905 981
23	13687	0.3	1	13111 576
24	12510	0.3	1	12052 458
25	16969	0.3	1	16194 775
26	14680	0.3	1	14080 600
27	19437	0.3	1	18372 1065
28	14078	0.3	1	13470 608
29	20252	0.3	1	19088 1164
30	22166	0.3	1	21286 880
31	16386	0.3	1	15573 813
32	19162	0.3	1	18335 827
33	17295	0.3	1	16451 844
34	18241	0.3	1	17510 731
35	21416	0.3	1	20544 872
36	16167	0.3	1	15499 668
37	20159	0.3	1	19386 773
38	17143	0.3	1	16341 802
39	24072	0.3	1	22973 1099
40	16551	0.3	1	15869 682
41	26712	0.3	1	25577 1135
42	31214	0.3	1	30238 976
43	29115	0.3	1	28244 871
44	11074	0.3	1	10786 288
45	29098	0.3	1	28460 638
46	5450	0.3	1	5306 144
47	9873	0.3	1	9601 272
48	12099	0.3	1	11824 275
49	15284	0.3	1	14915 369
50	15277	0.3	1	14939 338
51	14502	0.3	1	14156 346
52	13226	0.3	1	12932 294
53	16216	0.3	1	15824 392
54	14810	0.3	1	14470 340
55	18965	0.3	1	18614 351
56	12231	0.3	1	11973 258
57	17718	0.3	1	17315 403
58	15073	0.3	1	14781 292
59	15956	0.3	1	15622 334
60	14530	0.3	1	14262 268
61	16308	0.3	1	15983 325
62	14148	0.3	1	13901 247
63	23938	0.3	1	23482 456
64	16991	0.3	1	16719 272
65	14907	0.3	1	14665 242
66	21659	0.3	1	21406 253
67	17872	0.3	1	17531 341
68	14840	0.3	1	14608 232
69	22883	0.3	1	22335 548
70	24778	0.3	1	24298 480
71	34992	0.3	1	34090 902
72	191757	0.3	1	190355 1402
73	15494	0.3	1	15092 402
74	2131	0.3	1	2035 96
75	997	0.3	1	913 84
76	665	0.3	1	595 70
77	846	0.3	1	760 86
78	667	0.3	1	594 73
79	940	0.3	1	842 98
80	795	0.3	1	727 68
81	1078	0.3	1	980 98
82	932	0.3	1	858 74
83	1042	0.3	1	956 86
84	718	0.3	1	635 83
85	762	0.3	1	684 78
86	615	0.3	1	555 60
87	749	0.3	1	635 114
88	564	0.3	1	511 53
89	709	0.3	1	623 86
90	481	0.3	1	419 62
91	610	0.3	1	531 79
92	437	0.3	1	379 58
93	552	0.3	1	476 76
94	381	0.3	1	343 38
95	554	0.3	1	475 79
96	379	0.3	1	329 50
97	528	0.3	1	439 89
98	334	0.3	1	291 43
99	471	0.3	1	406 65
100	272	0.3	1	236 36
101	423	0.3	1	372 51
102	250	0.3	1	218 32
103	368	0.3	1	297 71
104	190	0.3	1	167 23
105	383	0.3	1	320 63
106	167	0.3	1	132 35
107	282	0.3	1	230 52
108	154	0.3	1	116 38
109	229	0.3	1	192 37
110	151	0.3	1	111 40
111	210	0.3	1	174 36
112	120	0.3	1	87 33
113	182	0.3	1	151 31
114	83	0.3	1	61 22
115	112	0.3	1	86 26
116	60	0.3	1	40 20
117	112	0.3	1	78 34
118	64	0.3	1	30 34
119	91	0.3	1	58 33
120	53	0.3	1	26 27
121	86	0.3	1	54 32
122	38	0.3	1	15 23
123	70	0.3	1	39 31
124	32	0.3	1	10 22
125	64	0.3	1	36 28
126	27	0.3	1	6 21
127	34	0.3	1	15 19
128	33	0.3	1	5 28
129	37	0.3	1	17 20
130	27	0.3	1	2 25
131	38	0.3	1	13 25
132	31	0.3	1	0 31
133	11	0.3	1	1 10
134	22	0.3	1	3 19
135	25	0.3	1	2 23
136	29	0.3	1	2 27
137	22	0.3	1	1 21
138	31	0.3	1	0 31
139	13	0.3	1	1 12
140	30	0.3	1	0 30

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1438848 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 8.6%
  C: 43.7%
  G: 31.4%
  T: 16.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	68524	76377.1	0	68524
4	29345	19094.3	0	29345
5	17732	4773.6	0	17732
6	12998	1193.4	0	12998
7	13557	298.3	0	13557
8	12335	74.6	0	12335
9	13366	18.6	0	13269 97
10	12032	4.7	1	11400 632
11	14817	1.2	1	14089 728
12	14939	0.3	1	14049 890
13	14534	0.3	1	13729 805
14	15766	0.3	1	14769 997
15	19213	0.3	1	17926 1287
16	18412	0.3	1	17138 1274
17	17508	0.3	1	16542 966
18	16675	0.3	1	15838 837
19	19089	0.3	1	18020 1069
20	17308	0.3	1	16570 738
21	13238	0.3	1	12655 583
22	16838	0.3	1	16032 806
23	12900	0.3	1	12404 496
24	16586	0.3	1	15846 740
25	16865	0.3	1	16192 673
26	15569	0.3	1	15016 553
27	17030	0.3	1	16398 632
28	16718	0.3	1	16070 648
29	19824	0.3	1	19246 578
30	12084	0.3	1	11610 474
31	15484	0.3	1	14950 534
32	18481	0.3	1	17909 572
33	16413	0.3	1	15755 658
34	11729	0.3	1	11393 336
35	14837	0.3	1	14346 491
36	11874	0.3	1	11555 319
37	12943	0.3	1	12602 341
38	14691	0.3	1	14295 396
39	12953	0.3	1	12514 439
40	17661	0.3	1	17148 513
41	10876	0.3	1	10557 319
42	13212	0.3	1	12834 378
43	13826	0.3	1	13311 515
44	14837	0.3	1	14339 498
45	16525	0.3	1	15935 590
46	17509	0.3	1	16982 527
47	16560	0.3	1	16153 407
48	15167	0.3	1	14744 423
49	15403	0.3	1	14955 448
50	16510	0.3	1	16014 496
51	15677	0.3	1	15227 450
52	18746	0.3	1	18180 566
53	17467	0.3	1	16994 473
54	23554	0.3	1	22946 608
55	13170	0.3	1	12893 277
56	16492	0.3	1	16058 434
57	22740	0.3	1	22262 478
58	10727	0.3	1	10528 199
59	12951	0.3	1	12688 263
60	14361	0.3	1	14111 250
61	14747	0.3	1	14446 301
62	13698	0.3	1	13445 253
63	27651	0.3	1	27201 450
64	9822	0.3	1	9644 178
65	12728	0.3	1	12452 276
66	8696	0.3	1	8524 172
67	14665	0.3	1	14394 271
68	13822	0.3	1	13549 273
69	14624	0.3	1	14366 258
70	11436	0.3	1	11250 186
71	15322	0.3	1	15046 276
72	14069	0.3	1	13742 327
73	18283	0.3	1	17671 612
74	19520	0.3	1	18949 571
75	28941	0.3	1	27944 997
76	199466	0.3	1	197318 2148
77	11723	0.3	1	11344 379
78	1488	0.3	1	1398 90
79	1029	0.3	1	954 75
80	863	0.3	1	813 50
81	979	0.3	1	924 55
82	724	0.3	1	679 45
83	1064	0.3	1	1008 56
84	1626	0.3	1	1573 53
85	1824	0.3	1	1755 69
86	2046	0.3	1	1996 50
87	1640	0.3	1	1565 75
88	1168	0.3	1	1126 42
89	691	0.3	1	640 51
90	411	0.3	1	377 34
91	393	0.3	1	362 31
92	273	0.3	1	235 38
93	354	0.3	1	313 41
94	208	0.3	1	180 28
95	305	0.3	1	266 39
96	212	0.3	1	187 25
97	260	0.3	1	221 39
98	169	0.3	1	138 31
99	251	0.3	1	222 29
100	185	0.3	1	146 39
101	215	0.3	1	177 38
102	134	0.3	1	106 28
103	168	0.3	1	131 37
104	115	0.3	1	93 22
105	150	0.3	1	125 25
106	97	0.3	1	76 21
107	132	0.3	1	93 39
108	83	0.3	1	58 25
109	122	0.3	1	86 36
110	71	0.3	1	51 20
111	106	0.3	1	86 20
112	71	0.3	1	47 24
113	73	0.3	1	52 21
114	43	0.3	1	27 16
115	58	0.3	1	34 24
116	32	0.3	1	9 23
117	48	0.3	1	29 19
118	36	0.3	1	18 18
119	35	0.3	1	13 22
120	23	0.3	1	9 14
121	49	0.3	1	24 25
122	28	0.3	1	11 17
123	40	0.3	1	18 22
124	30	0.3	1	5 25
125	37	0.3	1	14 23
126	28	0.3	1	4 24
127	27	0.3	1	3 24
128	31	0.3	1	1 30
129	26	0.3	1	7 19
130	19	0.3	1	2 17
131	21	0.3	1	3 18
132	21	0.3	1	0 21
133	14	0.3	1	3 11
134	14	0.3	1	2 12
135	17	0.3	1	2 15
136	21	0.3	1	2 19
137	18	0.3	1	1 17
138	15	0.3	1	0 15
139	5	0.3	1	0 5
140	21	0.3	1	2 19

[M::process] read 122790 sequences (13870153 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (39, 175696, 165, 39)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (138, 231, 683)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1773)
[M::mem_pestat] mean and std.dev: (394.31, 427.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2318)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (101, 168, 271)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 611)
[M::mem_pestat] mean and std.dev: (195.78, 121.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 54, 229)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 631)
[M::mem_pestat] mean and std.dev: (103.13, 127.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 832)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (187, 292, 463)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1015)
[M::mem_pestat] mean and std.dev: (267.44, 192.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1291)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 710164 reads in 1221.340 CPU sec, 153.867 real sec
[M::process] 0 single-end sequences; 122790 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 30499, 35, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (102, 168, 273)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (196.80, 122.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 43, 152)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 406)
[M::mem_pestat] mean and std.dev: (66.07, 81.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 122790 reads in 208.448 CPU sec, 26.690 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1214\tPL:Illumina\tPU:x\tLB:pherring\tSM:1214.TB96 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2425.919 sec; CPU: 14846.904 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
