==========================================
SLURM_JOB_ID = 5435732
SLURM_NODELIST = c9-95
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
745
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 676022 sequences (80000207 bp)...
[M::process] 0 single-end sequences; 676022 paired-end sequences
[M::process] read 681614 sequences (80000139 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (22, 172336, 155, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (145, 439, 3284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9562)
[M::mem_pestat] mean and std.dev: (1405.71, 1798.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12701)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 181, 315)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 733)
[M::mem_pestat] mean and std.dev: (224.90, 154.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 942)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 83, 465)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1333)
[M::mem_pestat] mean and std.dev: (179.74, 248.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1767)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (224, 791, 3113)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8891)
[M::mem_pestat] mean and std.dev: (1984.73, 2522.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12074)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 676022 reads in 1102.016 CPU sec, 151.023 real sec
[M::process] 0 single-end sequences; 681614 paired-end sequences
[M::process] read 682404 sequences (80000227 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (22, 173861, 165, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 332, 3823)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11101)
[M::mem_pestat] mean and std.dev: (1864.23, 2488.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14740)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 180, 315)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 737)
[M::mem_pestat] mean and std.dev: (224.30, 156.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 948)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 60, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 825)
[M::mem_pestat] mean and std.dev: (123.01, 165.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1090)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 436, 1184)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3058)
[M::mem_pestat] mean and std.dev: (688.00, 774.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3995)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 681614 reads in 1109.824 CPU sec, 148.340 real sec
[M::process] 0 single-end sequences; 682404 paired-end sequences
[M::process] read 677728 sequences (80000276 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (24, 173928, 193, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (213, 421, 891)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2247)
[M::mem_pestat] mean and std.dev: (411.40, 375.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2925)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 182, 319)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 747)
[M::mem_pestat] mean and std.dev: (227.68, 159.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 961)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 57, 417)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1191)
[M::mem_pestat] mean and std.dev: (163.32, 248.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1578)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 364, 996)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2596)
[M::mem_pestat] mean and std.dev: (513.04, 644.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3396)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 682404 reads in 1102.724 CPU sec, 149.886 real sec
[M::process] 0 single-end sequences; 677728 paired-end sequences
[M::process] read 681276 sequences (80000268 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (40, 173141, 177, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (141, 503, 2261)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6501)
[M::mem_pestat] mean and std.dev: (1202.16, 1589.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8621)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 181, 315)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 733)
[M::mem_pestat] mean and std.dev: (225.09, 155.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 942)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (25, 43, 191)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 523)
[M::mem_pestat] mean and std.dev: (74.87, 92.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 689)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (183, 445, 715)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1779)
[M::mem_pestat] mean and std.dev: (427.42, 363.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2311)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 677728 reads in 1102.040 CPU sec, 147.114 real sec
[M::process] 0 single-end sequences; 681276 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 173650, 170, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (252, 483, 1245)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3231)
[M::mem_pestat] mean and std.dev: (700.52, 765.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4224)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (103, 177, 309)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 721)
[M::mem_pestat] mean and std.dev: (220.55, 153.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 927)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 102, 745)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2173)
[M::mem_pestat] mean and std.dev: (287.03, 432.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2887)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (217, 623, 1750)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4816)
[M::mem_pestat] mean and std.dev: (732.75, 902.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6349)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 681584 sequences (80000224 bp)...
[M::mem_process_seqs] Processed 681276 reads in 1108.556 CPU sec, 153.768 real sec
[M::process] 0 single-end sequences; 681584 paired-end sequences
[M::process] read 683554 sequences (80000073 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 173644, 179, 24)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (189, 309, 3701)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10725)
[M::mem_pestat] mean and std.dev: (1621.41, 2442.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14237)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 180, 314)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 734)
[M::mem_pestat] mean and std.dev: (224.17, 155.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 944)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 62, 269)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 741)
[M::mem_pestat] mean and std.dev: (128.89, 160.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 977)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (229, 471, 3521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10105)
[M::mem_pestat] mean and std.dev: (1743.54, 2455.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13397)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 681584 reads in 1098.528 CPU sec, 147.006 real sec
[M::process] 0 single-end sequences; 683554 paired-end sequences
[M::process] read 683420 sequences (80000087 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 173843, 150, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 331, 705)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1723)
[M::mem_pestat] mean and std.dev: (354.88, 238.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2232)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 182, 312)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 722)
[M::mem_pestat] mean and std.dev: (223.61, 151.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 927)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 50, 388)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1108)
[M::mem_pestat] mean and std.dev: (139.09, 219.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1468)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (308, 916, 4602)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13190)
[M::mem_pestat] mean and std.dev: (2331.88, 2629.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17484)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 683554 reads in 1108.020 CPU sec, 150.204 real sec
[M::process] 0 single-end sequences; 683420 paired-end sequences
[M::process] read 681610 sequences (80000025 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (32, 172691, 179, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (160, 399, 1467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4081)
[M::mem_pestat] mean and std.dev: (774.67, 994.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5388)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 184, 313)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 723)
[M::mem_pestat] mean and std.dev: (224.93, 151.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 928)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 133, 524)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1508)
[M::mem_pestat] mean and std.dev: (228.52, 303.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2000)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (234, 644, 1596)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4320)
[M::mem_pestat] mean and std.dev: (817.28, 897.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5682)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 683420 reads in 1135.180 CPU sec, 153.938 real sec
[M::process] 0 single-end sequences; 681610 paired-end sequences
[M::process] read 683314 sequences (80000194 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (30, 172710, 179, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (153, 752, 3564)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10386)
[M::mem_pestat] mean and std.dev: (2434.17, 2926.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14141)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 186, 318)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 736)
[M::mem_pestat] mean and std.dev: (227.61, 154.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 945)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 71, 271)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 759)
[M::mem_pestat] mean and std.dev: (113.41, 148.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1003)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (232, 369, 3104)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8848)
[M::mem_pestat] mean and std.dev: (1561.59, 2187.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11720)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 681610 reads in 1124.892 CPU sec, 152.014 real sec
[M::process] 0 single-end sequences; 683314 paired-end sequences
[M::process] read 683220 sequences (80000000 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 173516, 170, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (103, 270, 816)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2242)
[M::mem_pestat] mean and std.dev: (439.50, 514.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2955)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 180, 305)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 703)
[M::mem_pestat] mean and std.dev: (219.32, 147.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 902)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 92, 390)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1102)
[M::mem_pestat] mean and std.dev: (195.46, 243.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1458)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 361, 726)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1640)
[M::mem_pestat] mean and std.dev: (306.07, 176.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2097)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 683314 reads in 1119.104 CPU sec, 151.467 real sec
[M::process] 0 single-end sequences; 683220 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (44, 172775, 170, 33)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (189, 370, 609)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1449)
[M::mem_pestat] mean and std.dev: (324.30, 208.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1869)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 180, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (219.85, 147.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 903)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 65, 272)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (132.02, 156.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 995)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (208, 664, 4760)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13864)
[M::mem_pestat] mean and std.dev: (2406.82, 2936.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18416)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 683220 reads in 1112.216 CPU sec, 146.711 real sec
Finished in 1964.62 s (430 us/read; 0.14 M reads/minute).

=== Summary ===

Total read pairs processed:          4,570,121
  Read 1 with adapter:               1,385,225 (30.3%)
  Read 2 with adapter:               1,269,029 (27.8%)
Pairs that were too short:             584,777 (12.8%)
Pairs written (passing filters):     3,985,344 (87.2%)

Total basepairs processed: 1,371,036,300 bp
  Read 1:   685,518,150 bp
  Read 2:   685,518,150 bp
Quality-trimmed:             323,333,440 bp (23.6%)
  Read 1:   161,666,720 bp
  Read 2:   161,666,720 bp
Total written (filtered):    935,418,195 bp (68.2%)
  Read 1:   479,339,414 bp
  Read 2:   456,078,781 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1385225 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.3%
  C: 40.6%
  G: 30.5%
  T: 17.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	68907	71408.1	0	68907
4	31961	17852.0	0	31961
5	17264	4463.0	0	17264
6	14532	1115.8	0	14532
7	14768	278.9	0	14768
8	13206	69.7	0	13206
9	13173	17.4	0	13058 115
10	13315	4.4	1	12634 681
11	14440	1.1	1	13828 612
12	14745	0.3	1	14041 704
13	14194	0.3	1	13526 668
14	15373	0.3	1	14452 921
15	16582	0.3	1	15649 933
16	16959	0.3	1	15619 1340
17	17112	0.3	1	16298 814
18	15129	0.3	1	14400 729
19	17093	0.3	1	16399 694
20	17258	0.3	1	16492 766
21	17355	0.3	1	16667 688
22	18863	0.3	1	18180 683
23	12414	0.3	1	12121 293
24	12629	0.3	1	12320 309
25	16144	0.3	1	15603 541
26	12940	0.3	1	12611 329
27	16796	0.3	1	16117 679
28	13158	0.3	1	12830 328
29	18217	0.3	1	17491 726
30	19446	0.3	1	18893 553
31	13882	0.3	1	13478 404
32	15285	0.3	1	14892 393
33	16453	0.3	1	15932 521
34	15747	0.3	1	15319 428
35	17255	0.3	1	16865 390
36	16246	0.3	1	15824 422
37	17188	0.3	1	16806 382
38	14087	0.3	1	13828 259
39	17996	0.3	1	17599 397
40	18768	0.3	1	18343 425
41	14815	0.3	1	14537 278
42	15955	0.3	1	15686 269
43	19380	0.3	1	18973 407
44	12375	0.3	1	12134 241
45	27936	0.3	1	27473 463
46	5708	0.3	1	5598 110
47	10020	0.3	1	9814 206
48	11640	0.3	1	11412 228
49	14603	0.3	1	14304 299
50	13491	0.3	1	13287 204
51	13800	0.3	1	13491 309
52	12361	0.3	1	12148 213
53	14646	0.3	1	14342 304
54	13211	0.3	1	12986 225
55	15676	0.3	1	15437 239
56	11877	0.3	1	11683 194
57	14961	0.3	1	14677 284
58	13330	0.3	1	13102 228
59	14513	0.3	1	14206 307
60	12807	0.3	1	12633 174
61	14670	0.3	1	14416 254
62	12296	0.3	1	12122 174
63	18866	0.3	1	18586 280
64	14003	0.3	1	13820 183
65	12923	0.3	1	12746 177
66	17483	0.3	1	17292 191
67	15320	0.3	1	15041 279
68	13078	0.3	1	12848 230
69	19011	0.3	1	18563 448
70	20313	0.3	1	19975 338
71	28573	0.3	1	27827 746
72	207948	0.3	1	206558 1390
73	16263	0.3	1	15902 361
74	2282	0.3	1	2153 129
75	981	0.3	1	921 60
76	702	0.3	1	644 58
77	819	0.3	1	730 89
78	677	0.3	1	631 46
79	943	0.3	1	856 87
80	966	0.3	1	923 43
81	1304	0.3	1	1222 82
82	1126	0.3	1	1079 47
83	1155	0.3	1	1071 84
84	882	0.3	1	829 53
85	755	0.3	1	689 66
86	516	0.3	1	470 46
87	613	0.3	1	539 74
88	509	0.3	1	467 42
89	574	0.3	1	502 72
90	462	0.3	1	411 51
91	483	0.3	1	431 52
92	439	0.3	1	393 46
93	503	0.3	1	456 47
94	391	0.3	1	353 38
95	487	0.3	1	434 53
96	363	0.3	1	325 38
97	492	0.3	1	437 55
98	354	0.3	1	313 41
99	442	0.3	1	390 52
100	333	0.3	1	284 49
101	458	0.3	1	399 59
102	296	0.3	1	247 49
103	348	0.3	1	301 47
104	254	0.3	1	223 31
105	339	0.3	1	293 46
106	198	0.3	1	163 35
107	298	0.3	1	253 45
108	190	0.3	1	166 24
109	277	0.3	1	237 40
110	196	0.3	1	161 35
111	263	0.3	1	217 46
112	148	0.3	1	127 21
113	219	0.3	1	184 35
114	141	0.3	1	108 33
115	145	0.3	1	107 38
116	79	0.3	1	53 26
117	149	0.3	1	120 29
118	91	0.3	1	51 40
119	101	0.3	1	70 31
120	61	0.3	1	29 32
121	77	0.3	1	48 29
122	40	0.3	1	16 24
123	77	0.3	1	52 25
124	35	0.3	1	10 25
125	57	0.3	1	26 31
126	37	0.3	1	13 24
127	36	0.3	1	17 19
128	28	0.3	1	6 22
129	36	0.3	1	12 24
130	25	0.3	1	3 22
131	36	0.3	1	10 26
132	24	0.3	1	4 20
133	25	0.3	1	4 21
134	27	0.3	1	4 23
135	21	0.3	1	1 20
136	22	0.3	1	2 20
137	25	0.3	1	3 22
138	22	0.3	1	1 21
139	11	0.3	1	0 11
140	28	0.3	1	0 28

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1269029 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.5%
  C: 41.0%
  G: 29.4%
  T: 18.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	62785	71408.1	0	62785
4	24963	17852.0	0	24963
5	15293	4463.0	0	15293
6	11781	1115.8	0	11781
7	12761	278.9	0	12761
8	10705	69.7	0	10705
9	10642	17.4	0	10542 100
10	11481	4.4	1	10863 618
11	12128	1.1	1	11511 617
12	13812	0.3	1	12976 836
13	12559	0.3	1	11820 739
14	14434	0.3	1	13372 1062
15	15180	0.3	1	14218 962
16	16612	0.3	1	15348 1264
17	15749	0.3	1	14834 915
18	14328	0.3	1	13619 709
19	17200	0.3	1	16170 1030
20	14547	0.3	1	13986 561
21	13100	0.3	1	12458 642
22	14640	0.3	1	14024 616
23	11844	0.3	1	11359 485
24	14526	0.3	1	13927 599
25	13557	0.3	1	13049 508
26	13819	0.3	1	13389 430
27	12973	0.3	1	12547 426
28	13541	0.3	1	13086 455
29	13144	0.3	1	12742 402
30	12815	0.3	1	12385 430
31	15982	0.3	1	15346 636
32	17340	0.3	1	16770 570
33	15141	0.3	1	14498 643
34	9339	0.3	1	9095 244
35	14463	0.3	1	14009 454
36	11953	0.3	1	11649 304
37	11152	0.3	1	10878 274
38	11897	0.3	1	11561 336
39	13759	0.3	1	13307 452
40	12762	0.3	1	12360 402
41	13811	0.3	1	13313 498
42	16934	0.3	1	16338 596
43	12112	0.3	1	11773 339
44	12869	0.3	1	12525 344
45	12888	0.3	1	12500 388
46	14574	0.3	1	14124 450
47	14456	0.3	1	14084 372
48	14689	0.3	1	14214 475
49	14034	0.3	1	13572 462
50	14602	0.3	1	14153 449
51	13358	0.3	1	12987 371
52	15591	0.3	1	15157 434
53	14909	0.3	1	14440 469
54	21308	0.3	1	20695 613
55	10364	0.3	1	10122 242
56	13908	0.3	1	13558 350
57	21105	0.3	1	20571 534
58	8712	0.3	1	8552 160
59	10603	0.3	1	10360 243
60	12497	0.3	1	12223 274
61	11968	0.3	1	11676 292
62	11069	0.3	1	10838 231
63	22712	0.3	1	22323 389
64	7087	0.3	1	6939 148
65	11110	0.3	1	10901 209
66	7295	0.3	1	7160 135
67	11641	0.3	1	11428 213
68	12527	0.3	1	12259 268
69	11704	0.3	1	11484 220
70	8994	0.3	1	8855 139
71	11916	0.3	1	11617 299
72	11594	0.3	1	11323 271
73	14180	0.3	1	13625 555
74	15268	0.3	1	14759 509
75	24281	0.3	1	23417 864
76	171232	0.3	1	169298 1934
77	18702	0.3	1	18222 480
78	2802	0.3	1	2667 135
79	1592	0.3	1	1506 86
80	1236	0.3	1	1168 68
81	1178	0.3	1	1114 64
82	888	0.3	1	847 41
83	1165	0.3	1	1095 70
84	1972	0.3	1	1918 54
85	2290	0.3	1	2212 78
86	2803	0.3	1	2747 56
87	2244	0.3	1	2188 56
88	1676	0.3	1	1624 52
89	935	0.3	1	882 53
90	585	0.3	1	537 48
91	471	0.3	1	428 43
92	374	0.3	1	347 27
93	400	0.3	1	352 48
94	304	0.3	1	269 35
95	383	0.3	1	335 48
96	282	0.3	1	238 44
97	307	0.3	1	262 45
98	210	0.3	1	184 26
99	266	0.3	1	228 38
100	231	0.3	1	202 29
101	232	0.3	1	197 35
102	234	0.3	1	206 28
103	222	0.3	1	185 37
104	137	0.3	1	106 31
105	225	0.3	1	193 32
106	117	0.3	1	88 29
107	160	0.3	1	132 28
108	112	0.3	1	79 33
109	150	0.3	1	115 35
110	119	0.3	1	94 25
111	151	0.3	1	104 47
112	102	0.3	1	72 30
113	121	0.3	1	91 30
114	82	0.3	1	64 18
115	99	0.3	1	76 23
116	69	0.3	1	47 22
117	98	0.3	1	78 20
118	51	0.3	1	32 19
119	66	0.3	1	39 27
120	46	0.3	1	21 25
121	58	0.3	1	23 35
122	38	0.3	1	7 31
123	50	0.3	1	20 30
124	32	0.3	1	12 20
125	52	0.3	1	15 37
126	15	0.3	1	2 13
127	37	0.3	1	20 17
128	34	0.3	1	7 27
129	22	0.3	1	5 17
130	23	0.3	1	3 20
131	24	0.3	1	4 20
132	24	0.3	1	0 24
133	21	0.3	1	2 19
134	13	0.3	1	1 12
135	11	0.3	1	1 10
136	17	0.3	1	0 17
137	15	0.3	1	1 14
138	18	0.3	1	0 18
139	7	0.3	1	1 6
140	20	0.3	1	0 20

[M::process] read 474942 sequences (55416475 bp)...
[M::process] 0 single-end sequences; 474942 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (24, 120604, 124, 17)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (138, 387, 1307)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3645)
[M::mem_pestat] mean and std.dev: (689.45, 888.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4814)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 182, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 716)
[M::mem_pestat] mean and std.dev: (222.65, 150.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 919)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 93, 486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1396)
[M::mem_pestat] mean and std.dev: (194.52, 276.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1851)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 446, 2454)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6958)
[M::mem_pestat] mean and std.dev: (976.31, 1071.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9210)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 474942 reads in 757.600 CPU sec, 97.268 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa[bam_sort_core] merging from 3 files and 1 in-memory blocks...
 mem -p -R @RG\tID:0745\tPL:Illumina\tPU:x\tLB:pherring\tSM:0745.TB06 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2073.230 sec; CPU: 12988.656 sec
