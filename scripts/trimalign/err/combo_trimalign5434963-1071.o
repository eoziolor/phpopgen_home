==========================================
SLURM_JOB_ID = 5436058
SLURM_NODELIST = c11-91
==========================================
Module slurm/18.08.1 loaded 
Module openmpi/3.1.2 loaded 
Module bio3/1.0 loaded 
1071
This is cutadapt 1.15 with Python 3.6.5
Command line parameters: -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 -
Running on 8 cores
Trimming 2 adapters with at most 10.0% errors in paired-end mode ...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 651050 sequences (80000063 bp)...
[M::process] 0 single-end sequences; 651050 paired-end sequences
[M::process] read 658988 sequences (80000028 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 178863, 159, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (232, 932, 4642)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13462)
[M::mem_pestat] mean and std.dev: (2364.44, 2714.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17872)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 223, 336)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 740)
[M::mem_pestat] mean and std.dev: (245.21, 141.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 942)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 60, 383)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1093)
[M::mem_pestat] mean and std.dev: (153.59, 227.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1448)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (98, 297, 936)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2612)
[M::mem_pestat] mean and std.dev: (436.44, 464.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3450)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 651050 reads in 706.320 CPU sec, 97.600 real sec
[M::process] 0 single-end sequences; 658988 paired-end sequences
[M::process] read 656098 sequences (80000199 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 179215, 184, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (131, 207, 1018)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2792)
[M::mem_pestat] mean and std.dev: (274.90, 262.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3679)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 214, 323)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 711)
[M::mem_pestat] mean and std.dev: (235.90, 135.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 905)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 63, 371)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1045)
[M::mem_pestat] mean and std.dev: (172.27, 232.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1382)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (163, 537, 3260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9454)
[M::mem_pestat] mean and std.dev: (1817.32, 2426.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12551)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 658988 reads in 748.112 CPU sec, 99.387 real sec
[M::process] 0 single-end sequences; 656098 paired-end sequences
[M::process] read 649118 sequences (80000226 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (25, 179108, 169, 35)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (153, 304, 963)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2583)
[M::mem_pestat] mean and std.dev: (389.48, 322.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3393)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 217, 329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 727)
[M::mem_pestat] mean and std.dev: (239.49, 138.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 926)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 73, 448)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1284)
[M::mem_pestat] mean and std.dev: (186.46, 265.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1702)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (160, 313, 915)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2425)
[M::mem_pestat] mean and std.dev: (370.47, 300.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3180)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 656098 reads in 738.604 CPU sec, 100.209 real sec
[M::process] 0 single-end sequences; 649118 paired-end sequences
[M::process] read 655180 sequences (80000207 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 178950, 165, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (138, 298, 842)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2250)
[M::mem_pestat] mean and std.dev: (417.07, 428.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2954)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 224, 339)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 749)
[M::mem_pestat] mean and std.dev: (246.87, 142.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 954)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 53, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1361)
[M::mem_pestat] mean and std.dev: (167.16, 254.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1806)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 403, 630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1612)
[M::mem_pestat] mean and std.dev: (348.42, 221.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2103)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 649118 reads in 727.972 CPU sec, 97.402 real sec
[M::process] 0 single-end sequences; 655180 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 178613, 167, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (162, 361, 2035)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5781)
[M::mem_pestat] mean and std.dev: (1073.29, 1466.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7654)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 217, 328)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 724)
[M::mem_pestat] mean and std.dev: (238.98, 136.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 922)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 61, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1073)
[M::mem_pestat] mean and std.dev: (146.46, 206.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1420)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (172, 451, 906)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2374)
[M::mem_pestat] mean and std.dev: (371.74, 291.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3108)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 655180 reads in 724.492 CPU sec, 96.254 real sec
[M::process] read 654338 sequences (80000071 bp)...
[M::process] 0 single-end sequences; 654338 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (36, 178672, 171, 24)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (208, 582, 3381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9727)
[M::mem_pestat] mean and std.dev: (1720.08, 2350.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12900)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 217, 329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 727)
[M::mem_pestat] mean and std.dev: (239.56, 138.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 926)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 58, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 721)
[M::mem_pestat] mean and std.dev: (106.32, 150.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 952)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 807, 1903)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5173)
[M::mem_pestat] mean and std.dev: (1163.87, 1265.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6808)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 671966 sequences (80000236 bp)...
[M::mem_process_seqs] Processed 654338 reads in 719.440 CPU sec, 98.882 real sec
[M::process] 0 single-end sequences; 671966 paired-end sequences
[M::process] read 664790 sequences (80000079 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (35, 182502, 203, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (114, 303, 928)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2556)
[M::mem_pestat] mean and std.dev: (365.72, 379.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3370)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (127, 211, 319)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 703)
[M::mem_pestat] mean and std.dev: (232.31, 133.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 895)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 60, 481)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1391)
[M::mem_pestat] mean and std.dev: (175.78, 267.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1846)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 443, 731)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1929)
[M::mem_pestat] mean and std.dev: (365.64, 258.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2528)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 671966 reads in 745.436 CPU sec, 99.844 real sec
[M::process] 0 single-end sequences; 664790 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 181097, 181, 32)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (149, 232, 749)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1949)
[M::mem_pestat] mean and std.dev: (340.38, 294.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2549)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 212, 318)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 698)
[M::mem_pestat] mean and std.dev: (232.39, 131.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 888)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (26, 55, 293)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 827)
[M::mem_pestat] mean and std.dev: (120.47, 174.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1094)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (262, 473, 878)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2110)
[M::mem_pestat] mean and std.dev: (477.74, 396.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2726)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 664790 reads in 734.716 CPU sec, 99.088 real sec
[M::process] read 663426 sequences (80000161 bp)...
[M::process] 0 single-end sequences; 663426 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (37, 180650, 175, 27)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 462, 3204)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9204)
[M::mem_pestat] mean and std.dev: (1613.50, 2311.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12204)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 215, 325)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 717)
[M::mem_pestat] mean and std.dev: (236.77, 135.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 913)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (28, 58, 227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (97.77, 126.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 824)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (305, 632, 1322)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3356)
[M::mem_pestat] mean and std.dev: (690.96, 602.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4373)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 663426 reads in 731.044 CPU sec, 99.956 real sec
[M::process] read 673232 sequences (80000155 bp)...
[M::process] 0 single-end sequences; 673232 paired-end sequences
[M::process] read 662538 sequences (80000153 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (23, 181985, 180, 24)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (169, 419, 951)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2515)
[M::mem_pestat] mean and std.dev: (400.89, 346.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3297)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 211, 319)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 701)
[M::mem_pestat] mean and std.dev: (232.74, 132.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 892)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (27, 62, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 999)
[M::mem_pestat] mean and std.dev: (142.02, 206.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1323)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (173, 263, 854)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2216)
[M::mem_pestat] mean and std.dev: (366.45, 364.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2897)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 673232 reads in 740.044 CPU sec, 100.891 real sec
[M::process] 0 single-end sequences; 662538 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (34, 180455, 173, 30)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 356, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3306)
[M::mem_pestat] mean and std.dev: (498.83, 504.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4346)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 213, 321)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 707)
[M::mem_pestat] mean and std.dev: (234.35, 134.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 900)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (30, 64, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 990)
[M::mem_pestat] mean and std.dev: (140.09, 194.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1310)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 745, 4078)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11842)
[M::mem_pestat] mean and std.dev: (2195.27, 2774.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15724)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662538 reads in 729.848 CPU sec, 97.129 real sec
Finished in 2328.36 s (502 us/read; 0.12 M reads/minute).

=== Summary ===

Total read pairs processed:          4,640,798
  Read 1 with adapter:               1,032,264 (22.2%)
  Read 2 with adapter:                 969,764 (20.9%)
Pairs that were too short:             710,136 (15.3%)
Pairs written (passing filters):     3,930,662 (84.7%)

Total basepairs processed: 1,392,239,400 bp
  Read 1:   696,119,700 bp
  Read 2:   696,119,700 bp
Quality-trimmed:             365,502,100 bp (26.3%)
  Read 1:   182,751,050 bp
  Read 2:   182,751,050 bp
Total written (filtered):    952,570,159 bp (68.4%)
  Read 1:   488,951,870 bp
  Read 2:   463,618,289 bp

=== First read: Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1032264 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.8%
  C: 40.1%
  G: 29.2%
  T: 18.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
3	80453	72512.5	0	80453
4	33804	18128.1	0	33804
5	15875	4532.0	0	15875
6	12193	1133.0	0	12193
7	12291	283.3	0	12291
8	10734	70.8	0	10734
9	10788	17.7	0	10650 138
10	10562	4.4	1	9997 565
11	11271	1.1	1	10756 515
12	11593	0.3	1	11056 537
13	11295	0.3	1	10834 461
14	11775	0.3	1	11188 587
15	12697	0.3	1	12008 689
16	13257	0.3	1	12343 914
17	13152	0.3	1	12611 541
18	11799	0.3	1	11264 535
19	13293	0.3	1	12785 508
20	12886	0.3	1	12320 566
21	13915	0.3	1	13306 609
22	13739	0.3	1	13219 520
23	10108	0.3	1	9774 334
24	9536	0.3	1	9250 286
25	12082	0.3	1	11606 476
26	10135	0.3	1	9820 315
27	12068	0.3	1	11558 510
28	10305	0.3	1	9948 357
29	14305	0.3	1	13643 662
30	14785	0.3	1	14255 530
31	10676	0.3	1	10254 422
32	11448	0.3	1	11085 363
33	11734	0.3	1	11299 435
34	12348	0.3	1	11956 392
35	12768	0.3	1	12380 388
36	13006	0.3	1	12605 401
37	12781	0.3	1	12420 361
38	10533	0.3	1	10256 277
39	13616	0.3	1	13246 370
40	14989	0.3	1	14599 390
41	11254	0.3	1	11007 247
42	11824	0.3	1	11548 276
43	15121	0.3	1	14780 341
44	9123	0.3	1	8920 203
45	21133	0.3	1	20754 379
46	3959	0.3	1	3866 93
47	6862	0.3	1	6723 139
48	8169	0.3	1	7995 174
49	10360	0.3	1	10106 254
50	10006	0.3	1	9838 168
51	9804	0.3	1	9621 183
52	8861	0.3	1	8696 165
53	10247	0.3	1	10035 212
54	9587	0.3	1	9422 165
55	11305	0.3	1	11092 213
56	7974	0.3	1	7841 133
57	10818	0.3	1	10634 184
58	9581	0.3	1	9400 181
59	10019	0.3	1	9827 192
60	9106	0.3	1	8969 137
61	10231	0.3	1	10048 183
62	8864	0.3	1	8700 164
63	13554	0.3	1	13326 228
64	10270	0.3	1	10117 153
65	9038	0.3	1	8904 134
66	13213	0.3	1	13023 190
67	11129	0.3	1	10915 214
68	9442	0.3	1	9286 156
69	13719	0.3	1	13420 299
70	14813	0.3	1	14531 282
71	19601	0.3	1	19134 467
72	118594	0.3	1	117908 686
73	6777	0.3	1	6602 175
74	945	0.3	1	894 51
75	444	0.3	1	385 59
76	369	0.3	1	320 49
77	433	0.3	1	368 65
78	381	0.3	1	340 41
79	528	0.3	1	467 61
80	449	0.3	1	405 44
81	654	0.3	1	580 74
82	519	0.3	1	468 51
83	578	0.3	1	526 52
84	418	0.3	1	374 44
85	476	0.3	1	411 65
86	336	0.3	1	276 60
87	380	0.3	1	322 58
88	321	0.3	1	269 52
89	335	0.3	1	284 51
90	251	0.3	1	207 44
91	344	0.3	1	285 59
92	256	0.3	1	216 40
93	332	0.3	1	273 59
94	236	0.3	1	199 37
95	270	0.3	1	228 42
96	202	0.3	1	168 34
97	289	0.3	1	238 51
98	209	0.3	1	161 48
99	262	0.3	1	210 52
100	195	0.3	1	151 44
101	219	0.3	1	177 42
102	172	0.3	1	144 28
103	205	0.3	1	164 41
104	129	0.3	1	108 21
105	169	0.3	1	137 32
106	120	0.3	1	86 34
107	143	0.3	1	107 36
108	105	0.3	1	75 30
109	142	0.3	1	104 38
110	109	0.3	1	67 42
111	121	0.3	1	90 31
112	81	0.3	1	56 25
113	116	0.3	1	83 33
114	67	0.3	1	40 27
115	91	0.3	1	49 42
116	53	0.3	1	23 30
117	63	0.3	1	35 28
118	45	0.3	1	17 28
119	70	0.3	1	43 27
120	52	0.3	1	23 29
121	59	0.3	1	25 34
122	32	0.3	1	15 17
123	50	0.3	1	30 20
124	41	0.3	1	7 34
125	31	0.3	1	14 17
126	31	0.3	1	7 24
127	31	0.3	1	12 19
128	42	0.3	1	4 38
129	35	0.3	1	12 23
130	29	0.3	1	5 24
131	38	0.3	1	10 28
132	23	0.3	1	1 22
133	31	0.3	1	8 23
134	28	0.3	1	0 28
135	22	0.3	1	5 17
136	14	0.3	1	0 14
137	23	0.3	1	1 22
138	25	0.3	1	0 25
139	21	0.3	1	0 21
140	21	0.3	1	0 21

=== Second read: Adapter 2 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 969764 times.

No. of allowed errors:
0-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.7%
  C: 40.1%
  G: 29.1%
  T: 19.1%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
3	72233	72512.5	0	72233
4	28910	18128.1	0	28910
5	14697	4532.0	0	14697
6	11144	1133.0	0	11144
7	10757	283.3	0	10757
8	9422	70.8	0	9422
9	9900	17.7	0	9757 143
10	9219	4.4	1	8680 539
11	10275	1.1	1	9781 494
12	10735	0.3	1	10160 575
13	10488	0.3	1	9950 538
14	10839	0.3	1	10228 611
15	12107	0.3	1	11403 704
16	12247	0.3	1	11456 791
17	11525	0.3	1	10937 588
18	11537	0.3	1	10955 582
19	14300	0.3	1	13590 710
20	11253	0.3	1	10849 404
21	9251	0.3	1	8902 349
22	11501	0.3	1	11051 450
23	8577	0.3	1	8240 337
24	10703	0.3	1	10246 457
25	11059	0.3	1	10643 416
26	10383	0.3	1	10068 315
27	10213	0.3	1	9893 320
28	10762	0.3	1	10363 399
29	10658	0.3	1	10307 351
30	8773	0.3	1	8473 300
31	11112	0.3	1	10711 401
32	10786	0.3	1	10444 342
33	9962	0.3	1	9588 374
34	9858	0.3	1	9579 279
35	9793	0.3	1	9448 345
36	12646	0.3	1	12255 391
37	8050	0.3	1	7860 190
38	9200	0.3	1	8965 235
39	11411	0.3	1	11127 284
40	9357	0.3	1	9173 184
41	9026	0.3	1	8823 203
42	8971	0.3	1	8748 223
43	10239	0.3	1	9887 352
44	9466	0.3	1	9187 279
45	11471	0.3	1	11048 423
46	12090	0.3	1	11731 359
47	10401	0.3	1	10174 227
48	9333	0.3	1	9094 239
49	9953	0.3	1	9698 255
50	10377	0.3	1	10084 293
51	10123	0.3	1	9845 278
52	12630	0.3	1	12265 365
53	11015	0.3	1	10747 268
54	12446	0.3	1	12177 269
55	8592	0.3	1	8398 194
56	10148	0.3	1	9925 223
57	12376	0.3	1	12116 260
58	7577	0.3	1	7459 118
59	8387	0.3	1	8211 176
60	8654	0.3	1	8494 160
61	9253	0.3	1	9049 204
62	8696	0.3	1	8525 171
63	14835	0.3	1	14590 245
64	7220	0.3	1	7079 141
65	7955	0.3	1	7811 144
66	6012	0.3	1	5929 83
67	9114	0.3	1	8958 156
68	8457	0.3	1	8303 154
69	9096	0.3	1	8967 129
70	7492	0.3	1	7384 108
71	9278	0.3	1	9097 181
72	9185	0.3	1	9006 179
73	10286	0.3	1	10006 280
74	11492	0.3	1	11234 258
75	15606	0.3	1	15074 532
76	119598	0.3	1	118598 1000
77	5454	0.3	1	5225 229
78	677	0.3	1	624 53
79	524	0.3	1	475 49
80	420	0.3	1	381 39
81	485	0.3	1	443 42
82	365	0.3	1	333 32
83	571	0.3	1	527 44
84	964	0.3	1	923 41
85	947	0.3	1	901 46
86	1034	0.3	1	992 42
87	913	0.3	1	867 46
88	655	0.3	1	620 35
89	396	0.3	1	357 39
90	247	0.3	1	203 44
91	224	0.3	1	184 40
92	156	0.3	1	124 32
93	188	0.3	1	148 40
94	161	0.3	1	124 37
95	187	0.3	1	149 38
96	124	0.3	1	91 33
97	140	0.3	1	102 38
98	128	0.3	1	102 26
99	147	0.3	1	116 31
100	117	0.3	1	87 30
101	149	0.3	1	115 34
102	109	0.3	1	86 23
103	140	0.3	1	98 42
104	83	0.3	1	52 31
105	106	0.3	1	63 43
106	71	0.3	1	46 25
107	108	0.3	1	72 36
108	76	0.3	1	36 40
109	76	0.3	1	54 22
110	71	0.3	1	45 26
111	74	0.3	1	51 23
112	46	0.3	1	35 11
113	80	0.3	1	58 22
114	64	0.3	1	37 27
115	63	0.3	1	29 34
116	40	0.3	1	15 25
117	40	0.3	1	24 16
118	30	0.3	1	9 21
119	52	0.3	1	20 32
120	31	0.3	1	12 19
121	47	0.3	1	17 30
122	35	0.3	1	7 28
123	38	0.3	1	9 29
124	36	0.3	1	6 30
125	33	0.3	1	14 19
126	16	0.3	1	4 12
127	31	0.3	1	11 20
128	20	0.3	1	4 16
129	37	0.3	1	11 26
130	25	0.3	1	1 24
131	24	0.3	1	8 16
132	25	0.3	1	2 23
133	29	0.3	1	1 28
134	19	0.3	1	1 18
135	22	0.3	1	4 18
136	18	0.3	1	0 18
137	22	0.3	1	3 19
138	27	0.3	1	2 25
139	17	0.3	1	0 17
140	17	0.3	1	0 17

[M::process] read 600600 sequences (72568581 bp)...
[M::process] 0 single-end sequences; 600600 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (33, 163745, 132, 34)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (110, 313, 1366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3878)
[M::mem_pestat] mean and std.dev: (573.83, 809.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5134)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 215, 326)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 722)
[M::mem_pestat] mean and std.dev: (237.34, 137.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (29, 91, 397)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1133)
[M::mem_pestat] mean and std.dev: (170.91, 218.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1501)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (220, 421, 1048)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2704)
[M::mem_pestat] mean and std.dev: (402.67, 292.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3532)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 600600 reads in 657.444 CPU sec, 85.017 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /home/eoziolor/program/bwa-0.7.17/bwa mem -p -R @RG\tID:1071\tPL:Illumina\tPU:x\tLB:pherring\tSM:1071.TB17 -t 8 /home/eoziolor/phgenome/data/genome/phgenome_masked.fasta -
[main] Real time: 2422.248 sec; CPU: 8718.916 sec
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
